{"version":3,"sources":["flat-ui-colors.min.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_colors","_htmlExport","_htmlExport2","_fetch","_fetch2","flatUiColors","export","colors","get","__dirname","_interopRequireWildcard","newObj","key","prototype","hasOwnProperty","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","protoProps","staticProps","_fs","fs","_path","path","_lodash","_","HtmlExport","shuffle","skeletonFile","resolve","buildDir","join","process","cwd","skeletonHtmlContent","colorHtmlContent","readFile","readFileSync","encoding","filename","existsSync","mkdirSync","buildFile","forEach","color","content","replace","writeFileSync","arguments","undefined","createFile","__WEBPACK_AMD_DEFINE_RESULT__","addMapEntry","map","pair","set","addSetEntry","add","apply","func","thisArg","args","arrayAggregator","array","setter","iteratee","accumulator","index","arrayConcat","other","othIndex","othLength","result","Array","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","arrayPush","values","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","baseExtremum","current","computed","baseFind","collection","eachFunc","retKey","baseFindIndex","fromRight","fromIndex","indexOfNaN","baseReduce","baseSortBy","comparer","sort","baseSum","baseTimes","n","baseToPairs","object","baseUnary","baseValues","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","checkGlobal","compareAscending","valIsNull","valIsUndef","valIsReflexive","othIsNull","othIsUndef","othIsReflexive","compareMultiple","orders","objCriteria","criteria","othCriteria","ordersLength","order","deburrLetter","letter","deburredLetters","escapeHtmlChar","chr","htmlEscapes","escapeStringChar","stringEscapes","isHostObject","toString","e","isIndex","reIsUint","test","MAX_SAFE_INTEGER","iteratorToArray","iterator","data","next","done","push","mapToArray","size","replaceHolders","placeholder","PLACEHOLDER","setToArray","stringSize","string","reHasComplexSymbol","reComplexSymbol","lastIndex","stringToArray","match","unescapeHtmlChar","htmlUnescapes","runInContext","context","lodash","isObjectLike","isArray","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","MAX_ARRAY_LENGTH","__views__","lazyClone","copyArray","lazyReverse","clone","lazyValue","dir","isArr","isRight","arrLength","view","getView","start","end","iteratees","iterLength","takeCount","nativeMin","LARGE_ARRAY_SIZE","baseWrapperValue","outer","iterIndex","type","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","Hash","hashDelete","hash","hashHas","hashGet","nativeCreate","HASH_UNDEFINED","hashSet","MapCache","clear","entry","mapClear","__data__","Map","mapDelete","isKeyable","assocDelete","mapGet","assocGet","mapHas","has","assocHas","mapSet","assocSet","SetCache","cacheHas","cache","cachePush","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","assocIndexOf","pop","splice","eq","assignInDefaults","objValue","srcValue","objectProto","assignMergeValue","assignValue","baseAggregator","baseEach","baseAssign","source","copyObject","keys","baseAt","paths","isNil","baseClamp","number","lower","upper","baseClone","isDeep","customizer","stack","isObject","initCloneArray","tag","getTag","isFunc","funcTag","genTag","isBuffer","cloneBuffer","objectTag","argsTag","cloneableTags","initCloneByTag","initCloneObject","copySymbols","stacked","baseForOwn","subValue","baseConforms","baseDelay","wait","FUNC_ERROR_TEXT","setTimeout","baseDifference","includes","isCommon","valuesLength","valuesIndex","baseEvery","baseFill","toInteger","toLength","baseFilter","baseFlatten","isStrict","isArrayLikeObject","isArguments","baseForIn","baseFor","keysIn","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","isKey","baseToPath","baseHas","getPrototypeOf","baseHasIn","baseInRange","nativeMax","baseIntersection","arrays","caches","seen","baseInverter","baseInvoke","parent","last","baseIsEqual","bitmask","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","isTypedArray","objIsObj","othIsObj","isSameTag","equalByTag","isPartial","PARTIAL_COMPARE_FLAG","objIsWrapped","othIsWrapped","equalArrays","equalObjects","baseIsMatch","matchData","noCustomizer","UNORDERED_COMPARE_FLAG","baseIteratee","identity","baseMatchesProperty","baseMatches","property","baseKeys","nativeKeys","baseKeysIn","baseMap","isArrayLike","getMatchData","hasIn","baseMerge","srcIndex","baseMergeDeep","newValue","mergeFunc","isPlainObject","toPlainObject","baseOrderBy","toIteratee","getIteratee","basePick","basePickBy","baseProperty","basePropertyDeep","basePullAll","basePullAllBy","basePullAt","indexes","previous","baseRandom","nativeFloor","nativeRandom","baseRange","step","nativeCeil","baseSet","nested","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","HALF_MAX_ARRAY_LENGTH","mid","baseSortedIndexBy","valIsNaN","isDef","isReflexive","setLow","MAX_ARRAY_INDEX","baseSortedUniq","baseSortedUniqBy","stringToPath","baseUniq","createSet","seenIndex","baseUnset","baseWhile","isDrop","actions","action","baseXor","baseZipObject","assignFunc","valsLength","buffer","slice","Ctor","constructor","copy","cloneArrayBuffer","arrayBuffer","byteLength","Uint8Array","cloneMap","cloneRegExp","regexp","reFlags","exec","cloneSet","cloneSymbol","symbol","Symbol","symbolValueOf","cloneTypedArray","typedArray","byteOffset","composeArgs","partials","holders","holdersLength","argsIndex","argsLength","leftIndex","leftLength","composeArgsRight","holdersIndex","rightIndex","rightLength","copyObjectWith","getSymbols","createAggregator","initializer","createAssigner","assigner","rest","sources","guard","isIterateeCall","createBaseEach","iterable","createBaseFor","keysFunc","createBaseWrapper","wrapper","fn","isBind","BIND_FLAG","createCtorWrapper","createCaseFirst","methodName","charAt","trailing","createCompounder","callback","words","deburr","thisBinding","baseCreate","createCurryWrapper","arity","createRecurryWrapper","createHybridWrapper","createFlow","funcs","prereq","thru","reverse","getFuncName","funcName","getData","isLaziable","ARY_FLAG","CURRY_FLAG","PARTIAL_FLAG","REARG_FLAG","plant","partialsRight","holdersRight","argPos","ary","isCurry","isCurryRight","argsHolders","isBindKey","reorder","isFlip","isAry","BIND_KEY_FLAG","CURRY_RIGHT_FLAG","FLIP_FLAG","createInverter","createOver","arrayFunc","createPadding","chars","strLength","padLength","repeat","createPartialWrapper","createRange","toNumber","wrapFunc","newArgPos","newsHolders","newHoldersRight","newPartials","newPartialsRight","PARTIAL_RIGHT_FLAG","CURRY_BOUND_FLAG","newData","setData","createRound","Math","precision","split","createWrapper","mergeData","baseSetData","isUnordered","arrValue","othValue","compared","arrayBufferTag","boolTag","dateTag","errorTag","name","message","numberTag","regexpTag","stringTag","mapTag","convert","setTag","symbolTag","objProps","objLength","othProps","skipCtor","objCtor","othCtor","realNames","otherFunc","toPairs","isStrictComparable","getNative","isNative","objectToString","transforms","hasPath","hasFunc","isLength","isString","input","isPrototype","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","indexKeys","String","reIsPlainProp","reIsDeepProp","proto","srcBitmask","newBitmask","isCombo","mergeDefaults","oldArray","rePropName","quote","reEscapeChar","toArrayLikeObject","toFunction","chunk","compact","drop","dropRight","dropRightWhile","dropWhile","fill","findIndex","findLastIndex","flatten","flattenDeep","fromPairs","pairs","head","indexOf","initial","separator","nativeJoin","lastIndexOf","pullAll","pullAllBy","remove","nativeReverse","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","tail","take","takeRight","takeRightWhile","takeWhile","uniq","uniqBy","uniqWith","unzip","group","unzipWith","zipObject","zipObjectDeep","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperFlatMap","wrapperNext","toArray","wrapperToIterator","wrapperPlant","wrapperReverse","wrapped","wrapperValue","every","filter","find","findLast","baseEachRight","flatMap","forEachRight","orderBy","reduce","reduceRight","reject","sample","sampleSize","rand","some","after","before","curry","curryRight","debounce","options","cancel","timeoutId","clearTimeout","maxTimeoutId","lastCalled","trailingCall","complete","isCalled","now","delayed","remaining","stamp","flush","maxDelayed","debounced","leading","maxWait","leadingCall","flip","memoize","resolver","memoized","Cache","negate","once","otherArgs","spread","throttle","unary","wrap","partial","cloneWith","cloneDeep","cloneDeepWith","gt","gte","propertyIsEnumerable","isArrayBuffer","getLength","isBoolean","isDate","isElement","nodeType","isEmpty","isEqual","isEqualWith","isError","isFinite","nativeIsFinite","isInteger","isMap","isMatch","isMatchWith","isNaN","isNumber","reIsNative","funcToString","reIsHostCtor","isNull","objectCtorString","isRegExp","isSafeInteger","isSet","isSymbol","typedArrayTags","isUndefined","isWeakMap","weakMapTag","isWeakSet","weakSetTag","lt","lte","iteratorSymbol","INFINITY","sign","MAX_INTEGER","remainder","valueOf","reTrim","isBinary","reIsBinary","reIsOctal","freeParseInt","reIsBadHex","NAN","toSafeInteger","symbolToString","create","properties","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","defaultValue","isProto","skipIndexes","propsLength","mapKeys","mapValues","omitBy","pickBy","setWith","toPairsIn","transform","unset","valuesIn","clamp","inRange","random","floating","temp","freeParseFloat","capitalize","upperFirst","toLowerCase","reLatin1","reComboMark","endsWith","position","escape","reHasUnescapedHtml","reUnescapedHtml","escapeRegExp","reHasRegExpChar","reRegExpChar","pad","padEnd","padStart","parseInt","radix","nativeParseInt","reHasHexPrefix","limit","startsWith","template","settings","templateSettings","assignInWith","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reNoMatch","reDelimiters","RegExp","reInterpolate","reEsTemplate","evaluate","sourceURL","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","Function","toLower","toUpper","toUpperCase","trim","trimEnd","reTrimEnd","trimStart","reTrimStart","truncate","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","search","substring","global","newEnd","unescape","reHasEscapedHtml","reEscapedHtml","pattern","reHasComplexWord","reComplexWord","reBasicWord","cond","conforms","constant","matches","matchesProperty","mixin","methodNames","noConflict","oldDash","noop","nthArg","propertyOf","times","toPath","uniqueId","prefix","idCounter","augend","addend","max","maxBy","mean","sum","min","minBy","subtract","minuend","subtrahend","sumBy","defaults","pick","contextProps","Date","Error","arrayProto","Buffer","moduleExports","Reflect","enumerate","getOwnPropertySymbols","ceil","floor","Set","WeakMap","metaMap","mapCtorString","setCtorString","weakMapCtorString","symbolProto","reEscape","reEvaluate","ctorString","count","HOT_SPAN","HOT_COUNT","concat","difference","differenceBy","differenceWith","intersection","mapped","intersectionBy","intersectionWith","pull","pullAt","union","unionBy","unionWith","without","xor","xorBy","xorWith","zip","zipWith","wrapperAt","countBy","groupBy","invokeMap","isProp","keyBy","partition","sortBy","bind","bindKey","defer","delay","overArgs","funcsLength","partialRight","rearg","assign","assignIn","assignWith","at","defaultsDeep","mergeWith","invert","invertBy","invoke","merge","omit","camelCase","word","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","bindAll","flow","flowRight","method","methodOf","over","overEvery","overSome","range","rangeRight","round","extend","extendWith","each","eachRight","first","VERSION","filtered","isFilter","LAZY_WHILE_FLAG","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","names","commit","toJSON","rsAstralRange","rsComboMarksRange","rsComboSymbolsRange","rsDingbatRange","rsLowerRange","rsMathOpRange","rsNonCharRange","rsQuoteRange","rsSpaceRange","rsUpperRange","rsVarRange","rsBreakRange","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsZWJ","rsLowerMisc","rsUpperMisc","reOptMod","rsOptVar","rsOptJoin","rsSeq","rsEmoji","rsSymbol","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","&","<",">","\"","'","`","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","objectTypes","function","\\","\n","\r"," "," ","parseFloat","freeExports","freeModule","freeGlobal","freeSelf","self","freeWindow","window","thisGlobal","webpackPolyfill","deprecate","children","Fetch"],"mappings":"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","file":"flat-ui-colors.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"fs\"), require(\"path\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"fs\", \"path\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"flatUiColors\"] = factory(require(\"fs\"), require(\"path\"));\n\telse\n\t\troot[\"flatUiColors\"] = factory(root[\"fs\"], root[\"path\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _colors = __webpack_require__(1);\n\t\n\tvar _htmlExport = __webpack_require__(2);\n\t\n\tvar _htmlExport2 = _interopRequireDefault(_htmlExport);\n\t\n\tvar _fetch = __webpack_require__(7);\n\t\n\tvar _fetch2 = _interopRequireDefault(_fetch);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar flatUiColors = {\n\t  export: new _htmlExport2.default(_colors.colors),\n\t  get: new _fetch2.default(_colors.colors)\n\t};\n\t\n\texports.default = flatUiColors;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\tvar colors = exports.colors = ['#0000f0', '#00101c', '#001630', '#001700', '#002952', '#002e5a', '#004774', '#0047fd', '#004c79', '#004d4d', '#004f78', '#005057', '#00587a', '#005f97', '#006666', '#008891', '#009085', '#009999', '#0099ff', '#009b83', '#00a49a', '#00a6c0', '#00aa85', '#00ac65', '#00afd1', '#00b1be', '#00b5b5', '#00c7ab', '#00ccc7', '#00d717', '#00dc8f', '#00f000', '#010035', '#017163', '#01c26e', '#02000d', '#02135c', '#02222b', '#025159', '#0295e2', '#031316', '#032e46', '#03a2fd', '#040200', '#043d5d', '#04ddac', '#050002', '#050f15', '#053542', '#0615f2', '#061b1c', '#0694ea', '#07090e', '#070d15', '#072527', '#074354', '#080808', '#084886', '#08aac7', '#090908', '#091414', '#0918ec', '#09557a', '#097109', '#097b73', '#0a0a0a', '#0a2037', '#0a3542', '#0a5008', '#0a710a', '#0a7379', '#0b0c07', '#0b8389', '#0c1024', '#0c1216', '#0c3a3b', '#0c486c', '#0c545c', '#0c555c', '#0e212c', '#0e9aa7', '#0ebb9f', '#0f0012', '#0f090a', '#0f0f0f', '#0f3057', '#0f595e', '#0f6177', '#0f705d', '#0fa7d2', '#0fbab7', '#10806e', '#10d2e5', '#111111', '#11132f', '#11156d', '#112233', '#112885', '#11303f', '#1136c7', '#116c53', '#11a8ab', '#11c7a8', '#12836d', '#12a563', '#131011', '#131a1e', '#131f49', '#136151', '#13ab45', '#146967', '#14967c', '#150605', '#153e63', '#158b93', '#161616', '#16171b', '#161d29', '#16204d', '#166670', '#167efb', '#1693a5', '#16a085', '#16a086', '#16c42d', '#174c4f', '#17696d', '#178ca6', '#17a98c', '#17b090', '#17d6f5', '#181303', '#181818', '#181d21', '#183153', '#188f67', '#18bc9c', '#1912fe', '#19262c', '#198f31', '#199ec7', '#1a1238', '#1a1a1a', '#1a4c6d', '#1abc9c', '#1b001e', '#1b052c', '#1b242b', '#1b6574', '#1ba1e6', '#1ba39c', '#1bb568', '#1bbc9b', '#1c2021', '#1c2236', '#1c252e', '#1c2924', '#1c57e1', '#1c9987', '#1ca1ad', '#1d1d29', '#1d1e1f', '#1d2247', '#1d2a34', '#1d628b', '#1dabb8', '#1dae8b', '#1e160b', '#1e272b', '#1e2938', '#1f0303', '#1f253d', '#1f2b37', '#1f2e3f', '#1f3a93', '#1f4d5e', '#1f9ea3', '#1fbba6', '#1fcf6d', '#200d07', '#202020', '#203040', '#203a4f', '#20a286', '#20b08c', '#21040f', '#212b40', '#216379', '#217fbc', '#218a9e', '#219e25', '#21baa6', '#22202b', '#222222', '#223242', '#223549', '#23221e', '#232c3d', '#234291', '#2393c2', '#2398c2', '#239fc2', '#23a84d', '#23a899', '#23b1ad', '#23b1c2', '#23b684', '#23bbb2', '#23fadc', '#24273a', '#243038', '#24422e', '#2481b2', '#249991', '#25042a', '#252928', '#25373d', '#254f51', '#259166', '#25a278', '#261b23', '#262606', '#263d4e', '#26c281', '#27331a', '#273325', '#27332c', '#27ae60', '#27ae61', '#27bca0', '#27d0b9', '#280b52', '#282256', '#282830', '#28a9bc', '#290b03', '#291709', '#291d1c', '#292447', '#29251c', '#292929', '#292e40', '#292f4f', '#293240', '#294543', '#297372', '#297aa3', '#297c74', '#2980b9', '#2980ba', '#298773', '#2a2927', '#2a2a2a', '#2a2b1f', '#2a2b42', '#2a2c45', '#2a3542', '#2a6e9e', '#2b0b0b', '#2b1e18', '#2b838e', '#2bb0bf', '#2c214d', '#2c2c2c', '#2c3e50', '#2c4055', '#2c544d', '#2c5957', '#2c82c9', '#2cc990', '#2d221c', '#2d2d2d', '#2d3e50', '#2d7344', '#2dcc70', '#2e2e2e', '#2e8a9c', '#2e8c80', '#2e928a', '#2ecc71', '#2ecd71', '#2edfc7', '#2f2331', '#2f2c35', '#2f2d2c', '#2f2f2f', '#2f343a', '#2f3491', '#2f79c3', '#2fe2d9', '#300600', '#301818', '#302823', '#302f2f', '#303030', '#30474d', '#304860', '#306097', '#3068b6', '#30d7bb', '#313324', '#313632', '#313840', '#313a42', '#313b4b', '#315c6d', '#31d0d6', '#31d6ce', '#320644', '#323232', '#323a45', '#324245', '#326876', '#32d9cb', '#331517', '#331b17', '#331d12', '#332522', '#332a17', '#332f29', '#333333', '#334657', '#336b5a', '#336e7b', '#33a828', '#342f52', '#343557', '#343738', '#344146', '#34495d', '#34495e', '#3498db', '#349935', '#34b297', '#34cbfd', '#353535', '#353c3e', '#353e43', '#35474e', '#354b48', '#35c187', '#360528', '#363636', '#363b4e', '#36c4d0', '#373746', '#373f16', '#374047', '#37465d', '#37575c', '#375b54', '#37767a', '#382e1b', '#383732', '#383745', '#383942', '#383d2c', '#3897d9', '#392541', '#393939', '#393b4e', '#394264', '#396a90', '#39b4ff', '#3a2c21', '#3a5194', '#3a6e7a', '#3b0102', '#3b3c3d', '#3b3f4c', '#3b482e', '#3b592a', '#3b7e87', '#3ba8a5', '#3bafbe', '#3bc391', '#3c2130', '#3c3741', '#3c68b1', '#3c81b5', '#3c8ab8', '#3c99ea', '#3d2a2a', '#3d3020', '#3d414d', '#3d8eb9', '#3d9472', '#3da4ab', '#3db0bf', '#3e033f', '#3e4651', '#3e49f2', '#3e6787', '#3e9471', '#3eb097', '#3f2110', '#3f303f', '#3f3067', '#3f3b47', '#3f3f3f', '#3f4259', '#3f4c46', '#3f4d58', '#3f4f59', '#3f5a69', '#40032c', '#40034d', '#401457', '#401f0e', '#40486d', '#404a60', '#409c97', '#40a7a0', '#40abd9', '#40bc86', '#413333', '#413c5e', '#414040', '#41452b', '#414755', '#414a52', '#415c71', '#416294', '#4193a6', '#41a35b', '#41bdbd', '#421e20', '#422e39', '#42420a', '#424242', '#424d53', '#424e5a', '#425c57', '#42729b', '#42787a', '#42afff', '#432522', '#432e41', '#43353d', '#435869', '#436266', '#4387b5', '#4387f5', '#43b73f', '#444444', '#444b54', '#449bb5', '#44b39d', '#44b9ff', '#44bbff', '#44cd94', '#45362e', '#453632', '#453e4a', '#455869', '#4589b0', '#45b739', '#462446', '#462a43', '#4633fe', '#464030', '#464a53', '#466a80', '#467e8f', '#468081', '#46adb3', '#47263b', '#475138', '#475152', '#478079', '#47b39d', '#47c9af', '#47d2e9', '#48393c', '#484830', '#48493b', '#484f59', '#48569e', '#48ad01', '#48b500', '#492363', '#49246b', '#492e25', '#494d4b', '#499642', '#49969b', '#4a4e4d', '#4a6b4e', '#4a8784', '#4ab7bf', '#4b3743', '#4b5942', '#4b6946', '#4bad08', '#4c515c', '#4c5d6c', '#4c86cc', '#4cd4b0', '#4d4933', '#4d4d4d', '#4d545e', '#4d5596', '#4d740d', '#4dac94', '#4dbdc2', '#4dc9a5', '#4e2772', '#4e4660', '#4ebe9f', '#4ecdc4', '#4edec2', '#4f2020', '#4f3b78', '#4f4f4f', '#4f576c', '#4f7076', '#4f8677', '#4fc671', '#501239', '#501c07', '#502a29', '#505d66', '#506468', '#52070c', '#523838', '#523d1e', '#523d1f', '#52645e', '#52883d', '#528ccb', '#52907b', '#532a79', '#534830', '#535d52', '#53baf9', '#53d769', '#53df83', '#542485', '#54483a', '#54573a', '#546a70', '#54acd2', '#54baa9', '#556270', '#557780', '#557d97', '#55c34d', '#560f47', '#563d28', '#5659c9', '#567e22', '#5692bf', '#5696d4', '#573a4c', '#575c56', '#5787ba', '#57c8f2', '#581620', '#584932', '#586474', '#587da7', '#588189', '#591516', '#592339', '#592d80', '#593106', '#595959', '#595e66', '#597df7', '#5991b1', '#59a9c2', '#59ae7f', '#59bcfb', '#59d490', '#5a5a5a', '#5a6e91', '#5a778c', '#5a999a', '#5ad4bc', '#5b1a14', '#5b2314', '#5b4b27', '#5b5b4d', '#5ba38b', '#5babe6', '#5bbae3', '#5bc0de', '#5bc6bc', '#5c4a36', '#5c4b38', '#5c584b', '#5c5c5c', '#5c6d7e', '#5c9f97', '#5cb4f7', '#5cccc8', '#5cd5e6', '#5cff00', '#5d574d', '#5d5d3e', '#5dd973', '#5e412f', '#5e593f', '#5e5b19', '#5e626c', '#5e6c31', '#5e7078', '#5eca7f', '#5f0f12', '#5f4b92', '#5f7174', '#5f7187', '#600000', '#603018', '#603838', '#60646d', '#6090a8', '#609ec1', '#60b0b7', '#60d2ff', '#61381b', '#61433b', '#61475e', '#6157d4', '#615a4a', '#616e7d', '#61707d', '#619a82', '#61a582', '#61c181', '#62524c', '#62525c', '#628e93', '#62c462', '#62c4ff', '#631515', '#63234f', '#632d48', '#63393e', '#635a51', '#635d4d', '#635f45', '#636464', '#636e06', '#637b82', '#638ead', '#639c89', '#642c1d', '#64413f', '#646152', '#647387', '#64c4af', '#64d98a', '#64ddbb', '#654323', '#656850', '#65878f', '#65888c', '#658999', '#65ad9e', '#65c6bb', '#65f511', '#664816', '#665555', '#666666', '#6687aa', '#66cc99', '#671a2e', '#67537a', '#67686b', '#677d8a', '#678efa', '#6797a1', '#682e2d', '#684644', '#685d61', '#687036', '#687e87', '#688d9b', '#68a9b3', '#696770', '#697e80', '#6a5250', '#6a5a15', '#6a6a6a', '#6a888c', '#6ab0aa', '#6ab1bb', '#6ad898', '#6b230b', '#6b2623', '#6b5336', '#6b5636', '#6b9b61', '#6bb18c', '#6c1827', '#6c4689', '#6c8784', '#6c8fb6', '#6c918e', '#6c9299', '#6cc0bf', '#6ccac9', '#6d0005', '#6d4b11', '#6d6966', '#6d808c', '#6d829d', '#6d918a', '#6d9329', '#6da0cd', '#6db18d', '#6dcff6', '#6ddf79', '#6e5d4b', '#6e6915', '#6e9996', '#6e9bd5', '#6ed4d8', '#6f2480', '#6f532a', '#6f7f54', '#702a87', '#703f17', '#705a54', '#706051', '#706f77', '#708580', '#708c7f', '#70a8af', '#710301', '#717790', '#718500', '#7186a3', '#71b1bb', '#71ba51', '#721128', '#721544', '#722809', '#726680', '#729176', '#72baac', '#72ccca', '#72f274', '#72fc82', '#735e67', '#73a5be', '#73a8af', '#73b1d6', '#73ba57', '#744c40', '#747468', '#748384', '#74a6cc', '#74b5aa', '#75536c', '#7566a9', '#75706b', '#7574a7', '#757a94', '#7585b6', '#766a6a', '#767d30', '#768a92', '#76a79f', '#76d1ec', '#776f70', '#777673', '#777788', '#777f34', '#778888', '#7790a6', '#779a92', '#779bf0', '#77abd6', '#785436', '#785edd', '#786048', '#788188', '#78c0a8', '#78c9ec', '#78d7e8', '#79857e', '#799412', '#79fa67', '#7a0000', '#7a7a16', '#7a7c46', '#7a858b', '#7a8879', '#7a922d', '#7a9a75', '#7a9fbf', '#7ab2b9', '#7ac974', '#7b513b', '#7b806b', '#7bb0a6', '#7bbbd6', '#7bcaa5', '#7c3c23', '#7c7654', '#7c7c7c', '#7ca39c', '#7cbcb5', '#7ceece', '#7d1424', '#7d370b', '#7d4a81', '#7d6707', '#7d6962', '#7d7870', '#7d9fa0', '#7db06d', '#7e3661', '#7e9e92', '#7ed2f7', '#7f7083', '#7f8c8d', '#7f8e8b', '#7fa453', '#7fa66c', '#7fc7e6', '#800149', '#804829', '#805562', '#80573c', '#806c53', '#80866c', '#80c4b7', '#811dbf', '#816432', '#8194bf', '#8199a3', '#819da1', '#81d1c4', '#81e2e6', '#82595d', '#825d27', '#82886e', '#82b9ad', '#82bbc2', '#836d6f', '#838ea2', '#83af9b', '#83d6de', '#83d8b6', '#847858', '#8482a7', '#848b85', '#849fbb', '#84a113', '#84b4bf', '#84ccd1', '#84ccef', '#84e1b1', '#8502d1', '#853870', '#857441', '#85763f', '#85838a', '#859372', '#8598a7', '#85c1e9', '#85d8c8', '#85e2ff', '#8657db', '#867182', '#867198', '#867da5', '#86d9cb', '#876235', '#87766c', '#87e8c6', '#8870ff', '#887777', '#888888', '#88abb2', '#88b2b4', '#88f159', '#897fba', '#89b2bb', '#89d55f', '#8a2d3c', '#8a6b4c', '#8a97c4', '#8a9e70', '#8b4d93', '#8b726b', '#8b8b8b', '#8bb7d9', '#8bcbde', '#8c3b3b', '#8c4248', '#8c7e51', '#8c7f3f', '#8cc7c2', '#8cf2ff', '#8d00d4', '#8d5e66', '#8d6b45', '#8d744d', '#8d8276', '#8d8676', '#8d8b0c', '#8d8f6f', '#8da778', '#8dc0b2', '#8e44ad', '#8e95b1', '#8eb89f', '#8f3fb0', '#8f44ab', '#8f4e11', '#8f6910', '#8f6f40', '#8f934d', '#8f9742', '#8fa8f6', '#8fb1b4', '#904a3b', '#90828f', '#908e88', '#909060', '#909090', '#90a5ba', '#90d2ad', '#913d88', '#916540', '#918e45', '#919140', '#919188', '#91ced7', '#91dff4', '#922f4c', '#9258cb', '#925f2f', '#92787b', '#927fbf', '#92899f', '#929292', '#92d690', '#92dbc7', '#92f22a', '#93734c', '#9374f5', '#93bfb6', '#93ebdd', '#94773d', '#949286', '#953163', '#959ca0', '#95a5a6', '#95c4e8', '#95e7ed', '#962543', '#96281b', '#967648', '#9684a3', '#968d6c', '#969356', '#969c6b', '#969da7', '#96bd86', '#96d4bf', '#973939', '#974b17', '#977bab', '#97b088', '#97c573', '#97ce68', '#98091b', '#981066', '#985004', '#98583f', '#988c8e', '#98a2a4', '#98ad79', '#99005c', '#99a0ff', '#9a12b3', '#9a30dd', '#9a514a', '#9a7bc2', '#9a835a', '#9ab1bf', '#9b5148', '#9b59b6', '#9bacbc', '#9bdbde', '#9c215f', '#9c410a', '#9c7a83', '#9cca82', '#9ce4ff', '#9da5a6', '#9daba2', '#9dc24e', '#9dc400', '#9e1616', '#9e2f72', '#9e373b', '#9e3a52', '#9e3e25', '#9e5428', '#9e58dc', '#9e6c36', '#9e8c02', '#9e8e5a', '#9e8e6a', '#9e906e', '#9e9a96', '#9e9d9b', '#9ea36b', '#9ea97f', '#9f0088', '#9fab5f', '#9fff97', '#a08675', '#a0939a', '#a0a08b', '#a0a0a0', '#a0ab5c', '#a0b58d', '#a0c2c1', '#a0cab5', '#a0da42', '#a0db9b', '#a0f601', '#a14c10', '#a15e5e', '#a18989', '#a19c69', '#a1a09f', '#a1aca0', '#a1ea99', '#a260aa', '#a26829', '#a26d67', '#a29679', '#a29d39', '#a2a2a2', '#a2b2b1', '#a2c648', '#a3310f', '#a3685f', '#a38149', '#a38f84', '#a39951', '#a3b3c0', '#a42a15', '#a4492e', '#a49a87', '#a4c16c', '#a4cf57', '#a4d4e8', '#a55b4a', '#a59897', '#a5abcb', '#a5af4e', '#a5bac3', '#a5cae6', '#a5e65a', '#a64cce', '#a68933', '#a69688', '#a6a501', '#a6b87a', '#a6cd8e', '#a72154', '#a78476', '#a86e3a', '#a88e54', '#a8b273', '#a8bed3', '#a8cd1b', '#a99a01', '#a9a5b6', '#a9b38f', '#a9c5ff', '#a9d3aa', '#aa1f03', '#aa61ce', '#aa8c91', '#aa99ba', '#aaa1eb', '#aaaaaa', '#aab0b2', '#aab69b', '#aad8a3', '#aaec53', '#ab2a2f', '#ab3f3f', '#ab6147', '#ab9752', '#ababab', '#abb2b5', '#abd158', '#abdd55', '#abe0cd', '#abe41b', '#abee4d', '#ac544e', '#ac6a5a', '#ac6dff', '#aca46f', '#acaba0', '#ade1ff', '#ae44c8', '#ae9181', '#ae9e8f', '#aea294', '#aeafa1', '#aeb0b0', '#aeb176', '#aedd46', '#aedde5', '#aee588', '#af7ac4', '#af7f4b', '#afa32d', '#afc87d', '#afd896', '#affca2', '#b05155', '#b05f6d', '#b0a297', '#b0a4be', '#b0bc96', '#b0d31f', '#b0dacc', '#b1215e', '#b17e22', '#b1a08e', '#b1af58', '#b1cfd6', '#b1dcc8', '#b27257', '#b29671', '#b29b8e', '#b2ac94', '#b2c8d6', '#b3005a', '#b30700', '#b30802', '#b32d2e', '#b3bb19', '#b3c5c5', '#b3d5de', '#b43024', '#b43c45', '#b48b8b', '#b491e3', '#b49b05', '#b4b9c3', '#b4c248', '#b51921', '#b52300', '#b583d8', '#b58d2b', '#b5aa4a', '#b5afa2', '#b5b09c', '#b5b192', '#b5dd6f', '#b63165', '#b66e1e', '#b68b84', '#b6c8d1', '#b6e78b', '#b6ff75', '#b72e09', '#b73672', '#b73b7a', '#b76358', '#b7767a', '#b79471', '#b7a460', '#b7b4b6', '#b7b4c5', '#b7c09b', '#b7e20c', '#b7ef9c', '#b7ff5e', '#b86a54', '#b8959b', '#b8b6a6', '#b8b82a', '#b8b89f', '#b8bd20', '#b8ccca', '#b995e9', '#b9a175', '#b9b753', '#b9d907', '#b9ffa1', '#ba4e34', '#ba5445', '#ba870e', '#ba9200', '#ba9c61', '#baad7b', '#bad5f0', '#bada55', '#badeb2', '#bb1f5c', '#bb3658', '#bb4d3e', '#bba900', '#bbb7a4', '#bbbbbd', '#bbffc6', '#bc8657', '#bcbcbc', '#bcd4ac', '#bcff7c', '#bd3c4e', '#bdbfac', '#bdc3c7', '#bde3de', '#bde6f8', '#be7764', '#be8b5c', '#be90d4', '#beae00', '#bed9de', '#bf4a67', '#bf4acc', '#bf8069', '#bf8658', '#bfb095', '#bfb0a3', '#bfb992', '#bfbc8f', '#bfc429', '#bfcc5a', '#bfe6ec', '#c0392b', '#c07800', '#c087c5', '#c0925e', '#c0a878', '#c0b38d', '#c0ba78', '#c0bb89', '#c12a1d', '#c15a2d', '#c1654d', '#c18b4d', '#c1c1c1', '#c1d459', '#c2004e', '#c200bb', '#c25396', '#c26451', '#c2b6d6', '#c2c0cd', '#c2c671', '#c2e0f4', '#c2ed6c', '#c34b4b', '#c3c2a5', '#c3c3b7', '#c3cfa6', '#c3eaf1', '#c4304a', '#c43829', '#c452a0', '#c46e55', '#c4a16b', '#c4a956', '#c4bbf0', '#c4c4c4', '#c4f4eb', '#c52606', '#c5dbca', '#c61357', '#c61c15', '#c6826b', '#c69f90', '#c6aed8', '#c6f0da', '#c71313', '#c74e3e', '#c7852a', '#c79c7a', '#c7c2b5', '#c7c398', '#c7c6c5', '#c7f2ff', '#c7f464', '#c82647', '#c878ab', '#c8c8a9', '#c8cdd2', '#c8d8d8', '#c90053', '#c93746', '#c96614', '#c97131', '#c9c1fe', '#c9c4af', '#c9c7af', '#c9cca9', '#c9cf31', '#c9d1b1', '#c9ecf8', '#c9ffa9', '#ca5f71', '#ca6769', '#ca8d6e', '#cacca9', '#cacead', '#cad26d', '#cb8b33', '#cbc9bb', '#cbe092', '#cbe32d', '#cc0099', '#cc4949', '#cc5094', '#cc666e', '#cc9194', '#cc9766', '#cc9a70', '#cca486', '#ccbb87', '#ccbf35', '#ccbfbe', '#cccccc', '#ccdfcc', '#ccebc0', '#cd1a38', '#cd3e52', '#cd6b97', '#cd844d', '#cd9c64', '#cdae80', '#cdc99f', '#cdcba6', '#ce4847', '#ce7d16', '#ce8948', '#ce9d27', '#ceaba5', '#cebca8', '#cebcb2', '#cebeff', '#cec6cf', '#ceccde', '#cecece', '#ceeb43', '#cf000f', '#cf352b', '#cf6548', '#cf6991', '#cf6fd0', '#cfa561', '#cff1d1', '#d01132', '#d0402f', '#d04e33', '#d06619', '#d0cfcf', '#d0d0d0', '#d0d168', '#d0e5d5', '#d10b0b', '#d14841', '#d15406', '#d1894d', '#d19254', '#d1a79b', '#d1aa7f', '#d1cd8e', '#d1ce97', '#d1d5d8', '#d1d6a9', '#d1e0a6', '#d1e7b9', '#d2580f', '#d28e81', '#d2baa2', '#d2d7d3', '#d2e8ec', '#d33257', '#d35400', '#d3ca52', '#d3ced8', '#d3d1ad', '#d3e6be', '#d3e9ba', '#d3ebb2', '#d41568', '#d44658', '#d44a59', '#d46b5b', '#d4908f', '#d49b74', '#d4af61', '#d4bebc', '#d4bf21', '#d4c6c6', '#d4cd9d', '#d4d4d4', '#d4dbc8', '#d55b06', '#d5c190', '#d5d1d2', '#d64541', '#d6523c', '#d67424', '#d6786b', '#d6976b', '#d69942', '#d6b387', '#d6bfa5', '#d6c0ce', '#d6ca8b', '#d6d6d6', '#d6dac2', '#d6dbdf', '#d6e2ce', '#d6f7fc', '#d6ffe8', '#d71a75', '#d76e93', '#d79535', '#d7c6ab', '#d81830', '#d8335b', '#d8a9a1', '#d8b133', '#d8d9de', '#d8e1e8', '#d8e2ec', '#d8ffc2', '#d95058', '#d95062', '#d96200', '#d96659', '#d98b3a', '#d9940b', '#d9983e', '#d99f7e', '#d9b17e', '#d9bbae', '#d9be93', '#d9c46a', '#d9c6b5', '#d9cacf', '#d9cb84', '#d9cec7', '#d9cf7e', '#d9d2ec', '#d9d4cb', '#d9d7cc', '#d9dd5f', '#d9f5be', '#da8254', '#daa1ad', '#dac897', '#dacdb6', '#dadada', '#dae7d0', '#dae9bd', '#daf9ff', '#db0304', '#db15ba', '#db78ac', '#db8114', '#db8d17', '#db9971', '#db9c38', '#dbaa16', '#dbc2a4', '#dbcb8e', '#dbccad', '#dbd820', '#dbd880', '#dbdbe8', '#dbe5e6', '#dbfcd6', '#dc626f', '#dc6b7c', '#dc9855', '#dcb4a8', '#dcc5e8', '#dcce5f', '#dcdcd4', '#dcdde0', '#dce3c9', '#dd5317', '#dd5f91', '#dd6f47', '#dd9949', '#ddb68b', '#dde6d6', '#ddecd2', '#ddf075', '#de2e38', '#de3c3c', '#de633a', '#de8d3c', '#de9331', '#dea32c', '#deb48a', '#debaac', '#debbb8', '#dec89e', '#decea3', '#ded1fc', '#ded410', '#ded7e6', '#ded8d3', '#dee1bd', '#def4e4', '#df4e0f', '#df554f', '#df82ac', '#dfb7ad', '#dfdfd0', '#dfe4e8', '#e01931', '#e0378a', '#e08267', '#e0af87', '#e0b05d', '#e0c3a5', '#e0c3b5', '#e0ce64', '#e0d5b2', '#e0e4cc', '#e0e7a4', '#e13b39', '#e15951', '#e1b493', '#e1bdbd', '#e1e0b2', '#e1f2f9', '#e1fafc', '#e1ffb0', '#e22211', '#e24c3f', '#e26688', '#e26868', '#e26e67', '#e27e1c', '#e2999f', '#e2a743', '#e2ae80', '#e2bccf', '#e2d6be', '#e2dbbc', '#e2e2e2', '#e2e770', '#e2eea4', '#e2f224', '#e3000e', '#e32f6c', '#e35252', '#e36363', '#e36937', '#e38b73', '#e3b445', '#e3b863', '#e3b9b6', '#e3c39d', '#e3d081', '#e3d2b8', '#e3e3e3', '#e3e7b1', '#e3e8fa', '#e3eeff', '#e47361', '#e4b6a6', '#e4c831', '#e4dfdc', '#e4dfdf', '#e4e4e4', '#e4f4bd', '#e5100b', '#e51a31', '#e56996', '#e5e0b7', '#e5e5e5', '#e5fe03', '#e5fff2', '#e60501', '#e63054', '#e63e6d', '#e64c65', '#e6567a', '#e65c9e', '#e66229', '#e66a39', '#e67e22', '#e6868e', '#e69896', '#e6c3af', '#e6c3c1', '#e6dc29', '#e6dcdb', '#e6ddb4', '#e6e8e1', '#e6ebb8', '#e6ecec', '#e6f0ed', '#e6f4fa', '#e6f644', '#e72c28', '#e74c3c', '#e75926', '#e76037', '#e76b6b', '#e7cb50', '#e7df86', '#e7e7de', '#e7e7e7', '#e7f1cf', '#e7f76d', '#e8253d', '#e8383b', '#e83d38', '#e84b3c', '#e84e11', '#e87d4f', '#e87e04', '#e8bbb7', '#e8bf79', '#e8cf57', '#e8db52', '#e8e8e8', '#e8f4fa', '#e8ffff', '#e91818', '#e95933', '#e9624f', '#e98b39', '#e9bda4', '#e9ceac', '#e9dbc2', '#e9e9e9', '#ea5b4d', '#eac4bb', '#eae3c5', '#eae7d7', '#eaeaea', '#eaebd9', '#eaf2bb', '#eaff99', '#eb4549', '#eb5055', '#eb524a', '#eb6361', '#eb6b56', '#eb7565', '#eb9532', '#eb9605', '#ebbd63', '#ebc313', '#ebc7ca', '#ebcb94', '#ebcebe', '#ebdab2', '#ebdbd0', '#ebe1e2', '#ebe7e4', '#ebebeb', '#ebece7', '#ebf680', '#ec3013', '#ec555c', '#ec5b5b', '#ec6625', '#ecb053', '#ecd2e1', '#ecdaaf', '#ece1d2', '#ece653', '#ececec', '#eceef1', '#ecefa9', '#ecf0f1', '#ecf2c7', '#ed4e4e', '#ed5784', '#ed939d', '#ed9e4e', '#edad20', '#edb70d', '#edbab7', '#edd834', '#ede0fb', '#ede8d4', '#ededed', '#edf2f3', '#edf9ff', '#ee163b', '#ee1c25', '#ee3a43', '#ee543a', '#ee5f5b', '#ee6b48', '#ee7469', '#ee7546', '#eec3d6', '#eed0b8', '#eee657', '#eeeeee', '#eef9ff', '#eeff6b', '#ef4836', '#ef5252', '#ef5c54', '#ef632c', '#ef9033', '#ef9688', '#ef9f38', '#efbda0', '#efdb0d', '#efe0b1', '#efece7', '#eff4e4', '#eff7e0', '#f03000', '#f0340f', '#f04830', '#f04903', '#f05430', '#f06050', '#f0638b', '#f07818', '#f0856f', '#f08d9a', '#f0a703', '#f0a830', '#f0b799', '#f0c0ac', '#f0c2c2', '#f0d1b4', '#f0d8a8', '#f0edd5', '#f0eee7', '#f0efe8', '#f0f0c0', '#f0f0f0', '#f0f1f5', '#f0f3f3', '#f0f5f0', '#f0f871', '#f0ffd6', '#f10e29', '#f1654c', '#f18260', '#f1a49f', '#f1aa74', '#f1c210', '#f1c40f', '#f1d611', '#f1ecc8', '#f1edee', '#f1f0b3', '#f24130', '#f24d16', '#f2784b', '#f27935', '#f29b34', '#f2b20f', '#f2b6bf', '#f2bb13', '#f2bdb8', '#f2be55', '#f2be7b', '#f2d1be', '#f2e4f9', '#f2ebc9', '#f2f1ef', '#f2f2f2', '#f2f3ed', '#f2f8ea', '#f2f9ff', '#f31d2f', '#f32c33', '#f3707b', '#f38360', '#f38a8a', '#f39c12', '#f39c15', '#f3a929', '#f3c40f', '#f3c9bf', '#f3d06a', '#f3d646', '#f3d89f', '#f3e6e6', '#f3eecc', '#f3f2f0', '#f3f4ea', '#f4998a', '#f4a236', '#f4bb10', '#f4d35d', '#f4d4bd', '#f4d6a0', '#f4e4d1', '#f4e6e8', '#f4ebc1', '#f4edf6', '#f4f1e1', '#f4f5d6', '#f4ffe0', '#f54f37', '#f54f53', '#f57979', '#f58f4b', '#f59500', '#f59b69', '#f5ae22', '#f5c0b5', '#f5c16d', '#f5c700', '#f5cd3c', '#f5eded', '#f5f1ed', '#f5f5f5', '#f5fef4', '#f62459', '#f66256', '#f67a47', '#f67b7e', '#f67e7d', '#f69c00', '#f6a011', '#f6a186', '#f6cd61', '#f6d9d5', '#f6e0d3', '#f6eda2', '#f6efdf', '#f6f186', '#f6f7f2', '#f6fae8', '#f6ffde', '#f72040', '#f73e2d', '#f75959', '#f76539', '#f76863', '#f79885', '#f7a327', '#f7a3a2', '#f7a5a7', '#f7b881', '#f7ba92', '#f7bc05', '#f7ca18', '#f7cd1f', '#f7d00d', '#f7d6b5', '#f7d93b', '#f7e3ba', '#f7e5bd', '#f7e8d3', '#f7e999', '#f7ee84', '#f7f5f6', '#f7f7e9', '#f7ff0c', '#f84902', '#f85066', '#f87a00', '#f89406', '#f89538', '#f896a6', '#f89a29', '#f8a52f', '#f8a8b5', '#f8b7b1', '#f8bc86', '#f8bd97', '#f8c0c0', '#f8c63c', '#f8cac1', '#f8cca7', '#f8d347', '#f8d474', '#f8d9d5', '#f8e8b5', '#f8eeee', '#f8f1cf', '#f8f2e2', '#f8f3eb', '#f8f483', '#f8f8f8', '#f8f9fb', '#f8fcff', '#f9ae74', '#f9b32a', '#f9bf3b', '#f9d71d', '#f9e5c2', '#f9edd7', '#f9f8e4', '#f9f9f9', '#f9fa67', '#f9fadd', '#f9fdff', '#f9ffe5', '#fa4228', '#fa4f1d', '#fa6367', '#fa6767', '#fa67f1', '#fa7535', '#fa9090', '#fa9749', '#faa5ad', '#fab335', '#fabfa1', '#faca9b', '#fad203', '#fadaa3', '#faf6e3', '#faf7e9', '#faffe6', '#fb6868', '#fb9399', '#fbcf76', '#fbd6cc', '#fbfdf2', '#fc575e', '#fc6042', '#fc6264', '#fc6a1f', '#fc9d9a', '#fca65f', '#fcab54', '#fcab7b', '#fcb410', '#fcb941', '#fcbdb4', '#fccec9', '#fccf26', '#fcd6f7', '#fcd7d6', '#fcd8c2', '#fce49b', '#fceb53', '#fcebb6', '#fcecc9', '#fcf7d1', '#fcf9d6', '#fcfcff', '#fd1254', '#fd2323', '#fd5823', '#fd5b03', '#fd7150', '#fd7223', '#fd8943', '#fd8f04', '#fd9643', '#fda006', '#fdc26e', '#fdc5ce', '#fdcac7', '#fdd000', '#fdd09f', '#fde1f7', '#fde3a7', '#fdfdfd', '#fe0089', '#fe3f2d', '#fe4365', '#fe4e50', '#fe5a05', '#fe6860', '#fe8a71', '#fe8c19', '#febea8', '#fec34e', '#fec606', '#fedb1d', '#feeaa8', '#fef0d6', '#fefcff', '#fefefe', '#feffd1', '#feffff', '#ff0024', '#ff0d90', '#ff3209', '#ff4444', '#ff4545', '#ff4c43', '#ff520f', '#ff574f', '#ff5900', '#ff592f', '#ff5a1e', '#ff5d19', '#ff6249', '#ff6565', '#ff6666', '#ff6766', '#ff6861', '#ff6a00', '#ff6b66', '#ff6b6e', '#ff6b7e', '#ff6c60', '#ff6e6e', '#ff7055', '#ff7300', '#ff7416', '#ff7676', '#ff770b', '#ff7878', '#ff789e', '#ff7b2c', '#ff7e55', '#ff7f5f', '#ff80bd', '#ff8286', '#ff8600', '#ff8758', '#ff8b55', '#ff8f17', '#ff9696', '#ff9999', '#ff9e17', '#ff9f55', '#ffa549', '#ffa75e', '#ffab78', '#ffad00', '#ffadad', '#ffae8c', '#ffaf5a', '#ffb133', '#ffb300', '#ffb366', '#ffb4a5', '#ffb5a6', '#ffb64f', '#ffb836', '#ffb866', '#ffbfbf', '#ffc153', '#ffc175', '#ffc23c', '#ffc629', '#ffc642', '#ffc800', '#ffc8a6', '#ffca0c', '#ffcc00', '#ffcc99', '#ffcccc', '#ffce8f', '#ffceb5', '#ffcf00', '#ffd073', '#ffd074', '#ffd08d', '#ffd380', '#ffd4be', '#ffd591', '#ffd699', '#ffd6d0', '#ffd73c', '#ffd893', '#ffd91e', '#ffda0c', '#ffdd00', '#ffde49', '#ffe09c', '#ffe0e5', '#ffe1ae', '#ffe3d0', '#ffe4d5', '#ffe4d9', '#ffe6cc', '#ffe7c1', '#ffe9dc', '#ffeddf', '#ffee29', '#ffeeca', '#ffeed2', '#ffefd8', '#fff0d6', '#fff0f2', '#fff172', '#fff1db', '#fff3d4', '#fff457', '#fff5d5', '#fff899', '#fff9a3', '#fffaa6', '#fffbcc', '#fffc52', '#fffcd6', '#fffce6', '#fffcf5', '#fffef5', '#ffffd6', '#fffff7'];\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(__dirname) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _fs = __webpack_require__(3);\n\t\n\tvar fs = _interopRequireWildcard(_fs);\n\t\n\tvar _path = __webpack_require__(4);\n\t\n\tvar path = _interopRequireWildcard(_path);\n\t\n\tvar _lodash = __webpack_require__(5);\n\t\n\tvar _ = _interopRequireWildcard(_lodash);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar HtmlExport = function () {\n\t  function HtmlExport(colors) {\n\t    _classCallCheck(this, HtmlExport);\n\t\n\t    this.colors = _.shuffle(colors);\n\t    this.skeletonFile = path.resolve(__dirname, '..', 'data/skeleton.html');\n\t    this.buildDir = path.join(process.cwd(), 'flatcolors');\n\t    this.skeletonHtmlContent = '';\n\t    this.colorHtmlContent = '';\n\t    this.readFile();\n\t  }\n\t\n\t  _createClass(HtmlExport, [{\n\t    key: 'readFile',\n\t    value: function readFile() {\n\t      this.skeletonHtmlContent = fs.readFileSync(this.skeletonFile, {\n\t        encoding: 'utf8'\n\t      });\n\t    }\n\t  }, {\n\t    key: 'createFile',\n\t    value: function createFile(filename) {\n\t\n\t      if (!fs.existsSync(this.buildDir)) {\n\t        fs.mkdirSync(this.buildDir);\n\t      }\n\t      var buildFile = path.join(this.buildDir, filename + '.html');\n\t      var colorHtmlContent = '';\n\t      _.forEach(this.colors, function (color) {\n\t        colorHtmlContent = colorHtmlContent + '<div class=\"color\"><span style=\"background:' + color + '\" class=\"color-demo\"></span><span class=\"color-name\">' + color + '</span></div>';\n\t      });\n\t      var content = _.replace(this.skeletonHtmlContent, '--content--', colorHtmlContent);\n\t      fs.writeFileSync(buildFile, content);\n\t      return buildFile;\n\t    }\n\t  }, {\n\t    key: 'html',\n\t    value: function html() {\n\t      var filename = arguments.length <= 0 || arguments[0] === undefined ? 'flatuicolors' : arguments[0];\n\t\n\t      return this.createFile(filename);\n\t    }\n\t  }]);\n\t\n\t  return HtmlExport;\n\t}();\n\t\n\texports.default = HtmlExport;\n\t;\n\t/* WEBPACK VAR INJECTION */}.call(exports, \"/\"))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"fs\");\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"path\");\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {/**\n\t * @license\n\t * lodash 4.3.0 (Custom Build) <https://lodash.com/>\n\t * Build: `lodash -d -o ./foo/lodash.js`\n\t * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t * Available under MIT license <https://lodash.com/license>\n\t */\n\t;(function() {\n\t\n\t  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n\t  var undefined;\n\t\n\t  /** Used as the semantic version number. */\n\t  var VERSION = '4.3.0';\n\t\n\t  /** Used to compose bitmasks for wrapper metadata. */\n\t  var BIND_FLAG = 1,\n\t      BIND_KEY_FLAG = 2,\n\t      CURRY_BOUND_FLAG = 4,\n\t      CURRY_FLAG = 8,\n\t      CURRY_RIGHT_FLAG = 16,\n\t      PARTIAL_FLAG = 32,\n\t      PARTIAL_RIGHT_FLAG = 64,\n\t      ARY_FLAG = 128,\n\t      REARG_FLAG = 256,\n\t      FLIP_FLAG = 512;\n\t\n\t  /** Used to compose bitmasks for comparison styles. */\n\t  var UNORDERED_COMPARE_FLAG = 1,\n\t      PARTIAL_COMPARE_FLAG = 2;\n\t\n\t  /** Used as default options for `_.truncate`. */\n\t  var DEFAULT_TRUNC_LENGTH = 30,\n\t      DEFAULT_TRUNC_OMISSION = '...';\n\t\n\t  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n\t  var HOT_COUNT = 150,\n\t      HOT_SPAN = 16;\n\t\n\t  /** Used as the size to enable large array optimizations. */\n\t  var LARGE_ARRAY_SIZE = 200;\n\t\n\t  /** Used to indicate the type of lazy iteratees. */\n\t  var LAZY_FILTER_FLAG = 1,\n\t      LAZY_MAP_FLAG = 2,\n\t      LAZY_WHILE_FLAG = 3;\n\t\n\t  /** Used as the `TypeError` message for \"Functions\" methods. */\n\t  var FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t  /** Used to stand-in for `undefined` hash values. */\n\t  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\t\n\t  /** Used as references for various `Number` constants. */\n\t  var INFINITY = 1 / 0,\n\t      MAX_SAFE_INTEGER = 9007199254740991,\n\t      MAX_INTEGER = 1.7976931348623157e+308,\n\t      NAN = 0 / 0;\n\t\n\t  /** Used as references for the maximum length and index of an array. */\n\t  var MAX_ARRAY_LENGTH = 4294967295,\n\t      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n\t      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\t\n\t  /** Used as the internal argument placeholder. */\n\t  var PLACEHOLDER = '__lodash_placeholder__';\n\t\n\t  /** `Object#toString` result references. */\n\t  var argsTag = '[object Arguments]',\n\t      arrayTag = '[object Array]',\n\t      boolTag = '[object Boolean]',\n\t      dateTag = '[object Date]',\n\t      errorTag = '[object Error]',\n\t      funcTag = '[object Function]',\n\t      genTag = '[object GeneratorFunction]',\n\t      mapTag = '[object Map]',\n\t      numberTag = '[object Number]',\n\t      objectTag = '[object Object]',\n\t      regexpTag = '[object RegExp]',\n\t      setTag = '[object Set]',\n\t      stringTag = '[object String]',\n\t      symbolTag = '[object Symbol]',\n\t      weakMapTag = '[object WeakMap]',\n\t      weakSetTag = '[object WeakSet]';\n\t\n\t  var arrayBufferTag = '[object ArrayBuffer]',\n\t      float32Tag = '[object Float32Array]',\n\t      float64Tag = '[object Float64Array]',\n\t      int8Tag = '[object Int8Array]',\n\t      int16Tag = '[object Int16Array]',\n\t      int32Tag = '[object Int32Array]',\n\t      uint8Tag = '[object Uint8Array]',\n\t      uint8ClampedTag = '[object Uint8ClampedArray]',\n\t      uint16Tag = '[object Uint16Array]',\n\t      uint32Tag = '[object Uint32Array]';\n\t\n\t  /** Used to match empty string literals in compiled template source. */\n\t  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n\t      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n\t      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\t\n\t  /** Used to match HTML entities and HTML characters. */\n\t  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n\t      reUnescapedHtml = /[&<>\"'`]/g,\n\t      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n\t      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\t\n\t  /** Used to match template delimiters. */\n\t  var reEscape = /<%-([\\s\\S]+?)%>/g,\n\t      reEvaluate = /<%([\\s\\S]+?)%>/g,\n\t      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\t\n\t  /** Used to match property names within property paths. */\n\t  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n\t      reIsPlainProp = /^\\w*$/,\n\t      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]/g;\n\t\n\t  /** Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns). */\n\t  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n\t      reHasRegExpChar = RegExp(reRegExpChar.source);\n\t\n\t  /** Used to match leading and trailing whitespace. */\n\t  var reTrim = /^\\s+|\\s+$/g,\n\t      reTrimStart = /^\\s+/,\n\t      reTrimEnd = /\\s+$/;\n\t\n\t  /** Used to match backslashes in property paths. */\n\t  var reEscapeChar = /\\\\(\\\\)?/g;\n\t\n\t  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n\t  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\t\n\t  /** Used to match `RegExp` flags from their coerced string values. */\n\t  var reFlags = /\\w*$/;\n\t\n\t  /** Used to detect hexadecimal string values. */\n\t  var reHasHexPrefix = /^0x/i;\n\t\n\t  /** Used to detect bad signed hexadecimal string values. */\n\t  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\t\n\t  /** Used to detect binary string values. */\n\t  var reIsBinary = /^0b[01]+$/i;\n\t\n\t  /** Used to detect host constructors (Safari > 5). */\n\t  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\t\n\t  /** Used to detect octal string values. */\n\t  var reIsOctal = /^0o[0-7]+$/i;\n\t\n\t  /** Used to detect unsigned integer values. */\n\t  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\t\n\t  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n\t  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\t\n\t  /** Used to ensure capturing order of template delimiters. */\n\t  var reNoMatch = /($^)/;\n\t\n\t  /** Used to match unescaped characters in compiled string literals. */\n\t  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\t\n\t  /** Used to compose unicode character classes. */\n\t  var rsAstralRange = '\\\\ud800-\\\\udfff',\n\t      rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n\t      rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n\t      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n\t      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n\t      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n\t      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n\t      rsQuoteRange = '\\\\u2018\\\\u2019\\\\u201c\\\\u201d',\n\t      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n\t      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n\t      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n\t      rsBreakRange = rsMathOpRange + rsNonCharRange + rsQuoteRange + rsSpaceRange;\n\t\n\t  /** Used to compose unicode capture groups. */\n\t  var rsAstral = '[' + rsAstralRange + ']',\n\t      rsBreak = '[' + rsBreakRange + ']',\n\t      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n\t      rsDigits = '\\\\d+',\n\t      rsDingbat = '[' + rsDingbatRange + ']',\n\t      rsLower = '[' + rsLowerRange + ']',\n\t      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n\t      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n\t      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n\t      rsNonAstral = '[^' + rsAstralRange + ']',\n\t      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n\t      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n\t      rsUpper = '[' + rsUpperRange + ']',\n\t      rsZWJ = '\\\\u200d';\n\t\n\t  /** Used to compose unicode regexes. */\n\t  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n\t      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n\t      reOptMod = rsModifier + '?',\n\t      rsOptVar = '[' + rsVarRange + ']?',\n\t      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n\t      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n\t      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n\t      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\t\n\t  /**\n\t   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n\t   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n\t   */\n\t  var reComboMark = RegExp(rsCombo, 'g');\n\t\n\t  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n\t  var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\t\n\t  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n\t  var reHasComplexSymbol = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\t\n\t  /** Used to match non-compound words composed of alphanumeric characters. */\n\t  var reBasicWord = /[a-zA-Z0-9]+/g;\n\t\n\t  /** Used to match complex or compound words. */\n\t  var reComplexWord = RegExp([\n\t    rsUpper + '?' + rsLower + '+(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n\t    rsUpperMisc + '+(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n\t    rsUpper + '?' + rsLowerMisc + '+',\n\t    rsUpper + '+',\n\t    rsDigits,\n\t    rsEmoji\n\t  ].join('|'), 'g');\n\t\n\t  /** Used to detect strings that need a more robust regexp to match words. */\n\t  var reHasComplexWord = /[a-z][A-Z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\t\n\t  /** Used to assign default `context` object properties. */\n\t  var contextProps = [\n\t    'Array', 'Buffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n\t    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n\t    'Reflect', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n\t    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap', '_',\n\t    'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n\t  ];\n\t\n\t  /** Used to make template sourceURLs easier to identify. */\n\t  var templateCounter = -1;\n\t\n\t  /** Used to identify `toStringTag` values of typed arrays. */\n\t  var typedArrayTags = {};\n\t  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n\t  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n\t  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n\t  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n\t  typedArrayTags[uint32Tag] = true;\n\t  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n\t  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n\t  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n\t  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n\t  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n\t  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n\t  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\t\n\t  /** Used to identify `toStringTag` values supported by `_.clone`. */\n\t  var cloneableTags = {};\n\t  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n\t  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n\t  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n\t  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n\t  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n\t  cloneableTags[mapTag] = cloneableTags[numberTag] =\n\t  cloneableTags[objectTag] = cloneableTags[regexpTag] =\n\t  cloneableTags[setTag] = cloneableTags[stringTag] =\n\t  cloneableTags[symbolTag] = cloneableTags[uint8Tag] =\n\t  cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] =\n\t  cloneableTags[uint32Tag] = true;\n\t  cloneableTags[errorTag] = cloneableTags[funcTag] =\n\t  cloneableTags[weakMapTag] = false;\n\t\n\t  /** Used to map latin-1 supplementary letters to basic latin letters. */\n\t  var deburredLetters = {\n\t    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n\t    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n\t    '\\xc7': 'C',  '\\xe7': 'c',\n\t    '\\xd0': 'D',  '\\xf0': 'd',\n\t    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n\t    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n\t    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n\t    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n\t    '\\xd1': 'N',  '\\xf1': 'n',\n\t    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n\t    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n\t    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n\t    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n\t    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n\t    '\\xc6': 'Ae', '\\xe6': 'ae',\n\t    '\\xde': 'Th', '\\xfe': 'th',\n\t    '\\xdf': 'ss'\n\t  };\n\t\n\t  /** Used to map characters to HTML entities. */\n\t  var htmlEscapes = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#39;',\n\t    '`': '&#96;'\n\t  };\n\t\n\t  /** Used to map HTML entities to characters. */\n\t  var htmlUnescapes = {\n\t    '&amp;': '&',\n\t    '&lt;': '<',\n\t    '&gt;': '>',\n\t    '&quot;': '\"',\n\t    '&#39;': \"'\",\n\t    '&#96;': '`'\n\t  };\n\t\n\t  /** Used to determine if values are of the language type `Object`. */\n\t  var objectTypes = {\n\t    'function': true,\n\t    'object': true\n\t  };\n\t\n\t  /** Used to escape characters for inclusion in compiled string literals. */\n\t  var stringEscapes = {\n\t    '\\\\': '\\\\',\n\t    \"'\": \"'\",\n\t    '\\n': 'n',\n\t    '\\r': 'r',\n\t    '\\u2028': 'u2028',\n\t    '\\u2029': 'u2029'\n\t  };\n\t\n\t  /** Built-in method references without a dependency on `root`. */\n\t  var freeParseFloat = parseFloat,\n\t      freeParseInt = parseInt;\n\t\n\t  /** Detect free variable `exports`. */\n\t  var freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType) ? exports : null;\n\t\n\t  /** Detect free variable `module`. */\n\t  var freeModule = (objectTypes[typeof module] && module && !module.nodeType) ? module : null;\n\t\n\t  /** Detect free variable `global` from Node.js. */\n\t  var freeGlobal = checkGlobal(freeExports && freeModule && typeof global == 'object' && global);\n\t\n\t  /** Detect free variable `self`. */\n\t  var freeSelf = checkGlobal(objectTypes[typeof self] && self);\n\t\n\t  /** Detect free variable `window`. */\n\t  var freeWindow = checkGlobal(objectTypes[typeof window] && window);\n\t\n\t  /** Detect the popular CommonJS extension `module.exports`. */\n\t  var moduleExports = (freeModule && freeModule.exports === freeExports) ? freeExports : null;\n\t\n\t  /** Detect `this` as the global object. */\n\t  var thisGlobal = checkGlobal(objectTypes[typeof this] && this);\n\t\n\t  /**\n\t   * Used as a reference to the global object.\n\t   *\n\t   * The `this` value is used if it's the global object to avoid Greasemonkey's\n\t   * restricted `window` object, otherwise the `window` object is used.\n\t   */\n\t  var root = freeGlobal || ((freeWindow !== (thisGlobal && thisGlobal.window)) && freeWindow) || freeSelf || thisGlobal || Function('return this')();\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Adds the key-value `pair` to `map`.\n\t   *\n\t   * @private\n\t   * @param {Object} map The map to modify.\n\t   * @param {Array} pair The key-value pair to add.\n\t   * @returns {Object} Returns `map`.\n\t   */\n\t  function addMapEntry(map, pair) {\n\t    map.set(pair[0], pair[1]);\n\t    return map;\n\t  }\n\t\n\t  /**\n\t   * Adds `value` to `set`.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to modify.\n\t   * @param {*} value The value to add.\n\t   * @returns {Object} Returns `set`.\n\t   */\n\t  function addSetEntry(set, value) {\n\t    set.add(value);\n\t    return set;\n\t  }\n\t\n\t  /**\n\t   * A faster alternative to `Function#apply`, this function invokes `func`\n\t   * with the `this` binding of `thisArg` and the arguments of `args`.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to invoke.\n\t   * @param {*} thisArg The `this` binding of `func`.\n\t   * @param {...*} args The arguments to invoke `func` with.\n\t   * @returns {*} Returns the result of `func`.\n\t   */\n\t  function apply(func, thisArg, args) {\n\t    var length = args.length;\n\t    switch (length) {\n\t      case 0: return func.call(thisArg);\n\t      case 1: return func.call(thisArg, args[0]);\n\t      case 2: return func.call(thisArg, args[0], args[1]);\n\t      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n\t    }\n\t    return func.apply(thisArg, args);\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `baseAggregator` for arrays.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} setter The function to set `accumulator` values.\n\t   * @param {Function} iteratee The iteratee to transform keys.\n\t   * @param {Object} accumulator The initial aggregated object.\n\t   * @returns {Function} Returns `accumulator`.\n\t   */\n\t  function arrayAggregator(array, setter, iteratee, accumulator) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      setter(accumulator, value, iteratee(value), array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * Creates a new array concatenating `array` with `other`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The first array to concatenate.\n\t   * @param {Array} other The second array to concatenate.\n\t   * @returns {Array} Returns the new concatenated array.\n\t   */\n\t  function arrayConcat(array, other) {\n\t    var index = -1,\n\t        length = array.length,\n\t        othIndex = -1,\n\t        othLength = other.length,\n\t        result = Array(length + othLength);\n\t\n\t    while (++index < length) {\n\t      result[index] = array[index];\n\t    }\n\t    while (++othIndex < othLength) {\n\t      result[index++] = other[othIndex];\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEach` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEach(array, iteratee) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (iteratee(array[index], index, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEachRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEachRight(array, iteratee) {\n\t    var length = array.length;\n\t\n\t    while (length--) {\n\t      if (iteratee(array[length], length, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.every` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if all elements pass the predicate check, else `false`.\n\t   */\n\t  function arrayEvery(array, predicate) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (!predicate(array[index], index, array)) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.filter` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {Array} Returns the new filtered array.\n\t   */\n\t  function arrayFilter(array, predicate) {\n\t    var index = -1,\n\t        length = array.length,\n\t        resIndex = -1,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      if (predicate(value, index, array)) {\n\t        result[++resIndex] = value;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.includes` for arrays without support for\n\t   * specifying an index to search from.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} target The value to search for.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludes(array, value) {\n\t    return !!array.length && baseIndexOf(array, value, 0) > -1;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.includesWith` for arrays without support for\n\t   * specifying an index to search from.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} target The value to search for.\n\t   * @param {Function} comparator The comparator invoked per element.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludesWith(array, value, comparator) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (comparator(value, array[index])) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.map` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the new mapped array.\n\t   */\n\t  function arrayMap(array, iteratee) {\n\t    var index = -1,\n\t        length = array.length,\n\t        result = Array(length);\n\t\n\t    while (++index < length) {\n\t      result[index] = iteratee(array[index], index, array);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Appends the elements of `values` to `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {Array} values The values to append.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayPush(array, values) {\n\t    var index = -1,\n\t        length = values.length,\n\t        offset = array.length;\n\t\n\t    while (++index < length) {\n\t      array[offset + index] = values[index];\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduce` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the first element of `array` as the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduce(array, iteratee, accumulator, initAccum) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    if (initAccum && length) {\n\t      accumulator = array[++index];\n\t    }\n\t    while (++index < length) {\n\t      accumulator = iteratee(accumulator, array[index], index, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduceRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the last element of `array` as the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n\t    var length = array.length;\n\t    if (initAccum && length) {\n\t      accumulator = array[--length];\n\t    }\n\t    while (length--) {\n\t      accumulator = iteratee(accumulator, array[length], length, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.some` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.\n\t   */\n\t  function arraySome(array, predicate) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (predicate(array[index], index, array)) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of methods like `_.max` and `_.min` which accepts a\n\t   * `comparator` to determine the extremum value.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The iteratee invoked per iteration.\n\t   * @param {Function} comparator The comparator used to compare values.\n\t   * @returns {*} Returns the extremum value.\n\t   */\n\t  function baseExtremum(array, iteratee, comparator) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      var value = array[index],\n\t          current = iteratee(value);\n\t\n\t      if (current != null && (computed === undefined\n\t            ? current === current\n\t            : comparator(current, computed)\n\t          )) {\n\t        var computed = current,\n\t            result = value;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of methods like `_.find` and `_.findKey`, without\n\t   * support for iteratee shorthands, which iterates over `collection` using\n\t   * `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @param {boolean} [retKey] Specify returning the key of the found element instead of the element itself.\n\t   * @returns {*} Returns the found element or its key, else `undefined`.\n\t   */\n\t  function baseFind(collection, predicate, eachFunc, retKey) {\n\t    var result;\n\t    eachFunc(collection, function(value, key, collection) {\n\t      if (predicate(value, key, collection)) {\n\t        result = retKey ? key : value;\n\t        return false;\n\t      }\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n\t   * support for iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseFindIndex(array, predicate, fromRight) {\n\t    var length = array.length,\n\t        index = fromRight ? length : -1;\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      if (predicate(array[index], index, array)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOf(array, value, fromIndex) {\n\t    if (value !== value) {\n\t      return indexOfNaN(array, fromIndex);\n\t    }\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (array[index] === value) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n\t   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} accumulator The initial value.\n\t   * @param {boolean} initAccum Specify using the first or last element of `collection` as the initial value.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n\t    eachFunc(collection, function(value, index, collection) {\n\t      accumulator = initAccum\n\t        ? (initAccum = false, value)\n\t        : iteratee(accumulator, value, index, collection);\n\t    });\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sortBy` which uses `comparer` to define\n\t   * the sort order of `array` and replaces criteria objects with their\n\t   * corresponding values.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to sort.\n\t   * @param {Function} comparer The function to define sort order.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function baseSortBy(array, comparer) {\n\t    var length = array.length;\n\t\n\t    array.sort(comparer);\n\t    while (length--) {\n\t      array[length] = array[length].value;\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sum` without support for iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {number} Returns the sum.\n\t   */\n\t  function baseSum(array, iteratee) {\n\t    var result,\n\t        index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      var current = iteratee(array[index]);\n\t      if (current !== undefined) {\n\t        result = result === undefined ? current : (result + current);\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.times` without support for iteratee shorthands\n\t   * or max array length checks.\n\t   *\n\t   * @private\n\t   * @param {number} n The number of times to invoke `iteratee`.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the array of results.\n\t   */\n\t  function baseTimes(n, iteratee) {\n\t    var index = -1,\n\t        result = Array(n);\n\t\n\t    while (++index < n) {\n\t      result[index] = iteratee(index);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n\t   * of key-value pairs for `object` corresponding to the property names of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the new array of key-value pairs.\n\t   */\n\t  function baseToPairs(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return [key, object[key]];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.unary` without support for storing wrapper metadata.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to cap arguments for.\n\t   * @returns {Function} Returns the new function.\n\t   */\n\t  function baseUnary(func) {\n\t    return function(value) {\n\t      return func(value);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.values` and `_.valuesIn` which creates an\n\t   * array of `object` property values corresponding to the property names\n\t   * of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the array of property values.\n\t   */\n\t  function baseValues(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return object[key];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the first unmatched string symbol.\n\t   */\n\t  function charsStartIndex(strSymbols, chrSymbols) {\n\t    var index = -1,\n\t        length = strSymbols.length;\n\t\n\t    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the last unmatched string symbol.\n\t   */\n\t  function charsEndIndex(strSymbols, chrSymbols) {\n\t    var index = strSymbols.length;\n\t\n\t    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is a global object.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {null|Object} Returns `value` if it's a global object, else `null`.\n\t   */\n\t  function checkGlobal(value) {\n\t    return (value && value.Object === Object) ? value : null;\n\t  }\n\t\n\t  /**\n\t   * Compares values to sort them in ascending order.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to compare.\n\t   * @param {*} other The other value to compare.\n\t   * @returns {number} Returns the sort order indicator for `value`.\n\t   */\n\t  function compareAscending(value, other) {\n\t    if (value !== other) {\n\t      var valIsNull = value === null,\n\t          valIsUndef = value === undefined,\n\t          valIsReflexive = value === value;\n\t\n\t      var othIsNull = other === null,\n\t          othIsUndef = other === undefined,\n\t          othIsReflexive = other === other;\n\t\n\t      if ((value > other && !othIsNull) || !valIsReflexive ||\n\t          (valIsNull && !othIsUndef && othIsReflexive) ||\n\t          (valIsUndef && othIsReflexive)) {\n\t        return 1;\n\t      }\n\t      if ((value < other && !valIsNull) || !othIsReflexive ||\n\t          (othIsNull && !valIsUndef && valIsReflexive) ||\n\t          (othIsUndef && valIsReflexive)) {\n\t        return -1;\n\t      }\n\t    }\n\t    return 0;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.orderBy` to compare multiple properties of a value to another\n\t   * and stable sort them.\n\t   *\n\t   * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n\t   * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n\t   * of corresponding values.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to compare.\n\t   * @param {Object} other The other object to compare.\n\t   * @param {boolean[]|string[]} orders The order to sort by for each property.\n\t   * @returns {number} Returns the sort order indicator for `object`.\n\t   */\n\t  function compareMultiple(object, other, orders) {\n\t    var index = -1,\n\t        objCriteria = object.criteria,\n\t        othCriteria = other.criteria,\n\t        length = objCriteria.length,\n\t        ordersLength = orders.length;\n\t\n\t    while (++index < length) {\n\t      var result = compareAscending(objCriteria[index], othCriteria[index]);\n\t      if (result) {\n\t        if (index >= ordersLength) {\n\t          return result;\n\t        }\n\t        var order = orders[index];\n\t        return result * (order == 'desc' ? -1 : 1);\n\t      }\n\t    }\n\t    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n\t    // that causes it, under certain circumstances, to provide the same value for\n\t    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n\t    // for more details.\n\t    //\n\t    // This also ensures a stable sort in V8 and other engines.\n\t    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n\t    return object.index - other.index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n\t   *\n\t   * @private\n\t   * @param {string} letter The matched letter to deburr.\n\t   * @returns {string} Returns the deburred letter.\n\t   */\n\t  function deburrLetter(letter) {\n\t    return deburredLetters[letter];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.escape` to convert characters to HTML entities.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeHtmlChar(chr) {\n\t    return htmlEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeStringChar(chr) {\n\t    return '\\\\' + stringEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n\t   */\n\t  function indexOfNaN(array, fromIndex, fromRight) {\n\t    var length = array.length,\n\t        index = fromIndex + (fromRight ? 0 : -1);\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      var other = array[index];\n\t      if (other !== other) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is a host object in IE < 9.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n\t   */\n\t  function isHostObject(value) {\n\t    // Many host objects are `Object` objects that can coerce to strings\n\t    // despite having improperly defined `toString` methods.\n\t    var result = false;\n\t    if (value != null && typeof value.toString != 'function') {\n\t      try {\n\t        result = !!(value + '');\n\t      } catch (e) {}\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is a valid array-like index.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t   */\n\t  function isIndex(value, length) {\n\t    value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n\t    length = length == null ? MAX_SAFE_INTEGER : length;\n\t    return value > -1 && value % 1 == 0 && value < length;\n\t  }\n\t\n\t  /**\n\t   * Converts `iterator` to an array.\n\t   *\n\t   * @private\n\t   * @param {Object} iterator The iterator to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function iteratorToArray(iterator) {\n\t    var data,\n\t        result = [];\n\t\n\t    while (!(data = iterator.next()).done) {\n\t      result.push(data.value);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `map` to an array.\n\t   *\n\t   * @private\n\t   * @param {Object} map The map to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function mapToArray(map) {\n\t    var index = -1,\n\t        result = Array(map.size);\n\t\n\t    map.forEach(function(value, key) {\n\t      result[++index] = [key, value];\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Replaces all `placeholder` elements in `array` with an internal placeholder\n\t   * and returns an array of their indexes.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {*} placeholder The placeholder to replace.\n\t   * @returns {Array} Returns the new array of placeholder indexes.\n\t   */\n\t  function replaceHolders(array, placeholder) {\n\t    var index = -1,\n\t        length = array.length,\n\t        resIndex = -1,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      if (array[index] === placeholder) {\n\t        array[index] = PLACEHOLDER;\n\t        result[++resIndex] = index;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `set` to an array.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function setToArray(set) {\n\t    var index = -1,\n\t        result = Array(set.size);\n\t\n\t    set.forEach(function(value) {\n\t      result[++index] = value;\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Gets the number of symbols in `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the string size.\n\t   */\n\t  function stringSize(string) {\n\t    if (!(string && reHasComplexSymbol.test(string))) {\n\t      return string.length;\n\t    }\n\t    var result = reComplexSymbol.lastIndex = 0;\n\t    while (reComplexSymbol.test(string)) {\n\t      result++;\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `string` to an array.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function stringToArray(string) {\n\t    return string.match(reComplexSymbol);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.unescape` to convert HTML entities to characters.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to unescape.\n\t   * @returns {string} Returns the unescaped character.\n\t   */\n\t  function unescapeHtmlChar(chr) {\n\t    return htmlUnescapes[chr];\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Create a new pristine `lodash` function using the `context` object.\n\t   *\n\t   * @static\n\t   * @memberOf _\n\t   * @category Util\n\t   * @param {Object} [context=root] The context object.\n\t   * @returns {Function} Returns a new `lodash` function.\n\t   * @example\n\t   *\n\t   * _.mixin({ 'foo': _.constant('foo') });\n\t   *\n\t   * var lodash = _.runInContext();\n\t   * lodash.mixin({ 'bar': lodash.constant('bar') });\n\t   *\n\t   * _.isFunction(_.foo);\n\t   * // => true\n\t   * _.isFunction(_.bar);\n\t   * // => false\n\t   *\n\t   * lodash.isFunction(lodash.foo);\n\t   * // => false\n\t   * lodash.isFunction(lodash.bar);\n\t   * // => true\n\t   *\n\t   * // Use `context` to mock `Date#getTime` use in `_.now`.\n\t   * var mock = _.runInContext({\n\t   *   'Date': function() {\n\t   *     return { 'getTime': getTimeMock };\n\t   *   }\n\t   * });\n\t   *\n\t   * // Create a suped-up `defer` in Node.js.\n\t   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n\t   */\n\t  function runInContext(context) {\n\t    context = context ? _.defaults({}, context, _.pick(root, contextProps)) : root;\n\t\n\t    /** Built-in constructor references. */\n\t    var Date = context.Date,\n\t        Error = context.Error,\n\t        Math = context.Math,\n\t        RegExp = context.RegExp,\n\t        TypeError = context.TypeError;\n\t\n\t    /** Used for built-in method references. */\n\t    var arrayProto = context.Array.prototype,\n\t        objectProto = context.Object.prototype;\n\t\n\t    /** Used to resolve the decompiled source of functions. */\n\t    var funcToString = context.Function.prototype.toString;\n\t\n\t    /** Used to check objects for own properties. */\n\t    var hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t    /** Used to generate unique IDs. */\n\t    var idCounter = 0;\n\t\n\t    /** Used to infer the `Object` constructor. */\n\t    var objectCtorString = funcToString.call(Object);\n\t\n\t    /**\n\t     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t     * of values.\n\t     */\n\t    var objectToString = objectProto.toString;\n\t\n\t    /** Used to restore the original `_` reference in `_.noConflict`. */\n\t    var oldDash = root._;\n\t\n\t    /** Used to detect if a method is native. */\n\t    var reIsNative = RegExp('^' +\n\t      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n\t      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t    );\n\t\n\t    /** Built-in value references. */\n\t    var Buffer = moduleExports ? context.Buffer : undefined,\n\t        Reflect = context.Reflect,\n\t        Symbol = context.Symbol,\n\t        Uint8Array = context.Uint8Array,\n\t        clearTimeout = context.clearTimeout,\n\t        enumerate = Reflect ? Reflect.enumerate : undefined,\n\t        getPrototypeOf = Object.getPrototypeOf,\n\t        getOwnPropertySymbols = Object.getOwnPropertySymbols,\n\t        iteratorSymbol = typeof (iteratorSymbol = Symbol && Symbol.iterator) == 'symbol' ? iteratorSymbol : undefined,\n\t        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n\t        setTimeout = context.setTimeout,\n\t        splice = arrayProto.splice;\n\t\n\t    /* Built-in method references for those with the same name as other `lodash` methods. */\n\t    var nativeCeil = Math.ceil,\n\t        nativeFloor = Math.floor,\n\t        nativeIsFinite = context.isFinite,\n\t        nativeJoin = arrayProto.join,\n\t        nativeKeys = Object.keys,\n\t        nativeMax = Math.max,\n\t        nativeMin = Math.min,\n\t        nativeParseInt = context.parseInt,\n\t        nativeRandom = Math.random,\n\t        nativeReverse = arrayProto.reverse;\n\t\n\t    /* Built-in method references that are verified to be native. */\n\t    var Map = getNative(context, 'Map'),\n\t        Set = getNative(context, 'Set'),\n\t        WeakMap = getNative(context, 'WeakMap'),\n\t        nativeCreate = getNative(Object, 'create');\n\t\n\t    /** Used to store function metadata. */\n\t    var metaMap = WeakMap && new WeakMap;\n\t\n\t    /** Used to detect maps, sets, and weakmaps. */\n\t    var mapCtorString = Map ? funcToString.call(Map) : '',\n\t        setCtorString = Set ? funcToString.call(Set) : '',\n\t        weakMapCtorString = WeakMap ? funcToString.call(WeakMap) : '';\n\t\n\t    /** Used to convert symbols to primitives and strings. */\n\t    var symbolProto = Symbol ? Symbol.prototype : undefined,\n\t        symbolValueOf = Symbol ? symbolProto.valueOf : undefined,\n\t        symbolToString = Symbol ? symbolProto.toString : undefined;\n\t\n\t    /** Used to lookup unminified function names. */\n\t    var realNames = {};\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object which wraps `value` to enable implicit method\n\t     * chaining. Methods that operate on and return arrays, collections, and\n\t     * functions can be chained together. Methods that retrieve a single value or\n\t     * may return a primitive value will automatically end the chain sequence and\n\t     * return the unwrapped value. Otherwise, the value must be unwrapped with\n\t     * `_#value`.\n\t     *\n\t     * Explicit chaining, which must be unwrapped with `_#value` in all cases,\n\t     * may be enabled using `_.chain`.\n\t     *\n\t     * The execution of chained methods is lazy, that is, it's deferred until\n\t     * `_#value` is implicitly or explicitly called.\n\t     *\n\t     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n\t     * fusion is an optimization to merge iteratee calls; this avoids the creation\n\t     * of intermediate arrays and can greatly reduce the number of iteratee executions.\n\t     * Sections of a chain sequence qualify for shortcut fusion if the section is\n\t     * applied to an array of at least two hundred elements and any iteratees\n\t     * accept only one argument. The heuristic for whether a section qualifies\n\t     * for shortcut fusion is subject to change.\n\t     *\n\t     * Chaining is supported in custom builds as long as the `_#value` method is\n\t     * directly or indirectly included in the build.\n\t     *\n\t     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n\t     *\n\t     * The wrapper `Array` methods are:\n\t     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n\t     *\n\t     * The wrapper `String` methods are:\n\t     * `replace` and `split`\n\t     *\n\t     * The wrapper methods that support shortcut fusion are:\n\t     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n\t     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n\t     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n\t     *\n\t     * The chainable wrapper methods are:\n\t     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`,\n\t     * `at`, `before`, `bind`, `bindAll`, `bindKey`, `chain`, `chunk`, `commit`,\n\t     * `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`, `curry`,\n\t     * `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`, `difference`,\n\t     * `differenceBy`, `differenceWith`, `drop`, `dropRight`, `dropRightWhile`,\n\t     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flip`, `flow`,\n\t     * `flowRight`, `fromPairs`, `functions`, `functionsIn`, `groupBy`, `initial`,\n\t     * `intersection`, `intersectionBy`, `intersectionWith`, `invert`, `invertBy`,\n\t     * `invokeMap`, `iteratee`, `keyBy`, `keys`, `keysIn`, `map`, `mapKeys`,\n\t     * `mapValues`, `matches`, `matchesProperty`, `memoize`, `merge`, `mergeWith`,\n\t     * `method`, `methodOf`, `mixin`, `negate`, `nthArg`, `omit`, `omitBy`, `once`,\n\t     * `orderBy`, `over`, `overArgs`, `overEvery`, `overSome`, `partial`,\n\t     * `partialRight`, `partition`, `pick`, `pickBy`, `plant`, `property`,\n\t     * `propertyOf`, `pull`, `pullAll`, `pullAllBy`, `pullAt`, `push`, `range`,\n\t     * `rangeRight`, `rearg`, `reject`, `remove`, `rest`, `reverse`, `sampleSize`,\n\t     * `set`, `setWith`, `shuffle`, `slice`, `sort`, `sortBy`, `splice`, `spread`,\n\t     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `tap`, `throttle`,\n\t     * `thru`, `toArray`, `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`,\n\t     * `transform`, `unary`, `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`,\n\t     * `uniqWith`, `unset`, `unshift`, `unzip`, `unzipWith`, `values`, `valuesIn`,\n\t     * `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`, `zipObject`,\n\t     * `zipObjectDeep`, and `zipWith`\n\t     *\n\t     * The wrapper methods that are **not** chainable by default are:\n\t     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n\t     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `deburr`, `endsWith`, `eq`,\n\t     * `escape`, `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`,\n\t     * `findLast`, `findLastIndex`, `findLastKey`, `floor`, `forEach`, `forEachRight`,\n\t     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n\t     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n\t     * `isArguments`, `isArray`, `isArrayLike`, `isArrayLikeObject`, `isBoolean`,\n\t     * `isDate`, `isElement`, `isEmpty`, `isEqual`, `isEqualWith`, `isError`,\n\t     * `isFinite`, `isFunction`, `isInteger`, `isLength`, `isMatch`, `isMatchWith`,\n\t     * `isNaN`, `isNative`, `isNil`, `isNull`, `isNumber`, `isObject`, `isObjectLike`,\n\t     * `isPlainObject`, `isRegExp`, `isSafeInteger`, `isString`, `isUndefined`,\n\t     * `isTypedArray`, `join`, `kebabCase`, `last`, `lastIndexOf`, `lowerCase`,\n\t     * `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `min`, `minBy`,\n\t     * `noConflict`, `noop`, `now`, `pad`, `padEnd`, `padStart`, `parseInt`,\n\t     * `pop`, `random`, `reduce`, `reduceRight`, `repeat`, `result`, `round`,\n\t     * `runInContext`, `sample`, `shift`, `size`, `snakeCase`, `some`, `sortedIndex`,\n\t     * `sortedIndexBy`, `sortedLastIndex`, `sortedLastIndexBy`, `startCase`,\n\t     * `startsWith`, `subtract`, `sum`, `sumBy`, `template`, `times`, `toLower`,\n\t     * `toInteger`, `toLength`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`,\n\t     * `trim`, `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`,\n\t     * `upperCase`, `upperFirst`, `value`, and `words`\n\t     *\n\t     * @name _\n\t     * @constructor\n\t     * @category Seq\n\t     * @param {*} value The value to wrap in a `lodash` instance.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2, 3]);\n\t     *\n\t     * // Returns an unwrapped value.\n\t     * wrapped.reduce(_.add);\n\t     * // => 6\n\t     *\n\t     * // Returns a wrapped value.\n\t     * var squares = wrapped.map(square);\n\t     *\n\t     * _.isArray(squares);\n\t     * // => false\n\t     *\n\t     * _.isArray(squares.value());\n\t     * // => true\n\t     */\n\t    function lodash(value) {\n\t      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n\t        if (value instanceof LodashWrapper) {\n\t          return value;\n\t        }\n\t        if (hasOwnProperty.call(value, '__wrapped__')) {\n\t          return wrapperClone(value);\n\t        }\n\t      }\n\t      return new LodashWrapper(value);\n\t    }\n\t\n\t    /**\n\t     * The function whose prototype all chaining wrappers inherit from.\n\t     *\n\t     * @private\n\t     */\n\t    function baseLodash() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * The base constructor for creating `lodash` wrapper objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n\t     */\n\t    function LodashWrapper(value, chainAll) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__chain__ = !!chainAll;\n\t      this.__index__ = 0;\n\t      this.__values__ = undefined;\n\t    }\n\t\n\t    /**\n\t     * By default, the template delimiters used by lodash are like those in\n\t     * embedded Ruby (ERB). Change the following template settings to use\n\t     * alternative delimiters.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Object\n\t     */\n\t    lodash.templateSettings = {\n\t\n\t      /**\n\t       * Used to detect `data` property values to be HTML-escaped.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'escape': reEscape,\n\t\n\t      /**\n\t       * Used to detect code to be evaluated.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'evaluate': reEvaluate,\n\t\n\t      /**\n\t       * Used to detect `data` property values to inject.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'interpolate': reInterpolate,\n\t\n\t      /**\n\t       * Used to reference the data object in the template text.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type string\n\t       */\n\t      'variable': '',\n\t\n\t      /**\n\t       * Used to import variables into the compiled template.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type Object\n\t       */\n\t      'imports': {\n\t\n\t        /**\n\t         * A reference to the `lodash` function.\n\t         *\n\t         * @memberOf _.templateSettings.imports\n\t         * @type Function\n\t         */\n\t        '_': lodash\n\t      }\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     */\n\t    function LazyWrapper(value) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__dir__ = 1;\n\t      this.__filtered__ = false;\n\t      this.__iteratees__ = [];\n\t      this.__takeCount__ = MAX_ARRAY_LENGTH;\n\t      this.__views__ = [];\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the lazy wrapper object.\n\t     *\n\t     * @private\n\t     * @name clone\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the cloned `LazyWrapper` object.\n\t     */\n\t    function lazyClone() {\n\t      var result = new LazyWrapper(this.__wrapped__);\n\t      result.__actions__ = copyArray(this.__actions__);\n\t      result.__dir__ = this.__dir__;\n\t      result.__filtered__ = this.__filtered__;\n\t      result.__iteratees__ = copyArray(this.__iteratees__);\n\t      result.__takeCount__ = this.__takeCount__;\n\t      result.__views__ = copyArray(this.__views__);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the direction of lazy iteration.\n\t     *\n\t     * @private\n\t     * @name reverse\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n\t     */\n\t    function lazyReverse() {\n\t      if (this.__filtered__) {\n\t        var result = new LazyWrapper(this);\n\t        result.__dir__ = -1;\n\t        result.__filtered__ = true;\n\t      } else {\n\t        result = this.clone();\n\t        result.__dir__ *= -1;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Extracts the unwrapped value from its lazy wrapper.\n\t     *\n\t     * @private\n\t     * @name value\n\t     * @memberOf LazyWrapper\n\t     * @returns {*} Returns the unwrapped value.\n\t     */\n\t    function lazyValue() {\n\t      var array = this.__wrapped__.value(),\n\t          dir = this.__dir__,\n\t          isArr = isArray(array),\n\t          isRight = dir < 0,\n\t          arrLength = isArr ? array.length : 0,\n\t          view = getView(0, arrLength, this.__views__),\n\t          start = view.start,\n\t          end = view.end,\n\t          length = end - start,\n\t          index = isRight ? end : (start - 1),\n\t          iteratees = this.__iteratees__,\n\t          iterLength = iteratees.length,\n\t          resIndex = 0,\n\t          takeCount = nativeMin(length, this.__takeCount__);\n\t\n\t      if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {\n\t        return baseWrapperValue(array, this.__actions__);\n\t      }\n\t      var result = [];\n\t\n\t      outer:\n\t      while (length-- && resIndex < takeCount) {\n\t        index += dir;\n\t\n\t        var iterIndex = -1,\n\t            value = array[index];\n\t\n\t        while (++iterIndex < iterLength) {\n\t          var data = iteratees[iterIndex],\n\t              iteratee = data.iteratee,\n\t              type = data.type,\n\t              computed = iteratee(value);\n\t\n\t          if (type == LAZY_MAP_FLAG) {\n\t            value = computed;\n\t          } else if (!computed) {\n\t            if (type == LAZY_FILTER_FLAG) {\n\t              continue outer;\n\t            } else {\n\t              break outer;\n\t            }\n\t          }\n\t        }\n\t        result[resIndex++] = value;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an hash object.\n\t     *\n\t     * @private\n\t     * @returns {Object} Returns the new hash object.\n\t     */\n\t    function Hash() {}\n\t\n\t    /**\n\t     * Removes `key` and its value from the hash.\n\t     *\n\t     * @private\n\t     * @param {Object} hash The hash to modify.\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function hashDelete(hash, key) {\n\t      return hashHas(hash, key) && delete hash[key];\n\t    }\n\t\n\t    /**\n\t     * Gets the hash value for `key`.\n\t     *\n\t     * @private\n\t     * @param {Object} hash The hash to query.\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function hashGet(hash, key) {\n\t      if (nativeCreate) {\n\t        var result = hash[key];\n\t        return result === HASH_UNDEFINED ? undefined : result;\n\t      }\n\t      return hasOwnProperty.call(hash, key) ? hash[key] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if a hash value for `key` exists.\n\t     *\n\t     * @private\n\t     * @param {Object} hash The hash to query.\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function hashHas(hash, key) {\n\t      return nativeCreate ? hash[key] !== undefined : hasOwnProperty.call(hash, key);\n\t    }\n\t\n\t    /**\n\t     * Sets the hash `key` to `value`.\n\t     *\n\t     * @private\n\t     * @param {Object} hash The hash to modify.\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     */\n\t    function hashSet(hash, key, value) {\n\t      hash[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a map cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function MapCache(values) {\n\t      var index = -1,\n\t          length = values ? values.length : 0;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = values[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the map.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf MapCache\n\t     */\n\t    function mapClear() {\n\t      this.__data__ = { 'hash': new Hash, 'map': Map ? new Map : [], 'string': new Hash };\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the map.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function mapDelete(key) {\n\t      var data = this.__data__;\n\t      if (isKeyable(key)) {\n\t        return hashDelete(typeof key == 'string' ? data.string : data.hash, key);\n\t      }\n\t      return Map ? data.map['delete'](key) : assocDelete(data.map, key);\n\t    }\n\t\n\t    /**\n\t     * Gets the map value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function mapGet(key) {\n\t      var data = this.__data__;\n\t      if (isKeyable(key)) {\n\t        return hashGet(typeof key == 'string' ? data.string : data.hash, key);\n\t      }\n\t      return Map ? data.map.get(key) : assocGet(data.map, key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a map value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function mapHas(key) {\n\t      var data = this.__data__;\n\t      if (isKeyable(key)) {\n\t        return hashHas(typeof key == 'string' ? data.string : data.hash, key);\n\t      }\n\t      return Map ? data.map.has(key) : assocHas(data.map, key);\n\t    }\n\t\n\t    /**\n\t     * Sets the map `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the map cache object.\n\t     */\n\t    function mapSet(key, value) {\n\t      var data = this.__data__;\n\t      if (isKeyable(key)) {\n\t        hashSet(typeof key == 'string' ? data.string : data.hash, key, value);\n\t      } else if (Map) {\n\t        data.map.set(key, value);\n\t      } else {\n\t        assocSet(data.map, key, value);\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     *\n\t     * Creates a set cache object to store unique values.\n\t     *\n\t     * @private\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function SetCache(values) {\n\t      var index = -1,\n\t          length = values ? values.length : 0;\n\t\n\t      this.__data__ = new MapCache;\n\t      while (++index < length) {\n\t        this.push(values[index]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is in `cache`.\n\t     *\n\t     * @private\n\t     * @param {Object} cache The set cache to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns `true` if `value` is found, else `false`.\n\t     */\n\t    function cacheHas(cache, value) {\n\t      var map = cache.__data__;\n\t      if (isKeyable(value)) {\n\t        var data = map.__data__,\n\t            hash = typeof value == 'string' ? data.string : data.hash;\n\t\n\t        return hash[value] === HASH_UNDEFINED;\n\t      }\n\t      return map.has(value);\n\t    }\n\t\n\t    /**\n\t     * Adds `value` to the set cache.\n\t     *\n\t     * @private\n\t     * @name push\n\t     * @memberOf SetCache\n\t     * @param {*} value The value to cache.\n\t     */\n\t    function cachePush(value) {\n\t      var map = this.__data__;\n\t      if (isKeyable(value)) {\n\t        var data = map.__data__,\n\t            hash = typeof value == 'string' ? data.string : data.hash;\n\t\n\t        hash[value] = HASH_UNDEFINED;\n\t      }\n\t      else {\n\t        map.set(value, HASH_UNDEFINED);\n\t      }\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a stack cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function Stack(values) {\n\t      var index = -1,\n\t          length = values ? values.length : 0;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = values[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the stack.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf Stack\n\t     */\n\t    function stackClear() {\n\t      this.__data__ = { 'array': [], 'map': null };\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the stack.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function stackDelete(key) {\n\t      var data = this.__data__,\n\t          array = data.array;\n\t\n\t      return array ? assocDelete(array, key) : data.map['delete'](key);\n\t    }\n\t\n\t    /**\n\t     * Gets the stack value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function stackGet(key) {\n\t      var data = this.__data__,\n\t          array = data.array;\n\t\n\t      return array ? assocGet(array, key) : data.map.get(key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a stack value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function stackHas(key) {\n\t      var data = this.__data__,\n\t          array = data.array;\n\t\n\t      return array ? assocHas(array, key) : data.map.has(key);\n\t    }\n\t\n\t    /**\n\t     * Sets the stack `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the stack cache object.\n\t     */\n\t    function stackSet(key, value) {\n\t      var data = this.__data__,\n\t          array = data.array;\n\t\n\t      if (array) {\n\t        if (array.length < (LARGE_ARRAY_SIZE - 1)) {\n\t          assocSet(array, key, value);\n\t        } else {\n\t          data.array = null;\n\t          data.map = new MapCache(array);\n\t        }\n\t      }\n\t      var map = data.map;\n\t      if (map) {\n\t        map.set(key, value);\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Removes `key` and its value from the associative array.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function assocDelete(array, key) {\n\t      var index = assocIndexOf(array, key);\n\t      if (index < 0) {\n\t        return false;\n\t      }\n\t      var lastIndex = array.length - 1;\n\t      if (index == lastIndex) {\n\t        array.pop();\n\t      } else {\n\t        splice.call(array, index, 1);\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Gets the associative array value for `key`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function assocGet(array, key) {\n\t      var index = assocIndexOf(array, key);\n\t      return index < 0 ? undefined : array[index][1];\n\t    }\n\t\n\t    /**\n\t     * Checks if an associative array value for `key` exists.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function assocHas(array, key) {\n\t      return assocIndexOf(array, key) > -1;\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the first occurrence of `key` is found in `array`\n\t     * of key-value pairs.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to search.\n\t     * @param {*} key The key to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     */\n\t    function assocIndexOf(array, key) {\n\t      var length = array.length;\n\t      while (length--) {\n\t        if (eq(array[length][0], key)) {\n\t          return length;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Sets the associative array `key` to `value`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     */\n\t    function assocSet(array, key, value) {\n\t      var index = assocIndexOf(array, key);\n\t      if (index < 0) {\n\t        array.push([key, value]);\n\t      } else {\n\t        array[index][1] = value;\n\t      }\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Used by `_.defaults` to customize its `_.assignIn` use.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function assignInDefaults(objValue, srcValue, key, object) {\n\t      if (objValue === undefined ||\n\t          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n\t        return srcValue;\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * This function is like `assignValue` except that it doesn't assign `undefined` values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignMergeValue(object, key, value) {\n\t      if ((value !== undefined && !eq(object[key], value)) ||\n\t          (typeof key == 'number' && value === undefined && !(key in object))) {\n\t        object[key] = value;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignValue(object, key, value) {\n\t      var objValue = object[key];\n\t      if ((!eq(objValue, value) ||\n\t            (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) ||\n\t          (value === undefined && !(key in object))) {\n\t        object[key] = value;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Aggregates elements of `collection` on `accumulator` with keys transformed\n\t     * by `iteratee` and values set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform keys.\n\t     * @param {Object} accumulator The initial aggregated object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseAggregator(collection, setter, iteratee, accumulator) {\n\t      baseEach(collection, function(value, key, collection) {\n\t        setter(accumulator, value, iteratee(value), collection);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.assign` without support for multiple sources\n\t     * or `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseAssign(object, source) {\n\t      return object && copyObject(source, keys(source), object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.at` without support for individual paths.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {string[]} paths The property paths of elements to pick.\n\t     * @returns {Array} Returns the new array of picked elements.\n\t     */\n\t    function baseAt(object, paths) {\n\t      var index = -1,\n\t          isNil = object == null,\n\t          length = paths.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = isNil ? undefined : get(object, paths[index]);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clamp` which doesn't coerce arguments to numbers.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     */\n\t    function baseClamp(number, lower, upper) {\n\t      if (number === number) {\n\t        if (upper !== undefined) {\n\t          number = number <= upper ? number : upper;\n\t        }\n\t        if (lower !== undefined) {\n\t          number = number >= lower ? number : lower;\n\t        }\n\t      }\n\t      return number;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n\t     * traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @param {string} [key] The key of `value`.\n\t     * @param {Object} [object] The parent object of `value`.\n\t     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n\t     * @returns {*} Returns the cloned value.\n\t     */\n\t    function baseClone(value, isDeep, customizer, key, object, stack) {\n\t      var result;\n\t      if (customizer) {\n\t        result = object ? customizer(value, key, object, stack) : customizer(value);\n\t      }\n\t      if (result !== undefined) {\n\t        return result;\n\t      }\n\t      if (!isObject(value)) {\n\t        return value;\n\t      }\n\t      var isArr = isArray(value);\n\t      if (isArr) {\n\t        result = initCloneArray(value);\n\t        if (!isDeep) {\n\t          return copyArray(value, result);\n\t        }\n\t      } else {\n\t        var tag = getTag(value),\n\t            isFunc = tag == funcTag || tag == genTag;\n\t\n\t        if (isBuffer(value)) {\n\t          return cloneBuffer(value, isDeep);\n\t        }\n\t        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n\t          if (isHostObject(value)) {\n\t            return object ? value : {};\n\t          }\n\t          result = initCloneObject(isFunc ? {} : value);\n\t          if (!isDeep) {\n\t            return copySymbols(value, baseAssign(result, value));\n\t          }\n\t        } else {\n\t          return cloneableTags[tag]\n\t            ? initCloneByTag(value, tag, isDeep)\n\t            : (object ? value : {});\n\t        }\n\t      }\n\t      // Check for circular references and return its corresponding clone.\n\t      stack || (stack = new Stack);\n\t      var stacked = stack.get(value);\n\t      if (stacked) {\n\t        return stacked;\n\t      }\n\t      stack.set(value, result);\n\t\n\t      // Recursively populate clone (susceptible to call stack limits).\n\t      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n\t        assignValue(result, key, baseClone(subValue, isDeep, customizer, key, value, stack));\n\t      });\n\t      return isArr ? result : copySymbols(value, result);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.conforms` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseConforms(source) {\n\t      var props = keys(source),\n\t          length = props.length;\n\t\n\t      return function(object) {\n\t        if (object == null) {\n\t          return !length;\n\t        }\n\t        var index = length;\n\t        while (index--) {\n\t          var key = props[index],\n\t              predicate = source[key],\n\t              value = object[key];\n\t\n\t          if ((value === undefined && !(key in Object(object))) || !predicate(value)) {\n\t            return false;\n\t          }\n\t        }\n\t        return true;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.create` without support for assigning\n\t     * properties to the created object.\n\t     *\n\t     * @private\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    var baseCreate = (function() {\n\t      function object() {}\n\t      return function(prototype) {\n\t        if (isObject(prototype)) {\n\t          object.prototype = prototype;\n\t          var result = new object;\n\t          object.prototype = undefined;\n\t        }\n\t        return result || {};\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * The base implementation of `_.delay` and `_.defer` which accepts an array\n\t     * of `func` arguments.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {Object} args The arguments to provide to `func`.\n\t     * @returns {number} Returns the timer id.\n\t     */\n\t    function baseDelay(func, wait, args) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return setTimeout(function() { func.apply(undefined, args); }, wait);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.difference` without support for\n\t     * excluding multiple arrays or iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Array} values The values to exclude.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     */\n\t    function baseDifference(array, values, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          isCommon = true,\n\t          length = array.length,\n\t          result = [],\n\t          valuesLength = values.length;\n\t\n\t      if (!length) {\n\t        return result;\n\t      }\n\t      if (iteratee) {\n\t        values = arrayMap(values, baseUnary(iteratee));\n\t      }\n\t      if (comparator) {\n\t        includes = arrayIncludesWith;\n\t        isCommon = false;\n\t      }\n\t      else if (values.length >= LARGE_ARRAY_SIZE) {\n\t        includes = cacheHas;\n\t        isCommon = false;\n\t        values = new SetCache(values);\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        if (isCommon && computed === computed) {\n\t          var valuesIndex = valuesLength;\n\t          while (valuesIndex--) {\n\t            if (values[valuesIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(values, computed, comparator)) {\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forEach` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEach = createBaseEach(baseForOwn);\n\t\n\t    /**\n\t     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\t\n\t    /**\n\t     * The base implementation of `_.every` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check, else `false`\n\t     */\n\t    function baseEvery(collection, predicate) {\n\t      var result = true;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = !!predicate(value, index, collection);\n\t        return result;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.fill` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseFill(array, value, start, end) {\n\t      var length = array.length;\n\t\n\t      start = toInteger(start);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : toInteger(end);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      end = start > end ? 0 : toLength(end);\n\t      while (start < end) {\n\t        array[start++] = value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.filter` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function baseFilter(collection, predicate) {\n\t      var result = [];\n\t      baseEach(collection, function(value, index, collection) {\n\t        if (predicate(value, index, collection)) {\n\t          result.push(value);\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.flatten` with support for restricting flattening.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to flatten.\n\t     * @param {boolean} [isDeep] Specify a deep flatten.\n\t     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n\t     * @param {Array} [result=[]] The initial result value.\n\t     * @returns {Array} Returns the new flattened array.\n\t     */\n\t    function baseFlatten(array, isDeep, isStrict, result) {\n\t      result || (result = []);\n\t\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (isArrayLikeObject(value) &&\n\t            (isStrict || isArray(value) || isArguments(value))) {\n\t          if (isDeep) {\n\t            // Recursively flatten arrays (susceptible to call stack limits).\n\t            baseFlatten(value, isDeep, isStrict, result);\n\t          } else {\n\t            arrayPush(result, value);\n\t          }\n\t        } else if (!isStrict) {\n\t          result[result.length] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n\t     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n\t     * each property. Iteratee functions may exit iteration early by explicitly\n\t     * returning `false`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseFor = createBaseFor();\n\t\n\t    /**\n\t     * This function is like `baseFor` except that it iterates over properties\n\t     * in the opposite order.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseForRight = createBaseFor(true);\n\t\n\t    /**\n\t     * The base implementation of `_.forIn` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForIn(object, iteratee) {\n\t      return object == null ? object : baseFor(object, iteratee, keysIn);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwn(object, iteratee) {\n\t      return object && baseFor(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwnRight(object, iteratee) {\n\t      return object && baseForRight(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.functions` which creates an array of\n\t     * `object` function property names filtered from `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} props The property names to filter.\n\t     * @returns {Array} Returns the new array of filtered property names.\n\t     */\n\t    function baseFunctions(object, props) {\n\t      return arrayFilter(props, function(key) {\n\t        return isFunction(object[key]);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.get` without support for default values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseGet(object, path) {\n\t      path = isKey(path, object) ? [path + ''] : baseToPath(path);\n\t\n\t      var index = 0,\n\t          length = path.length;\n\t\n\t      while (object != null && index < length) {\n\t        object = object[path[index++]];\n\t      }\n\t      return (index && index == length) ? object : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.has` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHas(object, key) {\n\t      // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,\n\t      // that are composed entirely of index properties, return `false` for\n\t      // `hasOwnProperty` checks of them.\n\t      return hasOwnProperty.call(object, key) ||\n\t        (typeof object == 'object' && key in object && getPrototypeOf(object) === null);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.hasIn` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHasIn(object, key) {\n\t      return key in Object(object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.inRange` which doesn't coerce arguments to numbers.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to check.\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     */\n\t    function baseInRange(number, start, end) {\n\t      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.intersection`, without support\n\t     * for iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     */\n\t    function baseIntersection(arrays, iteratee, comparator) {\n\t      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n\t          othLength = arrays.length,\n\t          othIndex = othLength,\n\t          caches = Array(othLength),\n\t          result = [];\n\t\n\t      while (othIndex--) {\n\t        var array = arrays[othIndex];\n\t        if (othIndex && iteratee) {\n\t          array = arrayMap(array, baseUnary(iteratee));\n\t        }\n\t        caches[othIndex] = !comparator && (iteratee || array.length >= 120)\n\t          ? new SetCache(othIndex && array)\n\t          : undefined;\n\t      }\n\t      array = arrays[0];\n\t\n\t      var index = -1,\n\t          length = array.length,\n\t          seen = caches[0];\n\t\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        if (!(seen ? cacheHas(seen, computed) : includes(result, computed, comparator))) {\n\t          var othIndex = othLength;\n\t          while (--othIndex) {\n\t            var cache = caches[othIndex];\n\t            if (!(cache ? cacheHas(cache, computed) : includes(arrays[othIndex], computed, comparator))) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (seen) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invert` and `_.invertBy` which inverts\n\t     * `object` with values transformed by `iteratee` and set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform values.\n\t     * @param {Object} accumulator The initial inverted object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseInverter(object, setter, iteratee, accumulator) {\n\t      baseForOwn(object, function(value, key, object) {\n\t        setter(accumulator, iteratee(value), key, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invoke` without support for individual\n\t     * method arguments.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {Array} args The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     */\n\t    function baseInvoke(object, path, args) {\n\t      if (!isKey(path, object)) {\n\t        path = baseToPath(path);\n\t        object = parent(object, path);\n\t        path = last(path);\n\t      }\n\t      var func = object == null ? object : object[path];\n\t      return func == null ? undefined : apply(func, object, args);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isEqual` which supports partial comparisons\n\t     * and tracks traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {boolean} [bitmask] The bitmask of comparison flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - Unordered comparison\n\t     *     2 - Partial comparison\n\t     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     */\n\t    function baseIsEqual(value, other, customizer, bitmask, stack) {\n\t      if (value === other) {\n\t        return true;\n\t      }\n\t      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n\t        return value !== value && other !== other;\n\t      }\n\t      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqual` for arrays and objects which performs\n\t     * deep comparisons and tracks traversed objects enabling objects with circular\n\t     * references to be compared.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n\t     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n\t      var objIsArr = isArray(object),\n\t          othIsArr = isArray(other),\n\t          objTag = arrayTag,\n\t          othTag = arrayTag;\n\t\n\t      if (!objIsArr) {\n\t        objTag = getTag(object);\n\t        if (objTag == argsTag) {\n\t          objTag = objectTag;\n\t        } else if (objTag != objectTag) {\n\t          objIsArr = isTypedArray(object);\n\t        }\n\t      }\n\t      if (!othIsArr) {\n\t        othTag = getTag(other);\n\t        if (othTag == argsTag) {\n\t          othTag = objectTag;\n\t        } else if (othTag != objectTag) {\n\t          othIsArr = isTypedArray(other);\n\t        }\n\t      }\n\t      var objIsObj = objTag == objectTag && !isHostObject(object),\n\t          othIsObj = othTag == objectTag && !isHostObject(other),\n\t          isSameTag = objTag == othTag;\n\t\n\t      if (isSameTag && !(objIsArr || objIsObj)) {\n\t        return equalByTag(object, other, objTag, equalFunc, customizer, bitmask);\n\t      }\n\t      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n\t      if (!isPartial) {\n\t        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n\t            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\t\n\t        if (objIsWrapped || othIsWrapped) {\n\t          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, bitmask, stack);\n\t        }\n\t      }\n\t      if (!isSameTag) {\n\t        return false;\n\t      }\n\t      stack || (stack = new Stack);\n\t      return (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, bitmask, stack);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Array} matchData The property names, values, and compare flags to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     */\n\t    function baseIsMatch(object, source, matchData, customizer) {\n\t      var index = matchData.length,\n\t          length = index,\n\t          noCustomizer = !customizer;\n\t\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      object = Object(object);\n\t      while (index--) {\n\t        var data = matchData[index];\n\t        if ((noCustomizer && data[2])\n\t              ? data[1] !== object[data[0]]\n\t              : !(data[0] in object)\n\t            ) {\n\t          return false;\n\t        }\n\t      }\n\t      while (++index < length) {\n\t        data = matchData[index];\n\t        var key = data[0],\n\t            objValue = object[key],\n\t            srcValue = data[1];\n\t\n\t        if (noCustomizer && data[2]) {\n\t          if (objValue === undefined && !(key in object)) {\n\t            return false;\n\t          }\n\t        } else {\n\t          var stack = new Stack,\n\t              result = customizer ? customizer(objValue, srcValue, key, object, source, stack) : undefined;\n\t\n\t          if (!(result === undefined\n\t                ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n\t                : result\n\t              )) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.iteratee`.\n\t     *\n\t     * @private\n\t     * @param {*} [value=_.identity] The value to convert to an iteratee.\n\t     * @returns {Function} Returns the iteratee.\n\t     */\n\t    function baseIteratee(value) {\n\t      var type = typeof value;\n\t      if (type == 'function') {\n\t        return value;\n\t      }\n\t      if (value == null) {\n\t        return identity;\n\t      }\n\t      if (type == 'object') {\n\t        return isArray(value)\n\t          ? baseMatchesProperty(value[0], value[1])\n\t          : baseMatches(value);\n\t      }\n\t      return property(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.keys` which doesn't skip the constructor\n\t     * property of prototypes or treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @type Function\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function baseKeys(object) {\n\t      return nativeKeys(Object(object));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.keysIn` which doesn't skip the constructor\n\t     * property of prototypes or treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function baseKeysIn(object) {\n\t      object = object == null ? object : Object(object);\n\t\n\t      var result = [];\n\t      for (var key in object) {\n\t        result.push(key);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    // Fallback for IE < 9 with es6-shim.\n\t    if (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {\n\t      baseKeysIn = function(object) {\n\t        return iteratorToArray(enumerate(object));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.map` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function baseMap(collection, iteratee) {\n\t      var index = -1,\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value, key, collection) {\n\t        result[++index] = iteratee(value, key, collection);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matches` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseMatches(source) {\n\t      var matchData = getMatchData(source);\n\t      if (matchData.length == 1 && matchData[0][2]) {\n\t        var key = matchData[0][0],\n\t            value = matchData[0][1];\n\t\n\t        return function(object) {\n\t          if (object == null) {\n\t            return false;\n\t          }\n\t          return object[key] === value &&\n\t            (value !== undefined || (key in Object(object)));\n\t        };\n\t      }\n\t      return function(object) {\n\t        return object === source || baseIsMatch(object, source, matchData);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n\t     *\n\t     * @private\n\t     * @param {string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseMatchesProperty(path, srcValue) {\n\t      return function(object) {\n\t        var objValue = get(object, path);\n\t        return (objValue === undefined && objValue === srcValue)\n\t          ? hasIn(object, path)\n\t          : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.merge` without support for multiple sources.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} [customizer] The function to customize merged values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged counterparts.\n\t     */\n\t    function baseMerge(object, source, srcIndex, customizer, stack) {\n\t      if (object === source) {\n\t        return;\n\t      }\n\t      var props = (isArray(source) || isTypedArray(source)) ? undefined : keysIn(source);\n\t      arrayEach(props || source, function(srcValue, key) {\n\t        if (props) {\n\t          key = srcValue;\n\t          srcValue = source[key];\n\t        }\n\t        if (isObject(srcValue)) {\n\t          stack || (stack = new Stack);\n\t          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n\t        }\n\t        else {\n\t          var newValue = customizer ? customizer(object[key], srcValue, (key + ''), object, source, stack) : undefined;\n\t          if (newValue === undefined) {\n\t            newValue = srcValue;\n\t          }\n\t          assignMergeValue(object, key, newValue);\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseMerge` for arrays and objects which performs\n\t     * deep merges and tracks traversed objects enabling objects with circular\n\t     * references to be merged.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {string} key The key of the value to merge.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} mergeFunc The function to merge values.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged counterparts.\n\t     */\n\t    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n\t      var objValue = object[key],\n\t          srcValue = source[key],\n\t          stacked = stack.get(srcValue);\n\t\n\t      if (stacked) {\n\t        assignMergeValue(object, key, stacked);\n\t        return;\n\t      }\n\t      var newValue = customizer ? customizer(objValue, srcValue, (key + ''), object, source, stack) : undefined,\n\t          isCommon = newValue === undefined;\n\t\n\t      if (isCommon) {\n\t        newValue = srcValue;\n\t        if (isArray(srcValue) || isTypedArray(srcValue)) {\n\t          if (isArray(objValue)) {\n\t            newValue = srcIndex ? copyArray(objValue) : objValue;\n\t          }\n\t          else if (isArrayLikeObject(objValue)) {\n\t            newValue = copyArray(objValue);\n\t          }\n\t          else {\n\t            isCommon = false;\n\t            newValue = baseClone(srcValue);\n\t          }\n\t        }\n\t        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n\t          if (isArguments(objValue)) {\n\t            newValue = toPlainObject(objValue);\n\t          }\n\t          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n\t            isCommon = false;\n\t            newValue = baseClone(srcValue);\n\t          }\n\t          else {\n\t            newValue = srcIndex ? baseClone(objValue) : objValue;\n\t          }\n\t        }\n\t        else {\n\t          isCommon = false;\n\t        }\n\t      }\n\t      stack.set(srcValue, newValue);\n\t\n\t      if (isCommon) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n\t      }\n\t      assignMergeValue(object, key, newValue);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.orderBy` without param guards.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {string[]} orders The sort orders of `iteratees`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     */\n\t    function baseOrderBy(collection, iteratees, orders) {\n\t      var index = -1,\n\t          toIteratee = getIteratee();\n\t\n\t      iteratees = arrayMap(iteratees.length ? iteratees : Array(1), function(iteratee) {\n\t        return toIteratee(iteratee);\n\t      });\n\t\n\t      var result = baseMap(collection, function(value, key, collection) {\n\t        var criteria = arrayMap(iteratees, function(iteratee) {\n\t          return iteratee(value);\n\t        });\n\t        return { 'criteria': criteria, 'index': ++index, 'value': value };\n\t      });\n\t\n\t      return baseSortBy(result, function(object, other) {\n\t        return compareMultiple(object, other, orders);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pick` without support for individual\n\t     * property names.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} props The property names to pick.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePick(object, props) {\n\t      object = Object(object);\n\t      return arrayReduce(props, function(result, key) {\n\t        if (key in object) {\n\t          result[key] = object[key];\n\t        }\n\t        return result;\n\t      }, {});\n\t    }\n\t\n\t    /**\n\t     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {Function} predicate The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePickBy(object, predicate) {\n\t      var result = {};\n\t      baseForIn(object, function(value, key) {\n\t        if (predicate(value, key)) {\n\t          result[key] = value;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.property` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {string} key The key of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseProperty(key) {\n\t      return function(object) {\n\t        return object == null ? undefined : object[key];\n\t      };\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseProperty` which supports deep paths.\n\t     *\n\t     * @private\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function basePropertyDeep(path) {\n\t      return function(object) {\n\t        return baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAll`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAll(array, values) {\n\t      return basePullAllBy(array, values);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAllBy` without support for iteratee\n\t     * shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAllBy(array, values, iteratee) {\n\t      var index = -1,\n\t          length = values.length,\n\t          seen = array;\n\t\n\t      if (iteratee) {\n\t        seen = arrayMap(array, function(value) { return iteratee(value); });\n\t      }\n\t      while (++index < length) {\n\t        var fromIndex = 0,\n\t            value = values[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        while ((fromIndex = baseIndexOf(seen, computed, fromIndex)) > -1) {\n\t          if (seen !== array) {\n\t            splice.call(seen, fromIndex, 1);\n\t          }\n\t          splice.call(array, fromIndex, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAt` without support for individual\n\t     * indexes or capturing the removed elements.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {number[]} indexes The indexes of elements to remove.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAt(array, indexes) {\n\t      var length = array ? indexes.length : 0,\n\t          lastIndex = length - 1;\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        if (lastIndex == length || index != previous) {\n\t          var previous = index;\n\t          if (isIndex(index)) {\n\t            splice.call(array, index, 1);\n\t          }\n\t          else if (!isKey(index, array)) {\n\t            var path = baseToPath(index),\n\t                object = parent(array, path);\n\t\n\t            if (object != null) {\n\t              delete object[last(path)];\n\t            }\n\t          }\n\t          else {\n\t            delete array[index];\n\t          }\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.random` without support for returning\n\t     * floating-point numbers.\n\t     *\n\t     * @private\n\t     * @param {number} lower The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the random number.\n\t     */\n\t    function baseRandom(lower, upper) {\n\t      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n\t     * coerce arguments to numbers.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} step The value to increment or decrement by.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the new array of numbers.\n\t     */\n\t    function baseRange(start, end, step, fromRight) {\n\t      var index = -1,\n\t          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n\t          result = Array(length);\n\t\n\t      while (length--) {\n\t        result[fromRight ? length : ++index] = start;\n\t        start += step;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.set`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize path creation.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseSet(object, path, value, customizer) {\n\t      path = isKey(path, object) ? [path + ''] : baseToPath(path);\n\t\n\t      var index = -1,\n\t          length = path.length,\n\t          lastIndex = length - 1,\n\t          nested = object;\n\t\n\t      while (nested != null && ++index < length) {\n\t        var key = path[index];\n\t        if (isObject(nested)) {\n\t          var newValue = value;\n\t          if (index != lastIndex) {\n\t            var objValue = nested[key];\n\t            newValue = customizer ? customizer(objValue, key, nested) : undefined;\n\t            if (newValue === undefined) {\n\t              newValue = objValue == null ? (isIndex(path[index + 1]) ? [] : {}) : objValue;\n\t            }\n\t          }\n\t          assignValue(nested, key, newValue);\n\t        }\n\t        nested = nested[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `setData` without support for hot loop detection.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var baseSetData = !metaMap ? identity : function(func, data) {\n\t      metaMap.set(func, data);\n\t      return func;\n\t    };\n\t\n\t    /**\n\t     * The base implementation of `_.slice` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseSlice(array, start, end) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = end > length ? length : end;\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : ((end - start) >>> 0);\n\t      start >>>= 0;\n\t\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = array[index + start];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.some` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.\n\t     */\n\t    function baseSome(collection, predicate) {\n\t      var result;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = predicate(value, index, collection);\n\t        return !result;\n\t      });\n\t      return !!result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n\t     * performs a binary search of `array` to determine the index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function baseSortedIndex(array, value, retHighest) {\n\t      var low = 0,\n\t          high = array ? array.length : low;\n\t\n\t      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n\t        while (low < high) {\n\t          var mid = (low + high) >>> 1,\n\t              computed = array[mid];\n\t\n\t          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n\t            low = mid + 1;\n\t          } else {\n\t            high = mid;\n\t          }\n\t        }\n\t        return high;\n\t      }\n\t      return baseSortedIndexBy(array, value, identity, retHighest);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n\t     * which invokes `iteratee` for `value` and each element of `array` to compute\n\t     * their sort ranking. The iteratee is invoked with one argument; (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} iteratee The iteratee invoked per element.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n\t     */\n\t    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n\t      value = iteratee(value);\n\t\n\t      var low = 0,\n\t          high = array ? array.length : 0,\n\t          valIsNaN = value !== value,\n\t          valIsNull = value === null,\n\t          valIsUndef = value === undefined;\n\t\n\t      while (low < high) {\n\t        var mid = nativeFloor((low + high) / 2),\n\t            computed = iteratee(array[mid]),\n\t            isDef = computed !== undefined,\n\t            isReflexive = computed === computed;\n\t\n\t        if (valIsNaN) {\n\t          var setLow = isReflexive || retHighest;\n\t        } else if (valIsNull) {\n\t          setLow = isReflexive && isDef && (retHighest || computed != null);\n\t        } else if (valIsUndef) {\n\t          setLow = isReflexive && (retHighest || isDef);\n\t        } else if (computed == null) {\n\t          setLow = false;\n\t        } else {\n\t          setLow = retHighest ? (computed <= value) : (computed < value);\n\t        }\n\t        if (setLow) {\n\t          low = mid + 1;\n\t        } else {\n\t          high = mid;\n\t        }\n\t      }\n\t      return nativeMin(high, MAX_ARRAY_INDEX);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedUniq`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseSortedUniq(array) {\n\t      return baseSortedUniqBy(array);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedUniqBy` without support for iteratee\n\t     * shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseSortedUniqBy(array, iteratee) {\n\t      var index = 0,\n\t          length = array.length,\n\t          value = array[0],\n\t          computed = iteratee ? iteratee(value) : value,\n\t          seen = computed,\n\t          resIndex = 0,\n\t          result = [value];\n\t\n\t      while (++index < length) {\n\t        value = array[index],\n\t        computed = iteratee ? iteratee(value) : value;\n\t\n\t        if (!eq(computed, seen)) {\n\t          seen = computed;\n\t          result[++resIndex] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.toPath` which only converts `value` to a\n\t     * path if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Array} Returns the property path array.\n\t     */\n\t    function baseToPath(value) {\n\t      return isArray(value) ? value : stringToPath(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseUniq(array, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          length = array.length,\n\t          isCommon = true,\n\t          result = [],\n\t          seen = result;\n\t\n\t      if (comparator) {\n\t        isCommon = false;\n\t        includes = arrayIncludesWith;\n\t      }\n\t      else if (length >= LARGE_ARRAY_SIZE) {\n\t        var set = iteratee ? null : createSet(array);\n\t        if (set) {\n\t          return setToArray(set);\n\t        }\n\t        isCommon = false;\n\t        includes = cacheHas;\n\t        seen = new SetCache;\n\t      }\n\t      else {\n\t        seen = iteratee ? [] : result;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        if (isCommon && computed === computed) {\n\t          var seenIndex = seen.length;\n\t          while (seenIndex--) {\n\t            if (seen[seenIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (iteratee) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(seen, computed, comparator)) {\n\t          if (seen !== result) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.unset`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     */\n\t    function baseUnset(object, path) {\n\t      path = isKey(path, object) ? [path + ''] : baseToPath(path);\n\t      object = parent(object, path);\n\t      var key = last(path);\n\t      return (object != null && has(object, key)) ? delete object[key] : true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n\t     * without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseWhile(array, predicate, isDrop, fromRight) {\n\t      var length = array.length,\n\t          index = fromRight ? length : -1;\n\t\n\t      while ((fromRight ? index-- : ++index < length) &&\n\t        predicate(array[index], index, array)) {}\n\t\n\t      return isDrop\n\t        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n\t        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `wrapperValue` which returns the result of\n\t     * performing a sequence of actions on the unwrapped `value`, where each\n\t     * successive action is supplied the return value of the previous.\n\t     *\n\t     * @private\n\t     * @param {*} value The unwrapped value.\n\t     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseWrapperValue(value, actions) {\n\t      var result = value;\n\t      if (result instanceof LazyWrapper) {\n\t        result = result.value();\n\t      }\n\t      return arrayReduce(actions, function(result, action) {\n\t        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n\t      }, result);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.xor`, without support for\n\t     * iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of values.\n\t     */\n\t    function baseXor(arrays, iteratee, comparator) {\n\t      var index = -1,\n\t          length = arrays.length;\n\t\n\t      while (++index < length) {\n\t        var result = result\n\t          ? arrayPush(\n\t              baseDifference(result, arrays[index], iteratee, comparator),\n\t              baseDifference(arrays[index], result, iteratee, comparator)\n\t            )\n\t          : arrays[index];\n\t      }\n\t      return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];\n\t    }\n\t\n\t    /**\n\t     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array} props The property names.\n\t     * @param {Array} values The property values.\n\t     * @param {Function} assignFunc The function to assign values.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function baseZipObject(props, values, assignFunc) {\n\t      var index = -1,\n\t          length = props.length,\n\t          valsLength = values.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        assignFunc(result, props[index], index < valsLength ? values[index] : undefined);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of  `buffer`.\n\t     *\n\t     * @private\n\t     * @param {Buffer} buffer The buffer to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Buffer} Returns the cloned buffer.\n\t     */\n\t    function cloneBuffer(buffer, isDeep) {\n\t      if (isDeep) {\n\t        return buffer.slice();\n\t      }\n\t      var Ctor = buffer.constructor,\n\t          result = new Ctor(buffer.length);\n\t\n\t      buffer.copy(result);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `arrayBuffer`.\n\t     *\n\t     * @private\n\t     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n\t     * @returns {ArrayBuffer} Returns the cloned array buffer.\n\t     */\n\t    function cloneArrayBuffer(arrayBuffer) {\n\t      var Ctor = arrayBuffer.constructor,\n\t          result = new Ctor(arrayBuffer.byteLength),\n\t          view = new Uint8Array(result);\n\t\n\t      view.set(new Uint8Array(arrayBuffer));\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `map`.\n\t     *\n\t     * @private\n\t     * @param {Object} map The map to clone.\n\t     * @returns {Object} Returns the cloned map.\n\t     */\n\t    function cloneMap(map) {\n\t      var Ctor = map.constructor;\n\t      return arrayReduce(mapToArray(map), addMapEntry, new Ctor);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `regexp`.\n\t     *\n\t     * @private\n\t     * @param {Object} regexp The regexp to clone.\n\t     * @returns {Object} Returns the cloned regexp.\n\t     */\n\t    function cloneRegExp(regexp) {\n\t      var Ctor = regexp.constructor,\n\t          result = new Ctor(regexp.source, reFlags.exec(regexp));\n\t\n\t      result.lastIndex = regexp.lastIndex;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `set`.\n\t     *\n\t     * @private\n\t     * @param {Object} set The set to clone.\n\t     * @returns {Object} Returns the cloned set.\n\t     */\n\t    function cloneSet(set) {\n\t      var Ctor = set.constructor;\n\t      return arrayReduce(setToArray(set), addSetEntry, new Ctor);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the `symbol` object.\n\t     *\n\t     * @private\n\t     * @param {Object} symbol The symbol object to clone.\n\t     * @returns {Object} Returns the cloned symbol object.\n\t     */\n\t    function cloneSymbol(symbol) {\n\t      return Symbol ? Object(symbolValueOf.call(symbol)) : {};\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `typedArray`.\n\t     *\n\t     * @private\n\t     * @param {Object} typedArray The typed array to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned typed array.\n\t     */\n\t    function cloneTypedArray(typedArray, isDeep) {\n\t      var buffer = typedArray.buffer,\n\t          Ctor = typedArray.constructor;\n\t\n\t      return new Ctor(isDeep ? cloneArrayBuffer(buffer) : buffer, typedArray.byteOffset, typedArray.length);\n\t    }\n\t\n\t    /**\n\t     * Creates an array that is the composition of partially applied arguments,\n\t     * placeholders, and provided arguments into a single array of arguments.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} args The provided arguments.\n\t     * @param {Array} partials The arguments to prepend to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgs(args, partials, holders) {\n\t      var holdersLength = holders.length,\n\t          argsIndex = -1,\n\t          argsLength = nativeMax(args.length - holdersLength, 0),\n\t          leftIndex = -1,\n\t          leftLength = partials.length,\n\t          result = Array(leftLength + argsLength);\n\t\n\t      while (++leftIndex < leftLength) {\n\t        result[leftIndex] = partials[leftIndex];\n\t      }\n\t      while (++argsIndex < holdersLength) {\n\t        result[holders[argsIndex]] = args[argsIndex];\n\t      }\n\t      while (argsLength--) {\n\t        result[leftIndex++] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This function is like `composeArgs` except that the arguments composition\n\t     * is tailored for `_.partialRight`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} args The provided arguments.\n\t     * @param {Array} partials The arguments to append to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgsRight(args, partials, holders) {\n\t      var holdersIndex = -1,\n\t          holdersLength = holders.length,\n\t          argsIndex = -1,\n\t          argsLength = nativeMax(args.length - holdersLength, 0),\n\t          rightIndex = -1,\n\t          rightLength = partials.length,\n\t          result = Array(argsLength + rightLength);\n\t\n\t      while (++argsIndex < argsLength) {\n\t        result[argsIndex] = args[argsIndex];\n\t      }\n\t      var offset = argsIndex;\n\t      while (++rightIndex < rightLength) {\n\t        result[offset + rightIndex] = partials[rightIndex];\n\t      }\n\t      while (++holdersIndex < holdersLength) {\n\t        result[offset + holders[holdersIndex]] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Copies the values of `source` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} source The array to copy values from.\n\t     * @param {Array} [array=[]] The array to copy values to.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function copyArray(source, array) {\n\t      var index = -1,\n\t          length = source.length;\n\t\n\t      array || (array = Array(length));\n\t      while (++index < length) {\n\t        array[index] = source[index];\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Copies properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy properties from.\n\t     * @param {Array} props The property names to copy.\n\t     * @param {Object} [object={}] The object to copy properties to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copyObject(source, props, object) {\n\t      return copyObjectWith(source, props, object);\n\t    }\n\t\n\t    /**\n\t     * This function is like `copyObject` except that it accepts a function to\n\t     * customize copied values.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy properties from.\n\t     * @param {Array} props The property names to copy.\n\t     * @param {Object} [object={}] The object to copy properties to.\n\t     * @param {Function} [customizer] The function to customize copied values.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copyObjectWith(source, props, object, customizer) {\n\t      object || (object = {});\n\t\n\t      var index = -1,\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index],\n\t            newValue = customizer ? customizer(object[key], source[key], key, object, source) : source[key];\n\t\n\t        assignValue(object, key, newValue);\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Copies own symbol properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy symbols from.\n\t     * @param {Object} [object={}] The object to copy symbols to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copySymbols(source, object) {\n\t      return copyObject(source, getSymbols(source), object);\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.groupBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} [initializer] The accumulator object initializer.\n\t     * @returns {Function} Returns the new aggregator function.\n\t     */\n\t    function createAggregator(setter, initializer) {\n\t      return function(collection, iteratee) {\n\t        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n\t            accumulator = initializer ? initializer() : {};\n\t\n\t        return func(collection, setter, getIteratee(iteratee), accumulator);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.assign`.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @returns {Function} Returns the new assigner function.\n\t     */\n\t    function createAssigner(assigner) {\n\t      return rest(function(object, sources) {\n\t        var index = -1,\n\t            length = sources.length,\n\t            customizer = length > 1 ? sources[length - 1] : undefined,\n\t            guard = length > 2 ? sources[2] : undefined;\n\t\n\t        customizer = typeof customizer == 'function' ? (length--, customizer) : undefined;\n\t        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n\t          customizer = length < 3 ? undefined : customizer;\n\t          length = 1;\n\t        }\n\t        object = Object(object);\n\t        while (++index < length) {\n\t          var source = sources[index];\n\t          if (source) {\n\t            assigner(object, source, index, customizer);\n\t          }\n\t        }\n\t        return object;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a `baseEach` or `baseEachRight` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseEach(eachFunc, fromRight) {\n\t      return function(collection, iteratee) {\n\t        if (collection == null) {\n\t          return collection;\n\t        }\n\t        if (!isArrayLike(collection)) {\n\t          return eachFunc(collection, iteratee);\n\t        }\n\t        var length = collection.length,\n\t            index = fromRight ? length : -1,\n\t            iterable = Object(collection);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          if (iteratee(iterable[index], index, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return collection;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a base function for methods like `_.forIn`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseFor(fromRight) {\n\t      return function(object, iteratee, keysFunc) {\n\t        var index = -1,\n\t            iterable = Object(object),\n\t            props = keysFunc(object),\n\t            length = props.length;\n\t\n\t        while (length--) {\n\t          var key = props[fromRight ? length : ++index];\n\t          if (iteratee(iterable[key], key, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return object;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the optional `this`\n\t     * binding of `thisArg`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createBaseWrapper(func, bitmask, thisArg) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(isBind ? thisArg : this, arguments);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.lowerFirst`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `String` case method to use.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function createCaseFirst(methodName) {\n\t      return function(string) {\n\t        string = toString(string);\n\t\n\t        var strSymbols = reHasComplexSymbol.test(string) ? stringToArray(string) : undefined,\n\t            chr = strSymbols ? strSymbols[0] : string.charAt(0),\n\t            trailing = strSymbols ? strSymbols.slice(1).join('') : string.slice(1);\n\t\n\t        return chr[methodName]() + trailing;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.camelCase`.\n\t     *\n\t     * @private\n\t     * @param {Function} callback The function to combine each word.\n\t     * @returns {Function} Returns the new compounder function.\n\t     */\n\t    function createCompounder(callback) {\n\t      return function(string) {\n\t        return arrayReduce(words(deburr(string)), callback, '');\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that produces an instance of `Ctor` regardless of\n\t     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n\t     *\n\t     * @private\n\t     * @param {Function} Ctor The constructor to wrap.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCtorWrapper(Ctor) {\n\t      return function() {\n\t        // Use a `switch` statement to work with class constructors.\n\t        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n\t        // for more details.\n\t        var args = arguments;\n\t        switch (args.length) {\n\t          case 0: return new Ctor;\n\t          case 1: return new Ctor(args[0]);\n\t          case 2: return new Ctor(args[0], args[1]);\n\t          case 3: return new Ctor(args[0], args[1], args[2]);\n\t          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n\t          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n\t          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n\t        }\n\t        var thisBinding = baseCreate(Ctor.prototype),\n\t            result = Ctor.apply(thisBinding, args);\n\t\n\t        // Mimic the constructor's `return` behavior.\n\t        // See https://es5.github.io/#x13.2.2 for more details.\n\t        return isObject(result) ? result : thisBinding;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to enable currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n\t     * @param {number} arity The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCurryWrapper(func, bitmask, arity) {\n\t      var Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            index = length,\n\t            args = Array(length),\n\t            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func,\n\t            placeholder = lodash.placeholder || wrapper.placeholder;\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n\t          ? []\n\t          : replaceHolders(args, placeholder);\n\t\n\t        length -= holders.length;\n\t        return length < arity\n\t          ? createRecurryWrapper(func, bitmask, createHybridWrapper, placeholder, undefined, args, holders, undefined, undefined, arity - length)\n\t          : apply(fn, this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.flow` or `_.flowRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new flow function.\n\t     */\n\t    function createFlow(fromRight) {\n\t      return rest(function(funcs) {\n\t        funcs = baseFlatten(funcs);\n\t\n\t        var length = funcs.length,\n\t            index = length,\n\t            prereq = LodashWrapper.prototype.thru;\n\t\n\t        if (fromRight) {\n\t          funcs.reverse();\n\t        }\n\t        while (index--) {\n\t          var func = funcs[index];\n\t          if (typeof func != 'function') {\n\t            throw new TypeError(FUNC_ERROR_TEXT);\n\t          }\n\t          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n\t            var wrapper = new LodashWrapper([], true);\n\t          }\n\t        }\n\t        index = wrapper ? index : length;\n\t        while (++index < length) {\n\t          func = funcs[index];\n\t\n\t          var funcName = getFuncName(func),\n\t              data = funcName == 'wrapper' ? getData(func) : undefined;\n\t\n\t          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n\t            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n\t          } else {\n\t            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n\t          }\n\t        }\n\t        return function() {\n\t          var args = arguments,\n\t              value = args[0];\n\t\n\t          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n\t            return wrapper.plant(value).value();\n\t          }\n\t          var index = 0,\n\t              result = length ? funcs[index].apply(this, args) : value;\n\t\n\t          while (++index < length) {\n\t            result = funcs[index].call(this, result);\n\t          }\n\t          return result;\n\t        };\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with optional `this`\n\t     * binding of `thisArg`, partial application, and currying.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n\t     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n\t      var isAry = bitmask & ARY_FLAG,\n\t          isBind = bitmask & BIND_FLAG,\n\t          isBindKey = bitmask & BIND_KEY_FLAG,\n\t          isCurry = bitmask & CURRY_FLAG,\n\t          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n\t          isFlip = bitmask & FLIP_FLAG,\n\t          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            index = length,\n\t            args = Array(length);\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        if (partials) {\n\t          args = composeArgs(args, partials, holders);\n\t        }\n\t        if (partialsRight) {\n\t          args = composeArgsRight(args, partialsRight, holdersRight);\n\t        }\n\t        if (isCurry || isCurryRight) {\n\t          var placeholder = lodash.placeholder || wrapper.placeholder,\n\t              argsHolders = replaceHolders(args, placeholder);\n\t\n\t          length -= argsHolders.length;\n\t          if (length < arity) {\n\t            return createRecurryWrapper(func, bitmask, createHybridWrapper, placeholder, thisArg, args, argsHolders, argPos, ary, arity - length);\n\t          }\n\t        }\n\t        var thisBinding = isBind ? thisArg : this,\n\t            fn = isBindKey ? thisBinding[func] : func;\n\t\n\t        if (argPos) {\n\t          args = reorder(args, argPos);\n\t        } else if (isFlip && args.length > 1) {\n\t          args.reverse();\n\t        }\n\t        if (isAry && ary < args.length) {\n\t          args.length = ary;\n\t        }\n\t        if (this && this !== root && this instanceof wrapper) {\n\t          fn = Ctor || createCtorWrapper(fn);\n\t        }\n\t        return fn.apply(thisBinding, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.invertBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} toIteratee The function to resolve iteratees.\n\t     * @returns {Function} Returns the new inverter function.\n\t     */\n\t    function createInverter(setter, toIteratee) {\n\t      return function(object, iteratee) {\n\t        return baseInverter(object, setter, toIteratee(iteratee), {});\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.over`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over iteratees.\n\t     * @returns {Function} Returns the new invoker function.\n\t     */\n\t    function createOver(arrayFunc) {\n\t      return rest(function(iteratees) {\n\t        iteratees = arrayMap(baseFlatten(iteratees), getIteratee());\n\t        return rest(function(args) {\n\t          var thisArg = this;\n\t          return arrayFunc(iteratees, function(iteratee) {\n\t            return apply(iteratee, thisArg, args);\n\t          });\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates the padding for `string` based on `length`. The `chars` string\n\t     * is truncated if the number of characters exceeds `length`.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to create padding for.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padding for `string`.\n\t     */\n\t    function createPadding(string, length, chars) {\n\t      length = toInteger(length);\n\t\n\t      var strLength = stringSize(string);\n\t      if (!length || strLength >= length) {\n\t        return '';\n\t      }\n\t      var padLength = length - strLength;\n\t      chars = chars === undefined ? ' ' : (chars + '');\n\t\n\t      var result = repeat(chars, nativeCeil(padLength / stringSize(chars)));\n\t      return reHasComplexSymbol.test(chars)\n\t        ? stringToArray(result).slice(0, padLength).join('')\n\t        : result.slice(0, padLength);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the optional `this`\n\t     * binding of `thisArg` and the `partials` prepended to those provided to\n\t     * the wrapper.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {Array} partials The arguments to prepend to those provided to the new function.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createPartialWrapper(func, bitmask, thisArg, partials) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var argsIndex = -1,\n\t            argsLength = arguments.length,\n\t            leftIndex = -1,\n\t            leftLength = partials.length,\n\t            args = Array(leftLength + argsLength),\n\t            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t\n\t        while (++leftIndex < leftLength) {\n\t          args[leftIndex] = partials[leftIndex];\n\t        }\n\t        while (argsLength--) {\n\t          args[leftIndex++] = arguments[++argsIndex];\n\t        }\n\t        return apply(fn, isBind ? thisArg : this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.range` or `_.rangeRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new range function.\n\t     */\n\t    function createRange(fromRight) {\n\t      return function(start, end, step) {\n\t        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n\t          end = step = undefined;\n\t        }\n\t        // Ensure the sign of `-0` is preserved.\n\t        start = toNumber(start);\n\t        start = start === start ? start : 0;\n\t        if (end === undefined) {\n\t          end = start;\n\t          start = 0;\n\t        } else {\n\t          end = toNumber(end) || 0;\n\t        }\n\t        step = step === undefined ? (start < end ? 1 : -1) : (toNumber(step) || 0);\n\t        return baseRange(start, end, step, fromRight);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to continue currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n\t     * @param {Function} wrapFunc The function to create the `func` wrapper.\n\t     * @param {*} placeholder The placeholder to replace.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createRecurryWrapper(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isCurry = bitmask & CURRY_FLAG,\n\t          newArgPos = argPos ? copyArray(argPos) : undefined,\n\t          newsHolders = isCurry ? holders : undefined,\n\t          newHoldersRight = isCurry ? undefined : holders,\n\t          newPartials = isCurry ? partials : undefined,\n\t          newPartialsRight = isCurry ? undefined : partials;\n\t\n\t      bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n\t      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\t\n\t      if (!(bitmask & CURRY_BOUND_FLAG)) {\n\t        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n\t      }\n\t      var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, arity],\n\t          result = wrapFunc.apply(undefined, newData);\n\t\n\t      if (isLaziable(func)) {\n\t        setData(result, newData);\n\t      }\n\t      result.placeholder = placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.round`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `Math` method to use when rounding.\n\t     * @returns {Function} Returns the new round function.\n\t     */\n\t    function createRound(methodName) {\n\t      var func = Math[methodName];\n\t      return function(number, precision) {\n\t        number = toNumber(number);\n\t        precision = toInteger(precision);\n\t        if (precision) {\n\t          // Shift with exponential notation to avoid floating-point issues.\n\t          // See [MDN](https://mdn.io/round#Examples) for more details.\n\t          var pair = (toString(number) + 'e').split('e'),\n\t              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\t\n\t          pair = (toString(value) + 'e').split('e');\n\t          return +(pair[0] + 'e' + (+pair[1] - precision));\n\t        }\n\t        return func(number);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a set of `values`.\n\t     *\n\t     * @private\n\t     * @param {Array} values The values to add to the set.\n\t     * @returns {Object} Returns the new set.\n\t     */\n\t    var createSet = !(Set && new Set([1, 2]).size === 2) ? noop : function(values) {\n\t      return new Set(values);\n\t    };\n\t\n\t    /**\n\t     * Creates a function that either curries or invokes `func` with optional\n\t     * `this` binding and partially applied arguments.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - `_.bind`\n\t     *     2 - `_.bindKey`\n\t     *     4 - `_.curry` or `_.curryRight` of a bound function\n\t     *     8 - `_.curry`\n\t     *    16 - `_.curryRight`\n\t     *    32 - `_.partial`\n\t     *    64 - `_.partialRight`\n\t     *   128 - `_.rearg`\n\t     *   256 - `_.ary`\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to be partially applied.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isBindKey = bitmask & BIND_KEY_FLAG;\n\t      if (!isBindKey && typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = partials ? partials.length : 0;\n\t      if (!length) {\n\t        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n\t        partials = holders = undefined;\n\t      }\n\t      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n\t      arity = arity === undefined ? arity : toInteger(arity);\n\t      length -= holders ? holders.length : 0;\n\t\n\t      if (bitmask & PARTIAL_RIGHT_FLAG) {\n\t        var partialsRight = partials,\n\t            holdersRight = holders;\n\t\n\t        partials = holders = undefined;\n\t      }\n\t      var data = isBindKey ? undefined : getData(func),\n\t          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\t\n\t      if (data) {\n\t        mergeData(newData, data);\n\t      }\n\t      func = newData[0];\n\t      bitmask = newData[1];\n\t      thisArg = newData[2];\n\t      partials = newData[3];\n\t      holders = newData[4];\n\t      arity = newData[9] = newData[9] == null\n\t        ? (isBindKey ? 0 : func.length)\n\t        : nativeMax(newData[9] - length, 0);\n\t\n\t      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {\n\t        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);\n\t      }\n\t      if (!bitmask || bitmask == BIND_FLAG) {\n\t        var result = createBaseWrapper(func, bitmask, thisArg);\n\t      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {\n\t        result = createCurryWrapper(func, bitmask, arity);\n\t      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {\n\t        result = createPartialWrapper(func, bitmask, thisArg, partials);\n\t      } else {\n\t        result = createHybridWrapper.apply(undefined, newData);\n\t      }\n\t      var setter = data ? baseSetData : setData;\n\t      return setter(result, newData);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for arrays with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to compare.\n\t     * @param {Array} other The other array to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n\t     * @param {Object} [stack] Tracks traversed `array` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n\t     */\n\t    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n\t      var index = -1,\n\t          isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n\t          isUnordered = bitmask & UNORDERED_COMPARE_FLAG,\n\t          arrLength = array.length,\n\t          othLength = other.length;\n\t\n\t      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n\t        return false;\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(array);\n\t      if (stacked) {\n\t        return stacked == other;\n\t      }\n\t      var result = true;\n\t      stack.set(array, other);\n\t\n\t      // Ignore non-index properties.\n\t      while (++index < arrLength) {\n\t        var arrValue = array[index],\n\t            othValue = other[index];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, arrValue, index, other, array, stack)\n\t            : customizer(arrValue, othValue, index, array, other, stack);\n\t        }\n\t        if (compared !== undefined) {\n\t          if (compared) {\n\t            continue;\n\t          }\n\t          result = false;\n\t          break;\n\t        }\n\t        // Recursively compare arrays (susceptible to call stack limits).\n\t        if (isUnordered) {\n\t          if (!arraySome(other, function(othValue) {\n\t                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack);\n\t              })) {\n\t            result = false;\n\t            break;\n\t          }\n\t        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n\t          result = false;\n\t          break;\n\t        }\n\t      }\n\t      stack['delete'](array);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for comparing objects of\n\t     * the same `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports comparing values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {string} tag The `toStringTag` of the objects to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalByTag(object, other, tag, equalFunc, customizer, bitmask) {\n\t      switch (tag) {\n\t        case arrayBufferTag:\n\t          if ((object.byteLength != other.byteLength) ||\n\t              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n\t            return false;\n\t          }\n\t          return true;\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n\t          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n\t          return +object == +other;\n\t\n\t        case errorTag:\n\t          return object.name == other.name && object.message == other.message;\n\t\n\t        case numberTag:\n\t          // Treat `NaN` vs. `NaN` as equal.\n\t          return (object != +object) ? other != +other : object == +other;\n\t\n\t        case regexpTag:\n\t        case stringTag:\n\t          // Coerce regexes to strings and treat strings primitives and string\n\t          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n\t          return object == (other + '');\n\t\n\t        case mapTag:\n\t          var convert = mapToArray;\n\t\n\t        case setTag:\n\t          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n\t          convert || (convert = setToArray);\n\t\n\t          // Recursively compare objects (susceptible to call stack limits).\n\t          return (isPartial || object.size == other.size) &&\n\t            equalFunc(convert(object), convert(other), customizer, bitmask | UNORDERED_COMPARE_FLAG);\n\t\n\t        case symbolTag:\n\t          return !!Symbol && (symbolValueOf.call(object) == symbolValueOf.call(other));\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for objects with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n\t     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n\t      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n\t          objProps = keys(object),\n\t          objLength = objProps.length,\n\t          othProps = keys(other),\n\t          othLength = othProps.length;\n\t\n\t      if (objLength != othLength && !isPartial) {\n\t        return false;\n\t      }\n\t      var index = objLength;\n\t      while (index--) {\n\t        var key = objProps[index];\n\t        if (!(isPartial ? key in other : baseHas(other, key))) {\n\t          return false;\n\t        }\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(object);\n\t      if (stacked) {\n\t        return stacked == other;\n\t      }\n\t      var result = true;\n\t      stack.set(object, other);\n\t\n\t      var skipCtor = isPartial;\n\t      while (++index < objLength) {\n\t        key = objProps[index];\n\t        var objValue = object[key],\n\t            othValue = other[key];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, objValue, key, other, object, stack)\n\t            : customizer(objValue, othValue, key, object, other, stack);\n\t        }\n\t        // Recursively compare objects (susceptible to call stack limits).\n\t        if (!(compared === undefined\n\t              ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n\t              : compared\n\t            )) {\n\t          result = false;\n\t          break;\n\t        }\n\t        skipCtor || (skipCtor = key == 'constructor');\n\t      }\n\t      if (result && !skipCtor) {\n\t        var objCtor = object.constructor,\n\t            othCtor = other.constructor;\n\t\n\t        // Non `Object` object instances with different constructors are not equal.\n\t        if (objCtor != othCtor &&\n\t            ('constructor' in object && 'constructor' in other) &&\n\t            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n\t              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n\t          result = false;\n\t        }\n\t      }\n\t      stack['delete'](object);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets metadata for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {*} Returns the metadata for `func`.\n\t     */\n\t    var getData = !metaMap ? noop : function(func) {\n\t      return metaMap.get(func);\n\t    };\n\t\n\t    /**\n\t     * Gets the name of `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {string} Returns the function name.\n\t     */\n\t    function getFuncName(func) {\n\t      var result = (func.name + ''),\n\t          array = realNames[result],\n\t          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\t\n\t      while (length--) {\n\t        var data = array[length],\n\t            otherFunc = data.func;\n\t        if (otherFunc == null || otherFunc == func) {\n\t          return data.name;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the appropriate \"iteratee\" function. If the `_.iteratee` method is\n\t     * customized this function returns the custom method, otherwise it returns\n\t     * `baseIteratee`. If arguments are provided the chosen function is invoked\n\t     * with them and its result is returned.\n\t     *\n\t     * @private\n\t     * @param {*} [value] The value to convert to an iteratee.\n\t     * @param {number} [arity] The arity of the created iteratee.\n\t     * @returns {Function} Returns the chosen function or its result.\n\t     */\n\t    function getIteratee() {\n\t      var result = lodash.iteratee || iteratee;\n\t      result = result === iteratee ? baseIteratee : result;\n\t      return arguments.length ? result(arguments[0], arguments[1]) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets the \"length\" property value of `object`.\n\t     *\n\t     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n\t     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {*} Returns the \"length\" value.\n\t     */\n\t    var getLength = baseProperty('length');\n\t\n\t    /**\n\t     * Gets the property names, values, and compare flags of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the match data of `object`.\n\t     */\n\t    function getMatchData(object) {\n\t      var result = toPairs(object),\n\t          length = result.length;\n\t\n\t      while (length--) {\n\t        result[length][2] = isStrictComparable(result[length][1]);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the native function at `key` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {string} key The key of the method to get.\n\t     * @returns {*} Returns the function if it's native, else `undefined`.\n\t     */\n\t    function getNative(object, key) {\n\t      var value = object == null ? undefined : object[key];\n\t      return isNative(value) ? value : undefined;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own symbol properties of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of symbols.\n\t     */\n\t    var getSymbols = getOwnPropertySymbols || function() {\n\t      return [];\n\t    };\n\t\n\t    /**\n\t     * Gets the `toStringTag` of `value`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {string} Returns the `toStringTag`.\n\t     */\n\t    function getTag(value) {\n\t      return objectToString.call(value);\n\t    }\n\t\n\t    // Fallback for IE 11 providing `toStringTag` values for maps, sets, and weakmaps.\n\t    if ((Map && getTag(new Map) != mapTag) ||\n\t        (Set && getTag(new Set) != setTag) ||\n\t        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n\t      getTag = function(value) {\n\t        var result = objectToString.call(value),\n\t            Ctor = result == objectTag ? value.constructor : null,\n\t            ctorString = typeof Ctor == 'function' ? funcToString.call(Ctor) : '';\n\t\n\t        if (ctorString) {\n\t          switch (ctorString) {\n\t            case mapCtorString: return mapTag;\n\t            case setCtorString: return setTag;\n\t            case weakMapCtorString: return weakMapTag;\n\t          }\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the view.\n\t     * @param {number} end The end of the view.\n\t     * @param {Array} transforms The transformations to apply to the view.\n\t     * @returns {Object} Returns an object containing the `start` and `end`\n\t     *  positions of the view.\n\t     */\n\t    function getView(start, end, transforms) {\n\t      var index = -1,\n\t          length = transforms.length;\n\t\n\t      while (++index < length) {\n\t        var data = transforms[index],\n\t            size = data.size;\n\t\n\t        switch (data.type) {\n\t          case 'drop':      start += size; break;\n\t          case 'dropRight': end -= size; break;\n\t          case 'take':      end = nativeMin(end, start + size); break;\n\t          case 'takeRight': start = nativeMax(start, end - size); break;\n\t        }\n\t      }\n\t      return { 'start': start, 'end': end };\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` exists on `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @param {Function} hasFunc The function to check properties.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     */\n\t    function hasPath(object, path, hasFunc) {\n\t      if (object == null) {\n\t        return false;\n\t      }\n\t      var result = hasFunc(object, path);\n\t      if (!result && !isKey(path)) {\n\t        path = baseToPath(path);\n\t        object = parent(object, path);\n\t        if (object != null) {\n\t          path = last(path);\n\t          result = hasFunc(object, path);\n\t        }\n\t      }\n\t      var length = object ? object.length : undefined;\n\t      return result || (\n\t        !!length && isLength(length) && isIndex(path, length) &&\n\t        (isArray(object) || isString(object) || isArguments(object))\n\t      );\n\t    }\n\t\n\t    /**\n\t     * Initializes an array clone.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to clone.\n\t     * @returns {Array} Returns the initialized clone.\n\t     */\n\t    function initCloneArray(array) {\n\t      var length = array.length,\n\t          result = array.constructor(length);\n\t\n\t      // Add properties assigned by `RegExp#exec`.\n\t      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n\t        result.index = array.index;\n\t        result.input = array.input;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneObject(object) {\n\t      if (isPrototype(object)) {\n\t        return {};\n\t      }\n\t      var Ctor = object.constructor;\n\t      return baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone based on its `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports cloning values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @param {string} tag The `toStringTag` of the object to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneByTag(object, tag, isDeep) {\n\t      var Ctor = object.constructor;\n\t      switch (tag) {\n\t        case arrayBufferTag:\n\t          return cloneArrayBuffer(object);\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          return new Ctor(+object);\n\t\n\t        case float32Tag: case float64Tag:\n\t        case int8Tag: case int16Tag: case int32Tag:\n\t        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n\t          return cloneTypedArray(object, isDeep);\n\t\n\t        case mapTag:\n\t          return cloneMap(object);\n\t\n\t        case numberTag:\n\t        case stringTag:\n\t          return new Ctor(object);\n\t\n\t        case regexpTag:\n\t          return cloneRegExp(object);\n\t\n\t        case setTag:\n\t          return cloneSet(object);\n\t\n\t        case symbolTag:\n\t          return cloneSymbol(object);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Creates an array of index keys for `object` values of arrays,\n\t     * `arguments` objects, and strings, otherwise `null` is returned.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array|null} Returns index keys, else `null`.\n\t     */\n\t    function indexKeys(object) {\n\t      var length = object ? object.length : undefined;\n\t      if (isLength(length) &&\n\t          (isArray(object) || isString(object) || isArguments(object))) {\n\t        return baseTimes(length, String);\n\t      }\n\t      return null;\n\t    }\n\t\n\t    /**\n\t     * Checks if the given arguments are from an iteratee call.\n\t     *\n\t     * @private\n\t     * @param {*} value The potential iteratee value argument.\n\t     * @param {*} index The potential iteratee index or key argument.\n\t     * @param {*} object The potential iteratee object argument.\n\t     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n\t     */\n\t    function isIterateeCall(value, index, object) {\n\t      if (!isObject(object)) {\n\t        return false;\n\t      }\n\t      var type = typeof index;\n\t      if (type == 'number'\n\t          ? (isArrayLike(object) && isIndex(index, object.length))\n\t          : (type == 'string' && index in object)) {\n\t        return eq(object[index], value);\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a property name and not a property path.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {Object} [object] The object to query keys on.\n\t     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n\t     */\n\t    function isKey(value, object) {\n\t      if (typeof value == 'number') {\n\t        return true;\n\t      }\n\t      return !isArray(value) &&\n\t        (reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n\t          (object != null && value in Object(object)));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for use as unique object key.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n\t     */\n\t    function isKeyable(value) {\n\t      var type = typeof value;\n\t      return type == 'number' || type == 'boolean' ||\n\t        (type == 'string' && value !== '__proto__') || value == null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has a lazy counterpart.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n\t     */\n\t    function isLaziable(func) {\n\t      var funcName = getFuncName(func),\n\t          other = lodash[funcName];\n\t\n\t      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n\t        return false;\n\t      }\n\t      if (func === other) {\n\t        return true;\n\t      }\n\t      var data = getData(other);\n\t      return !!data && func === data[0];\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is likely a prototype object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n\t     */\n\t    function isPrototype(value) {\n\t      var Ctor = value && value.constructor,\n\t          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\t\n\t      return value === proto;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` if suitable for strict\n\t     *  equality comparisons, else `false`.\n\t     */\n\t    function isStrictComparable(value) {\n\t      return value === value && !isObject(value);\n\t    }\n\t\n\t    /**\n\t     * Merges the function metadata of `source` into `data`.\n\t     *\n\t     * Merging metadata reduces the number of wrappers used to invoke a function.\n\t     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n\t     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n\t     * modify function arguments, making the order in which they are executed important,\n\t     * preventing the merging of metadata. However, we make an exception for a safe\n\t     * combined case where curried functions have `_.ary` and or `_.rearg` applied.\n\t     *\n\t     * @private\n\t     * @param {Array} data The destination metadata.\n\t     * @param {Array} source The source metadata.\n\t     * @returns {Array} Returns `data`.\n\t     */\n\t    function mergeData(data, source) {\n\t      var bitmask = data[1],\n\t          srcBitmask = source[1],\n\t          newBitmask = bitmask | srcBitmask,\n\t          isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);\n\t\n\t      var isCombo =\n\t        (srcBitmask == ARY_FLAG && (bitmask == CURRY_FLAG)) ||\n\t        (srcBitmask == ARY_FLAG && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||\n\t        (srcBitmask == (ARY_FLAG | REARG_FLAG) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));\n\t\n\t      // Exit early if metadata can't be merged.\n\t      if (!(isCommon || isCombo)) {\n\t        return data;\n\t      }\n\t      // Use source `thisArg` if available.\n\t      if (srcBitmask & BIND_FLAG) {\n\t        data[2] = source[2];\n\t        // Set when currying a bound function.\n\t        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n\t      }\n\t      // Compose partial arguments.\n\t      var value = source[3];\n\t      if (value) {\n\t        var partials = data[3];\n\t        data[3] = partials ? composeArgs(partials, value, source[4]) : copyArray(value);\n\t        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : copyArray(source[4]);\n\t      }\n\t      // Compose partial right arguments.\n\t      value = source[5];\n\t      if (value) {\n\t        partials = data[5];\n\t        data[5] = partials ? composeArgsRight(partials, value, source[6]) : copyArray(value);\n\t        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : copyArray(source[6]);\n\t      }\n\t      // Use source `argPos` if available.\n\t      value = source[7];\n\t      if (value) {\n\t        data[7] = copyArray(value);\n\t      }\n\t      // Use source `ary` if it's smaller.\n\t      if (srcBitmask & ARY_FLAG) {\n\t        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n\t      }\n\t      // Use source `arity` if one is not provided.\n\t      if (data[9] == null) {\n\t        data[9] = source[9];\n\t      }\n\t      // Use source `func` and merge bitmasks.\n\t      data[0] = source[0];\n\t      data[1] = newBitmask;\n\t\n\t      return data;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to merge.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @param {Object} source The parent object of `srcValue`.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged counterparts.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function mergeDefaults(objValue, srcValue, key, object, source, stack) {\n\t      if (isObject(objValue) && isObject(srcValue)) {\n\t        stack.set(srcValue, objValue);\n\t        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack);\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * Gets the parent value at `path` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} path The path to get the parent value of.\n\t     * @returns {*} Returns the parent value.\n\t     */\n\t    function parent(object, path) {\n\t      return path.length == 1 ? object : get(object, baseSlice(path, 0, -1));\n\t    }\n\t\n\t    /**\n\t     * Reorder `array` according to the specified indexes where the element at\n\t     * the first index is assigned as the first element, the element at\n\t     * the second index is assigned as the second element, and so on.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to reorder.\n\t     * @param {Array} indexes The arranged array indexes.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function reorder(array, indexes) {\n\t      var arrLength = array.length,\n\t          length = nativeMin(indexes.length, arrLength),\n\t          oldArray = copyArray(array);\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Sets metadata for `func`.\n\t     *\n\t     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n\t     * period of time, it will trip its breaker and transition to an identity function\n\t     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n\t     * for more details.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var setData = (function() {\n\t      var count = 0,\n\t          lastCalled = 0;\n\t\n\t      return function(key, value) {\n\t        var stamp = now(),\n\t            remaining = HOT_SPAN - (stamp - lastCalled);\n\t\n\t        lastCalled = stamp;\n\t        if (remaining > 0) {\n\t          if (++count >= HOT_COUNT) {\n\t            return key;\n\t          }\n\t        } else {\n\t          count = 0;\n\t        }\n\t        return baseSetData(key, value);\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * Converts `string` to a property path array.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to convert.\n\t     * @returns {Array} Returns the property path array.\n\t     */\n\t    function stringToPath(string) {\n\t      var result = [];\n\t      toString(string).replace(rePropName, function(match, number, quote, string) {\n\t        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an array-like object if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Array} Returns the array-like object.\n\t     */\n\t    function toArrayLikeObject(value) {\n\t      return isArrayLikeObject(value) ? value : [];\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a function if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Function} Returns the function.\n\t     */\n\t    function toFunction(value) {\n\t      return typeof value == 'function' ? value : identity;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `wrapper`.\n\t     *\n\t     * @private\n\t     * @param {Object} wrapper The wrapper to clone.\n\t     * @returns {Object} Returns the cloned wrapper.\n\t     */\n\t    function wrapperClone(wrapper) {\n\t      if (wrapper instanceof LazyWrapper) {\n\t        return wrapper.clone();\n\t      }\n\t      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n\t      result.__actions__ = copyArray(wrapper.__actions__);\n\t      result.__index__  = wrapper.__index__;\n\t      result.__values__ = wrapper.__values__;\n\t      return result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements split into groups the length of `size`.\n\t     * If `array` can't be split evenly, the final chunk will be the remaining\n\t     * elements.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to process.\n\t     * @param {number} [size=0] The length of each chunk.\n\t     * @returns {Array} Returns the new array containing chunks.\n\t     * @example\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 2);\n\t     * // => [['a', 'b'], ['c', 'd']]\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 3);\n\t     * // => [['a', 'b', 'c'], ['d']]\n\t     */\n\t    function chunk(array, size) {\n\t      size = nativeMax(toInteger(size), 0);\n\t\n\t      var length = array ? array.length : 0;\n\t      if (!length || size < 1) {\n\t        return [];\n\t      }\n\t      var index = 0,\n\t          resIndex = -1,\n\t          result = Array(nativeCeil(length / size));\n\t\n\t      while (index < length) {\n\t        result[++resIndex] = baseSlice(array, index, (index += size));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array with all falsey values removed. The values `false`, `null`,\n\t     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to compact.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.compact([0, 1, false, 2, '', 3]);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function compact(array) {\n\t      var index = -1,\n\t          length = array ? array.length : 0,\n\t          resIndex = -1,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (value) {\n\t          result[++resIndex] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a new array concatenating `array` with any additional arrays\n\t     * and/or values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to concatenate.\n\t     * @param {...*} [values] The values to concatenate.\n\t     * @returns {Array} Returns the new concatenated array.\n\t     * @example\n\t     *\n\t     * var array = [1];\n\t     * var other = _.concat(array, 2, [3], [[4]]);\n\t     *\n\t     * console.log(other);\n\t     * // => [1, 2, 3, [4]]\n\t     *\n\t     * console.log(array);\n\t     * // => [1]\n\t     */\n\t    var concat = rest(function(array, values) {\n\t      if (!isArray(array)) {\n\t        array = array == null ? [] : [Object(array)];\n\t      }\n\t      values = baseFlatten(values);\n\t      return arrayConcat(array, values);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of unique `array` values not included in the other\n\t     * given arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.difference([3, 2, 1], [4, 2]);\n\t     * // => [3, 1]\n\t     */\n\t    var difference = rest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, false, true))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `iteratee` which\n\t     * is invoked for each element of `array` and `values` to generate the criterion\n\t     * by which uniqueness is computed. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.differenceBy([3.1, 2.2, 1.3], [4.4, 2.5], Math.floor);\n\t     * // => [3.1, 1.3]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var differenceBy = rest(function(array, values) {\n\t      var iteratee = last(values);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, false, true), getIteratee(iteratee))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `array` to `values`. The comparator\n\t     * is invoked with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     *\n\t     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }]\n\t     */\n\t    var differenceWith = rest(function(array, values) {\n\t      var comparator = last(values);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, false, true), undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.drop([1, 2, 3]);\n\t     * // => [2, 3]\n\t     *\n\t     * _.drop([1, 2, 3], 2);\n\t     * // => [3]\n\t     *\n\t     * _.drop([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.drop([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function drop(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRight([1, 2, 3]);\n\t     * // => [1, 2]\n\t     *\n\t     * _.dropRight([1, 2, 3], 2);\n\t     * // => [1]\n\t     *\n\t     * _.dropRight([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.dropRight([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function dropRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the end.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.dropRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropRightWhile(users, ['active', false]);\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropRightWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the beginning.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.dropWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropWhile(users, ['active', false]);\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Fills elements of `array` with `value` from `start` up to, but not\n\t     * including, `end`.\n\t     *\n\t     * **Note:** This method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.fill(array, 'a');\n\t     * console.log(array);\n\t     * // => ['a', 'a', 'a']\n\t     *\n\t     * _.fill(Array(3), 2);\n\t     * // => [2, 2, 2]\n\t     *\n\t     * _.fill([4, 6, 8, 10], '*', 1, 3);\n\t     * // => [4, '*', '*', 10]\n\t     */\n\t    function fill(array, value, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseFill(array, value, start, end);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the index of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n\t     * // => 0\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findIndex(users, { 'user': 'fred', 'active': false });\n\t     * // => 1\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findIndex(users, ['active', false]);\n\t     * // => 0\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findIndex(users, 'active');\n\t     * // => 2\n\t     */\n\t    function findIndex(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseFindIndex(array, getIteratee(predicate, 3))\n\t        : -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findIndex` except that it iterates over elements\n\t     * of `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n\t     * // => 2\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n\t     * // => 0\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastIndex(users, ['active', false]);\n\t     * // => 2\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastIndex(users, 'active');\n\t     * // => 0\n\t     */\n\t    function findLastIndex(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseFindIndex(array, getIteratee(predicate, 3), true)\n\t        : -1;\n\t    }\n\t\n\t    /**\n\t     * Flattens `array` a single level.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flatten([1, [2, 3, [4]]]);\n\t     * // => [1, 2, 3, [4]]\n\t     */\n\t    function flatten(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array) : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.flatten` except that it recursively flattens `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to recursively flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flattenDeep([1, [2, 3, [4]]]);\n\t     * // => [1, 2, 3, 4]\n\t     */\n\t    function flattenDeep(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array, true) : [];\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.toPairs`; this method returns an object composed\n\t     * from key-value `pairs`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} pairs The key-value pairs.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.fromPairs([['fred', 30], ['barney', 40]]);\n\t     * // => { 'fred': 30, 'barney': 40 }\n\t     */\n\t    function fromPairs(pairs) {\n\t      var index = -1,\n\t          length = pairs ? pairs.length : 0,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var pair = pairs[index];\n\t        result[pair[0]] = pair[1];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias first\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the first element of `array`.\n\t     * @example\n\t     *\n\t     * _.head([1, 2, 3]);\n\t     * // => 1\n\t     *\n\t     * _.head([]);\n\t     * // => undefined\n\t     */\n\t    function head(array) {\n\t      return array ? array[0] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the first occurrence of `value` is found in `array`\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. If `fromIndex` is negative, it's used as the offset\n\t     * from the end of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.indexOf([1, 2, 1, 2], 2);\n\t     * // => 1\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.indexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 3\n\t     */\n\t    function indexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      fromIndex = toInteger(fromIndex);\n\t      if (fromIndex < 0) {\n\t        fromIndex = nativeMax(length + fromIndex, 0);\n\t      }\n\t      return baseIndexOf(array, value, fromIndex);\n\t    }\n\t\n\t    /**\n\t     * Gets all but the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.initial([1, 2, 3]);\n\t     * // => [1, 2]\n\t     */\n\t    function initial(array) {\n\t      return dropRight(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values that are included in all given arrays\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     * @example\n\t     *\n\t     * _.intersection([2, 1], [4, 2], [1, 2]);\n\t     * // => [2]\n\t     */\n\t    var intersection = rest(function(arrays) {\n\t      var mapped = arrayMap(arrays, toArrayLikeObject);\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `iteratee`\n\t     * which is invoked for each element of each `arrays` to generate the criterion\n\t     * by which uniqueness is computed. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     * @example\n\t     *\n\t     * _.intersectionBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n\t     * // => [2.1]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }]\n\t     */\n\t    var intersectionBy = rest(function(arrays) {\n\t      var iteratee = last(arrays),\n\t          mapped = arrayMap(arrays, toArrayLikeObject);\n\t\n\t      if (iteratee === last(mapped)) {\n\t        iteratee = undefined;\n\t      } else {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, getIteratee(iteratee))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `arrays`. The comparator is invoked\n\t     * with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.intersectionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }]\n\t     */\n\t    var intersectionWith = rest(function(arrays) {\n\t      var comparator = last(arrays),\n\t          mapped = arrayMap(arrays, toArrayLikeObject);\n\t\n\t      if (comparator === last(mapped)) {\n\t        comparator = undefined;\n\t      } else {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Converts all elements in `array` into a string separated by `separator`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to convert.\n\t     * @param {string} [separator=','] The element separator.\n\t     * @returns {string} Returns the joined string.\n\t     * @example\n\t     *\n\t     * _.join(['a', 'b', 'c'], '~');\n\t     * // => 'a~b~c'\n\t     */\n\t    function join(array, separator) {\n\t      return array ? nativeJoin.call(array, separator) : '';\n\t    }\n\t\n\t    /**\n\t     * Gets the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the last element of `array`.\n\t     * @example\n\t     *\n\t     * _.last([1, 2, 3]);\n\t     * // => 3\n\t     */\n\t    function last(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? array[length - 1] : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it iterates over elements of\n\t     * `array` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=array.length-1] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.lastIndexOf([1, 2, 1, 2], 2);\n\t     * // => 3\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 1\n\t     */\n\t    function lastIndexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length;\n\t      if (fromIndex !== undefined) {\n\t        index = toInteger(fromIndex);\n\t        index = (index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1)) + 1;\n\t      }\n\t      if (value !== value) {\n\t        return indexOfNaN(array, index, true);\n\t      }\n\t      while (index--) {\n\t        if (array[index] === value) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Removes all given values from `array` using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** Unlike `_.without`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...*} [values] The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 1, 2, 3];\n\t     *\n\t     * _.pull(array, 2, 3);\n\t     * console.log(array);\n\t     * // => [1, 1]\n\t     */\n\t    var pull = rest(pullAll);\n\t\n\t    /**\n\t     * This method is like `_.pull` except that it accepts an array of values to remove.\n\t     *\n\t     * **Note:** Unlike `_.difference`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 1, 2, 3];\n\t     *\n\t     * _.pullAll(array, [2, 3]);\n\t     * console.log(array);\n\t     * // => [1, 1]\n\t     */\n\t    function pullAll(array, values) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values)\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n\t     * invoked for each element of `array` and `values` to generate the criterion\n\t     * by which uniqueness is computed. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n\t     *\n\t     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n\t     * console.log(array);\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    function pullAllBy(array, values, iteratee) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAllBy(array, values, getIteratee(iteratee))\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * Removes elements from `array` corresponding to `indexes` and returns an\n\t     * array of removed elements.\n\t     *\n\t     * **Note:** Unlike `_.at`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n\t     *  specified individually or in arrays.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [5, 10, 15, 20];\n\t     * var evens = _.pullAt(array, 1, 3);\n\t     *\n\t     * console.log(array);\n\t     * // => [5, 15]\n\t     *\n\t     * console.log(evens);\n\t     * // => [10, 20]\n\t     */\n\t    var pullAt = rest(function(array, indexes) {\n\t      indexes = arrayMap(baseFlatten(indexes), String);\n\t\n\t      var result = baseAt(array, indexes);\n\t      basePullAt(array, indexes.sort(compareAscending));\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Removes all elements from `array` that `predicate` returns truthy for\n\t     * and returns an array of the removed elements. The predicate is invoked with\n\t     * three arguments: (value, index, array).\n\t     *\n\t     * **Note:** Unlike `_.filter`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 4];\n\t     * var evens = _.remove(array, function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 3]\n\t     *\n\t     * console.log(evens);\n\t     * // => [2, 4]\n\t     */\n\t    function remove(array, predicate) {\n\t      var result = [];\n\t      if (!(array && array.length)) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexes = [],\n\t          length = array.length;\n\t\n\t      predicate = getIteratee(predicate, 3);\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result.push(value);\n\t          indexes.push(index);\n\t        }\n\t      }\n\t      basePullAt(array, indexes);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses `array` so that the first element becomes the last, the second\n\t     * element becomes the second to last, and so on.\n\t     *\n\t     * **Note:** This method mutates `array` and is based on\n\t     * [`Array#reverse`](https://mdn.io/Array/reverse).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.reverse(array);\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function reverse(array) {\n\t      return array ? nativeReverse.call(array) : array;\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` from `start` up to, but not including, `end`.\n\t     *\n\t     * **Note:** This method is used instead of [`Array#slice`](https://mdn.io/Array/slice)\n\t     * to ensure dense arrays are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function slice(array, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      else {\n\t        start = start == null ? 0 : toInteger(start);\n\t        end = end === undefined ? length : toInteger(end);\n\t      }\n\t      return baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * Uses a binary search to determine the lowest index at which `value` should\n\t     * be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedIndex([30, 50], 40);\n\t     * // => 1\n\t     *\n\t     * _.sortedIndex([4, 5], 4);\n\t     * // => 0\n\t     */\n\t    function sortedIndex(array, value) {\n\t      return baseSortedIndex(array, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n\t     * @example\n\t     *\n\t     * var dict = { 'thirty': 30, 'forty': 40, 'fifty': 50 };\n\t     *\n\t     * _.sortedIndexBy(['thirty', 'fifty'], 'forty', _.propertyOf(dict));\n\t     * // => 1\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedIndexBy([{ 'x': 4 }, { 'x': 5 }], { 'x': 4 }, 'x');\n\t     * // => 0\n\t     */\n\t    function sortedIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedIndexOf([1, 1, 2, 2], 2);\n\t     * // => 2\n\t     */\n\t    function sortedIndexOf(array, value) {\n\t      var length = array ? array.length : 0;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value);\n\t        if (index < length && eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it returns the highest\n\t     * index at which `value` should be inserted into `array` in order to\n\t     * maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndex([4, 5], 4);\n\t     * // => 1\n\t     */\n\t    function sortedLastIndex(array, value) {\n\t      return baseSortedIndex(array, value, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n\t     * @example\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedLastIndexBy([{ 'x': 4 }, { 'x': 5 }], { 'x': 4 }, 'x');\n\t     * // => 1\n\t     */\n\t    function sortedLastIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee), true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.lastIndexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndexOf([1, 1, 2, 2], 2);\n\t     * // => 3\n\t     */\n\t    function sortedLastIndexOf(array, value) {\n\t      var length = array ? array.length : 0;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value, true) - 1;\n\t        if (eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniq([1, 1, 2]);\n\t     * // => [1, 2]\n\t     */\n\t    function sortedUniq(array) {\n\t      return (array && array.length)\n\t        ? baseSortedUniq(array)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniqBy` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n\t     * // => [1.1, 2.3]\n\t     */\n\t    function sortedUniqBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSortedUniqBy(array, getIteratee(iteratee))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Gets all but the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.tail([1, 2, 3]);\n\t     * // => [2, 3]\n\t     */\n\t    function tail(array) {\n\t      return drop(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.take([1, 2, 3]);\n\t     * // => [1]\n\t     *\n\t     * _.take([1, 2, 3], 2);\n\t     * // => [1, 2]\n\t     *\n\t     * _.take([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.take([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function take(array, n, guard) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRight([1, 2, 3]);\n\t     * // => [3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 2);\n\t     * // => [2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function takeRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the end. Elements are\n\t     * taken until `predicate` returns falsey. The predicate is invoked with three\n\t     * arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.takeRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeRightWhile(users, ['active', false]);\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeRightWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the beginning. Elements\n\t     * are taken until `predicate` returns falsey. The predicate is invoked with\n\t     * three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false},\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.takeWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeWhile(users, ['active', false]);\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values, in order, from all given arrays using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.union([2, 1], [4, 2], [1, 2]);\n\t     * // => [2, 1, 4]\n\t     */\n\t    var union = rest(function(arrays) {\n\t      return baseUniq(baseFlatten(arrays, false, true));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by which\n\t     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.unionBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n\t     * // => [2.1, 1.2, 4.3]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    var unionBy = rest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseUniq(baseFlatten(arrays, false, true), getIteratee(iteratee));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `arrays`. The comparator is invoked\n\t     * with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.unionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var unionWith = rest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return baseUniq(baseFlatten(arrays, false, true), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates a duplicate-free version of an array, using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons, in which only the first occurrence of each element\n\t     * is kept.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniq([2, 1, 2]);\n\t     * // => [2, 1]\n\t     */\n\t    function uniq(array) {\n\t      return (array && array.length)\n\t        ? baseUniq(array)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n\t     * // => [2.1, 1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    function uniqBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseUniq(array, getIteratee(iteratee))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `array`. The comparator is invoked with\n\t     * two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 },  { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.uniqWith(objects, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n\t     */\n\t    function uniqWith(array, comparator) {\n\t      return (array && array.length)\n\t        ? baseUniq(array, undefined, comparator)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an array of grouped\n\t     * elements and creates an array regrouping the elements to their pre-zip\n\t     * configuration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     *\n\t     * _.unzip(zipped);\n\t     * // => [['fred', 'barney'], [30, 40], [true, false]]\n\t     */\n\t    function unzip(array) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var length = 0;\n\t      array = arrayFilter(array, function(group) {\n\t        if (isArrayLikeObject(group)) {\n\t          length = nativeMax(group.length, length);\n\t          return true;\n\t        }\n\t      });\n\t      return baseTimes(length, function(index) {\n\t        return arrayMap(array, baseProperty(index));\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n\t     * how regrouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine regrouped values.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n\t     * // => [[1, 10, 100], [2, 20, 200]]\n\t     *\n\t     * _.unzipWith(zipped, _.add);\n\t     * // => [3, 30, 300]\n\t     */\n\t    function unzipWith(array, iteratee) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var result = unzip(array);\n\t      if (iteratee == null) {\n\t        return result;\n\t      }\n\t      return arrayMap(result, function(group) {\n\t        return apply(iteratee, undefined, group);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates an array excluding all given values using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to filter.\n\t     * @param {...*} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.without([1, 2, 1, 3], 1, 2);\n\t     * // => [3]\n\t     */\n\t    var without = rest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, values)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n\t     * of the given arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of values.\n\t     * @example\n\t     *\n\t     * _.xor([2, 1], [4, 2]);\n\t     * // => [1, 4]\n\t     */\n\t    var xor = rest(function(arrays) {\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by which\n\t     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of values.\n\t     * @example\n\t     *\n\t     * _.xorBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n\t     * // => [1.2, 4.3]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var xorBy = rest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `comparator` which is\n\t     * invoked to compare elements of `arrays`. The comparator is invoked with\n\t     * two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.xorWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var xorWith = rest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of grouped elements, the first of which contains the first\n\t     * elements of the given arrays, the second of which contains the second elements\n\t     * of the given arrays, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     */\n\t    var zip = rest(unzip);\n\t\n\t    /**\n\t     * This method is like `_.fromPairs` except that it accepts two arrays,\n\t     * one of property names and one of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property names.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObject(['a', 'b'], [1, 2]);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    function zipObject(props, values) {\n\t      return baseZipObject(props || [], values || [], assignValue);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zipObject` except that it supports property paths.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property names.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n\t     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n\t     */\n\t    function zipObjectDeep(props, values) {\n\t      return baseZipObject(props || [], values || [], baseSet);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts `iteratee` to specify\n\t     * how grouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine grouped values.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n\t     *   return a + b + c;\n\t     * });\n\t     * // => [111, 222]\n\t     */\n\t    var zipWith = rest(function(arrays) {\n\t      var length = arrays.length,\n\t          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\t\n\t      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n\t      return unzipWith(arrays, iteratee);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object that wraps `value` with explicit method chaining enabled.\n\t     * The result of such method chaining must be unwrapped with `_#value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @param {*} value The value to wrap.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36 },\n\t     *   { 'user': 'fred',    'age': 40 },\n\t     *   { 'user': 'pebbles', 'age': 1 }\n\t     * ];\n\t     *\n\t     * var youngest = _\n\t     *   .chain(users)\n\t     *   .sortBy('age')\n\t     *   .map(function(o) {\n\t     *     return o.user + ' is ' + o.age;\n\t     *   })\n\t     *   .head()\n\t     *   .value();\n\t     * // => 'pebbles is 1'\n\t     */\n\t    function chain(value) {\n\t      var result = lodash(value);\n\t      result.__chain__ = true;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method invokes `interceptor` and returns `value`. The interceptor\n\t     * is invoked with one argument; (value). The purpose of this method is to\n\t     * \"tap into\" a method chain in order to modify intermediate results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3])\n\t     *  .tap(function(array) {\n\t     *    // Mutate input array.\n\t     *    array.pop();\n\t     *  })\n\t     *  .reverse()\n\t     *  .value();\n\t     * // => [2, 1]\n\t     */\n\t    function tap(value, interceptor) {\n\t      interceptor(value);\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.tap` except that it returns the result of `interceptor`.\n\t     * The purpose of this method is to \"pass thru\" values replacing intermediate\n\t     * results in a method chain.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns the result of `interceptor`.\n\t     * @example\n\t     *\n\t     * _('  abc  ')\n\t     *  .chain()\n\t     *  .trim()\n\t     *  .thru(function(value) {\n\t     *    return [value];\n\t     *  })\n\t     *  .value();\n\t     * // => ['abc']\n\t     */\n\t    function thru(value, interceptor) {\n\t      return interceptor(value);\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.at`.\n\t     *\n\t     * @name at\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @param {...(string|string[])} [paths] The property paths of elements to pick,\n\t     *  specified individually or in arrays.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _(object).at(['a[0].b.c', 'a[1]']).value();\n\t     * // => [3, 4]\n\t     *\n\t     * _(['a', 'b', 'c']).at(0, 2).value();\n\t     * // => ['a', 'c']\n\t     */\n\t    var wrapperAt = rest(function(paths) {\n\t      paths = baseFlatten(paths);\n\t      var length = paths.length,\n\t          start = length ? paths[0] : 0,\n\t          value = this.__wrapped__,\n\t          interceptor = function(object) { return baseAt(object, paths); };\n\t\n\t      if (length > 1 || this.__actions__.length || !(value instanceof LazyWrapper) || !isIndex(start)) {\n\t        return this.thru(interceptor);\n\t      }\n\t      value = value.slice(start, +start + (length ? 1 : 0));\n\t      value.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n\t      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n\t        if (length && !array.length) {\n\t          array.push(undefined);\n\t        }\n\t        return array;\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Enables explicit method chaining on the wrapper object.\n\t     *\n\t     * @name chain\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // A sequence without explicit chaining.\n\t     * _(users).head();\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // A sequence with explicit chaining.\n\t     * _(users)\n\t     *   .chain()\n\t     *   .head()\n\t     *   .pick('user')\n\t     *   .value();\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function wrapperChain() {\n\t      return chain(this);\n\t    }\n\t\n\t    /**\n\t     * Executes the chained sequence and returns the wrapped result.\n\t     *\n\t     * @name commit\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapped = _(array).push(3);\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2]\n\t     *\n\t     * wrapped = wrapped.commit();\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * wrapped.last();\n\t     * // => 3\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperCommit() {\n\t      return new LodashWrapper(this.value(), this.__chain__);\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.flatMap`.\n\t     *\n\t     * @name flatMap\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [n, n];\n\t     * }\n\t     *\n\t     * _([1, 2]).flatMap(duplicate).value();\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function wrapperFlatMap(iteratee) {\n\t      return this.map(iteratee).flatten();\n\t    }\n\t\n\t    /**\n\t     * Gets the next value on a wrapped object following the\n\t     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n\t     *\n\t     * @name next\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @returns {Object} Returns the next iterator value.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 1 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 2 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': true, 'value': undefined }\n\t     */\n\t    function wrapperNext() {\n\t      if (this.__values__ === undefined) {\n\t        this.__values__ = toArray(this.value());\n\t      }\n\t      var done = this.__index__ >= this.__values__.length,\n\t          value = done ? undefined : this.__values__[this.__index__++];\n\t\n\t      return { 'done': done, 'value': value };\n\t    }\n\t\n\t    /**\n\t     * Enables the wrapper to be iterable.\n\t     *\n\t     * @name Symbol.iterator\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @returns {Object} Returns the wrapper object.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped[Symbol.iterator]() === wrapped;\n\t     * // => true\n\t     *\n\t     * Array.from(wrapped);\n\t     * // => [1, 2]\n\t     */\n\t    function wrapperToIterator() {\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n\t     *\n\t     * @name plant\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @param {*} value The value to plant.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2]).map(square);\n\t     * var other = wrapped.plant([3, 4]);\n\t     *\n\t     * other.value();\n\t     * // => [9, 16]\n\t     *\n\t     * wrapped.value();\n\t     * // => [1, 4]\n\t     */\n\t    function wrapperPlant(value) {\n\t      var result,\n\t          parent = this;\n\t\n\t      while (parent instanceof baseLodash) {\n\t        var clone = wrapperClone(parent);\n\t        clone.__index__ = 0;\n\t        clone.__values__ = undefined;\n\t        if (result) {\n\t          previous.__wrapped__ = clone;\n\t        } else {\n\t          result = clone;\n\t        }\n\t        var previous = clone;\n\t        parent = parent.__wrapped__;\n\t      }\n\t      previous.__wrapped__ = value;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.reverse`.\n\t     *\n\t     * **Note:** This method mutates the wrapped array.\n\t     *\n\t     * @name reverse\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _(array).reverse().value()\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function wrapperReverse() {\n\t      var value = this.__wrapped__;\n\t      if (value instanceof LazyWrapper) {\n\t        var wrapped = value;\n\t        if (this.__actions__.length) {\n\t          wrapped = new LazyWrapper(this);\n\t        }\n\t        wrapped = wrapped.reverse();\n\t        wrapped.__actions__.push({ 'func': thru, 'args': [reverse], 'thisArg': undefined });\n\t        return new LodashWrapper(wrapped, this.__chain__);\n\t      }\n\t      return this.thru(reverse);\n\t    }\n\t\n\t    /**\n\t     * Executes the chained sequence to extract the unwrapped value.\n\t     *\n\t     * @name value\n\t     * @memberOf _\n\t     * @alias toJSON, valueOf\n\t     * @category Seq\n\t     * @returns {*} Returns the resolved unwrapped value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).value();\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperValue() {\n\t      return baseWrapperValue(this.__wrapped__, this.__actions__);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is the number of times the key was returned by `iteratee`.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * _.countBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': 2, '5': 1 }\n\t     */\n\t    var countBy = createAggregator(function(result, value, key) {\n\t      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n\t    });\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n\t     * Iteration is stopped once `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check, else `false`.\n\t     * @example\n\t     *\n\t     * _.every([true, 1, null, 'yes'], Boolean);\n\t     * // => false\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': false },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.every(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.every(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.every(users, 'active');\n\t     * // => false\n\t     */\n\t    function every(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arrayEvery : baseEvery;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning an array of all elements\n\t     * `predicate` returns truthy for. The predicate is invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.filter(users, { 'age': 36, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.filter(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.filter(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function filter(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning the first element\n\t     * `predicate` returns truthy for. The predicate is invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': true },\n\t     *   { 'user': 'fred',    'age': 40, 'active': false },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n\t     * ];\n\t     *\n\t     * _.find(users, function(o) { return o.age < 40; });\n\t     * // => object for 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.find(users, { 'age': 1, 'active': true });\n\t     * // => object for 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.find(users, ['active', false]);\n\t     * // => object for 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.find(users, 'active');\n\t     * // => object for 'barney'\n\t     */\n\t    function find(collection, predicate) {\n\t      predicate = getIteratee(predicate, 3);\n\t      if (isArray(collection)) {\n\t        var index = baseFindIndex(collection, predicate);\n\t        return index > -1 ? collection[index] : undefined;\n\t      }\n\t      return baseFind(collection, predicate, baseEach);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.find` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * _.findLast([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 1;\n\t     * });\n\t     * // => 3\n\t     */\n\t    function findLast(collection, predicate) {\n\t      predicate = getIteratee(predicate, 3);\n\t      if (isArray(collection)) {\n\t        var index = baseFindIndex(collection, predicate, true);\n\t        return index > -1 ? collection[index] : undefined;\n\t      }\n\t      return baseFind(collection, predicate, baseEachRight);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of flattened values by running each element in `collection`\n\t     * through `iteratee` and concating its result to the other mapped values.\n\t     * The iteratee is invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [n, n];\n\t     * }\n\t     *\n\t     * _.flatMap([1, 2], duplicate);\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function flatMap(collection, iteratee) {\n\t      return baseFlatten(map(collection, iteratee));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection` invoking `iteratee` for each element.\n\t     * The iteratee is invoked with three arguments: (value, index|key, collection).\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n\t     * are iterated like arrays. To avoid this behavior use `_.forIn` or `_.forOwn`\n\t     * for object iteration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias each\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @example\n\t     *\n\t     * _([1, 2]).forEach(function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => logs `1` then `2`\n\t     *\n\t     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a' then 'b' (iteration order is not guaranteed)\n\t     */\n\t    function forEach(collection, iteratee) {\n\t      return (typeof iteratee == 'function' && isArray(collection))\n\t        ? arrayEach(collection, iteratee)\n\t        : baseEach(collection, toFunction(iteratee));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forEach` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias eachRight\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @example\n\t     *\n\t     * _.forEachRight([1, 2], function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => logs `2` then `1`\n\t     */\n\t    function forEachRight(collection, iteratee) {\n\t      return (typeof iteratee == 'function' && isArray(collection))\n\t        ? arrayEachRight(collection, iteratee)\n\t        : baseEachRight(collection, toFunction(iteratee));\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is an array of elements responsible for generating the key.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': [4.2], '6': [6.1, 6.3] }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.groupBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': ['one', 'two'], '5': ['three'] }\n\t     */\n\t    var groupBy = createAggregator(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, key)) {\n\t        result[key].push(value);\n\t      } else {\n\t        result[key] = [value];\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is in `collection`. If `collection` is a string it's checked\n\t     * for a substring of `value`, otherwise [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n\t     * the offset from the end of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.reduce`.\n\t     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n\t     * @example\n\t     *\n\t     * _.includes([1, 2, 3], 1);\n\t     * // => true\n\t     *\n\t     * _.includes([1, 2, 3], 1, 2);\n\t     * // => false\n\t     *\n\t     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n\t     * // => true\n\t     *\n\t     * _.includes('pebbles', 'eb');\n\t     * // => true\n\t     */\n\t    function includes(collection, value, fromIndex, guard) {\n\t      collection = isArrayLike(collection) ? collection : values(collection);\n\t      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\t\n\t      var length = collection.length;\n\t      if (fromIndex < 0) {\n\t        fromIndex = nativeMax(length + fromIndex, 0);\n\t      }\n\t      return isString(collection)\n\t        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n\t        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n\t    }\n\t\n\t    /**\n\t     * Invokes the method at `path` of each element in `collection`, returning\n\t     * an array of the results of each invoked method. Any additional arguments\n\t     * are provided to each invoked method. If `methodName` is a function it's\n\t     * invoked for, and `this` bound to, each element in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|string} path The path of the method to invoke or\n\t     *  the function invoked per iteration.\n\t     * @param {...*} [args] The arguments to invoke each method with.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n\t     * // => [[1, 5, 7], [1, 2, 3]]\n\t     *\n\t     * _.invokeMap([123, 456], String.prototype.split, '');\n\t     * // => [['1', '2', '3'], ['4', '5', '6']]\n\t     */\n\t    var invokeMap = rest(function(collection, path, args) {\n\t      var index = -1,\n\t          isFunc = typeof path == 'function',\n\t          isProp = isKey(path),\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value) {\n\t        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n\t        result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is the last element responsible for generating the key. The\n\t     * iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * var array = [\n\t     *   { 'dir': 'left', 'code': 97 },\n\t     *   { 'dir': 'right', 'code': 100 }\n\t     * ];\n\t     *\n\t     * _.keyBy(array, function(o) {\n\t     *   return String.fromCharCode(o.code);\n\t     * });\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.keyBy(array, 'dir');\n\t     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n\t     */\n\t    var keyBy = createAggregator(function(result, value, key) {\n\t      result[key] = value;\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values by running each element in `collection` through\n\t     * `iteratee`. The iteratee is invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n\t     *\n\t     * The guarded methods are:\n\t     * `ary`, `curry`, `curryRight`, `drop`, `dropRight`, `every`, `fill`,\n\t     * `invert`, `parseInt`, `random`, `range`, `rangeRight`, `slice`, `some`,\n\t     * `sortBy`, `take`, `takeRight`, `template`, `trim`, `trimEnd`, `trimStart`,\n\t     * and `words`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * _.map([4, 8], square);\n\t     * // => [16, 64]\n\t     *\n\t     * _.map({ 'a': 4, 'b': 8 }, square);\n\t     * // => [16, 64] (iteration order is not guaranteed)\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.map(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     */\n\t    function map(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayMap : baseMap;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortBy` except that it allows specifying the sort\n\t     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n\t     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n\t     * descending or \"asc\" for ascending sort order of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} [iteratees=[_.identity]] The iteratees to sort by.\n\t     * @param {string[]} [orders] The sort orders of `iteratees`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.reduce`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 34 },\n\t     *   { 'user': 'fred',   'age': 42 },\n\t     *   { 'user': 'barney', 'age': 36 }\n\t     * ];\n\t     *\n\t     * // Sort by `user` in ascending order and by `age` in descending order.\n\t     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\t     */\n\t    function orderBy(collection, iteratees, orders, guard) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (!isArray(iteratees)) {\n\t        iteratees = iteratees == null ? [] : [iteratees];\n\t      }\n\t      orders = guard ? undefined : orders;\n\t      if (!isArray(orders)) {\n\t        orders = orders == null ? [] : [orders];\n\t      }\n\t      return baseOrderBy(collection, iteratees, orders);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements split into two groups, the first of which\n\t     * contains elements `predicate` returns truthy for, the second of which\n\t     * contains elements `predicate` returns falsey for. The predicate is\n\t     * invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the array of grouped elements.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': false },\n\t     *   { 'user': 'fred',    'age': 40, 'active': true },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n\t     * ];\n\t     *\n\t     * _.partition(users, function(o) { return o.active; });\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.partition(users, { 'age': 1, 'active': false });\n\t     * // => objects for [['pebbles'], ['barney', 'fred']]\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.partition(users, ['active', false]);\n\t     * // => objects for [['barney', 'pebbles'], ['fred']]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.partition(users, 'active');\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     */\n\t    var partition = createAggregator(function(result, value, key) {\n\t      result[key ? 0 : 1].push(value);\n\t    }, function() { return [[], []]; });\n\t\n\t    /**\n\t     * Reduces `collection` to a value which is the accumulated result of running\n\t     * each element in `collection` through `iteratee`, where each successive\n\t     * invocation is supplied the return value of the previous. If `accumulator`\n\t     * is not given the first element of `collection` is used as the initial\n\t     * value. The iteratee is invoked with four arguments:\n\t     * (accumulator, value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n\t     *\n\t     * The guarded methods are:\n\t     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n\t     * and `sortBy`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.reduce([1, 2], function(sum, n) {\n\t     *   return sum + n;\n\t     * }, 0);\n\t     * // => 3\n\t     *\n\t     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     *   return result;\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n\t     */\n\t    function reduce(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduce : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.reduce` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * var array = [[0, 1], [2, 3], [4, 5]];\n\t     *\n\t     * _.reduceRight(array, function(flattened, other) {\n\t     *   return flattened.concat(other);\n\t     * }, []);\n\t     * // => [4, 5, 2, 3, 0, 1]\n\t     */\n\t    function reduceRight(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.filter`; this method returns the elements of `collection`\n\t     * that `predicate` does **not** return truthy for.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true }\n\t     * ];\n\t     *\n\t     * _.reject(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.reject(users, { 'age': 40, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.reject(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.reject(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function reject(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      predicate = getIteratee(predicate, 3);\n\t      return func(collection, function(value, index, collection) {\n\t        return !predicate(value, index, collection);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Gets a random element from `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @returns {*} Returns the random element.\n\t     * @example\n\t     *\n\t     * _.sample([1, 2, 3, 4]);\n\t     * // => 2\n\t     */\n\t    function sample(collection) {\n\t      var array = isArrayLike(collection) ? collection : values(collection),\n\t          length = array.length;\n\t\n\t      return length > 0 ? array[baseRandom(0, length - 1)] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets `n` random elements at unique keys from `collection` up to the\n\t     * size of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @param {number} [n=0] The number of elements to sample.\n\t     * @returns {Array} Returns the random elements.\n\t     * @example\n\t     *\n\t     * _.sampleSize([1, 2, 3], 2);\n\t     * // => [3, 1]\n\t     *\n\t     * _.sampleSize([1, 2, 3], 4);\n\t     * // => [2, 3, 1]\n\t     */\n\t    function sampleSize(collection, n) {\n\t      var index = -1,\n\t          result = toArray(collection),\n\t          length = result.length,\n\t          lastIndex = length - 1;\n\t\n\t      n = baseClamp(toInteger(n), 0, length);\n\t      while (++index < n) {\n\t        var rand = baseRandom(index, lastIndex),\n\t            value = result[rand];\n\t\n\t        result[rand] = result[index];\n\t        result[index] = value;\n\t      }\n\t      result.length = n;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of shuffled values, using a version of the\n\t     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     * @example\n\t     *\n\t     * _.shuffle([1, 2, 3, 4]);\n\t     * // => [4, 1, 3, 2]\n\t     */\n\t    function shuffle(collection) {\n\t      return sampleSize(collection, MAX_ARRAY_LENGTH);\n\t    }\n\t\n\t    /**\n\t     * Gets the size of `collection` by returning its length for array-like\n\t     * values or the number of own enumerable properties for objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to inspect.\n\t     * @returns {number} Returns the collection size.\n\t     * @example\n\t     *\n\t     * _.size([1, 2, 3]);\n\t     * // => 3\n\t     *\n\t     * _.size({ 'a': 1, 'b': 2 });\n\t     * // => 2\n\t     *\n\t     * _.size('pebbles');\n\t     * // => 7\n\t     */\n\t    function size(collection) {\n\t      if (collection == null) {\n\t        return 0;\n\t      }\n\t      if (isArrayLike(collection)) {\n\t        var result = collection.length;\n\t        return (result && isString(collection)) ? stringSize(collection) : result;\n\t      }\n\t      return keys(collection).length;\n\t    }\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **any** element of `collection`.\n\t     * Iteration is stopped once `predicate` returns truthy. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.\n\t     * @example\n\t     *\n\t     * _.some([null, 0, 'yes', false], Boolean);\n\t     * // => true\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': true },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.some(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.some(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.some(users, 'active');\n\t     * // => true\n\t     */\n\t    function some(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arraySome : baseSome;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements, sorted in ascending order by the results of\n\t     * running each element in a collection through each iteratee. This method\n\t     * performs a stable sort, that is, it preserves the original sort order of\n\t     * equal elements. The iteratees are invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {...(Function|Function[]|Object|Object[]|string|string[])} [iteratees=[_.identity]]\n\t     *  The iteratees to sort by, specified individually or in arrays.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 42 },\n\t     *   { 'user': 'barney', 'age': 34 }\n\t     * ];\n\t     *\n\t     * _.sortBy(users, function(o) { return o.user; });\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\t     *\n\t     * _.sortBy(users, ['user', 'age']);\n\t     * // => objects for [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n\t     *\n\t     * _.sortBy(users, 'user', function(o) {\n\t     *   return Math.floor(o.age / 10);\n\t     * });\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\t     */\n\t    var sortBy = rest(function(collection, iteratees) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      var length = iteratees.length;\n\t      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n\t        iteratees = [];\n\t      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n\t        iteratees.length = 1;\n\t      }\n\t      return baseOrderBy(collection, baseFlatten(iteratees), []);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Gets the timestamp of the number of milliseconds that have elapsed since\n\t     * the Unix epoch (1 January 1970 00:00:00 UTC).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Function\n\t     * @category Date\n\t     * @returns {number} Returns the timestamp.\n\t     * @example\n\t     *\n\t     * _.defer(function(stamp) {\n\t     *   console.log(_.now() - stamp);\n\t     * }, _.now());\n\t     * // => logs the number of milliseconds it took for the deferred function to be invoked\n\t     */\n\t    var now = Date.now;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The opposite of `_.before`; this method creates a function that invokes\n\t     * `func` once it's called `n` or more times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {number} n The number of calls before `func` is invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var saves = ['profile', 'settings'];\n\t     *\n\t     * var done = _.after(saves.length, function() {\n\t     *   console.log('done saving!');\n\t     * });\n\t     *\n\t     * _.forEach(saves, function(type) {\n\t     *   asyncSave({ 'type': type, 'complete': done });\n\t     * });\n\t     * // => logs 'done saving!' after the two async saves have completed\n\t     */\n\t    function after(n, func) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n < 1) {\n\t          return func.apply(this, arguments);\n\t        }\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that accepts up to `n` arguments, ignoring any\n\t     * additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @param {number} [n=func.length] The arity cap.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function ary(func, n, guard) {\n\t      n = guard ? undefined : n;\n\t      n = (func && n == null) ? func.length : n;\n\t      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with the `this` binding and arguments\n\t     * of the created function, while it's called less than `n` times. Subsequent\n\t     * calls to the created function return the result of the last `func` invocation.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {number} n The number of calls at which `func` is no longer invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * jQuery(element).on('click', _.before(5, addContactToList));\n\t     * // => allows adding up to 4 contacts to the list\n\t     */\n\t    function before(n, func) {\n\t      var result;\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n > 0) {\n\t          result = func.apply(this, arguments);\n\t        }\n\t        if (n <= 1) {\n\t          func = undefined;\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and prepends any additional `_.bind` arguments to those provided to the\n\t     * bound function.\n\t     *\n\t     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** Unlike native `Function#bind` this method doesn't set the \"length\"\n\t     * property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, punctuation) {\n\t     *   return greeting + ' ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * var bound = _.bind(greet, object, 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bind(greet, object, _, '!');\n\t     * bound('hi');\n\t     * // => 'hi fred!'\n\t     */\n\t    var bind = rest(function(func, thisArg, partials) {\n\t      var bitmask = BIND_FLAG;\n\t      if (partials.length) {\n\t        var placeholder = lodash.placeholder || bind.placeholder,\n\t            holders = replaceHolders(partials, placeholder);\n\t\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(func, bitmask, thisArg, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `object[key]` and prepends\n\t     * any additional `_.bindKey` arguments to those provided to the bound function.\n\t     *\n\t     * This method differs from `_.bind` by allowing bound functions to reference\n\t     * methods that may be redefined or don't yet exist.\n\t     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n\t     * for more details.\n\t     *\n\t     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Object} object The object to invoke the method on.\n\t     * @param {string} key The key of the method.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'user': 'fred',\n\t     *   'greet': function(greeting, punctuation) {\n\t     *     return greeting + ' ' + this.user + punctuation;\n\t     *   }\n\t     * };\n\t     *\n\t     * var bound = _.bindKey(object, 'greet', 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * object.greet = function(greeting, punctuation) {\n\t     *   return greeting + 'ya ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * bound('!');\n\t     * // => 'hiya fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bindKey(object, 'greet', _, '!');\n\t     * bound('hi');\n\t     * // => 'hiya fred!'\n\t     */\n\t    var bindKey = rest(function(object, key, partials) {\n\t      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n\t      if (partials.length) {\n\t        var placeholder = lodash.placeholder || bindKey.placeholder,\n\t            holders = replaceHolders(partials, placeholder);\n\t\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(key, bitmask, object, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that accepts arguments of `func` and either invokes\n\t     * `func` returning its result, if at least `arity` number of arguments have\n\t     * been provided, or returns a function that accepts the remaining `func`\n\t     * arguments, and so on. The arity of `func` may be specified if `func.length`\n\t     * is not sufficient.\n\t     *\n\t     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curry(abc);\n\t     *\n\t     * curried(1)(2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(1)(_, 3)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curry(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrapper(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = lodash.placeholder || curry.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.curry` except that arguments are applied to `func`\n\t     * in the manner of `_.partialRight` instead of `_.partial`.\n\t     *\n\t     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curryRight(abc);\n\t     *\n\t     * curried(3)(2)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(2, 3)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(3)(1, _)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curryRight(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrapper(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = lodash.placeholder || curryRight.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a debounced function that delays invoking `func` until after `wait`\n\t     * milliseconds have elapsed since the last time the debounced function was\n\t     * invoked. The debounced function comes with a `cancel` method to cancel\n\t     * delayed `func` invocations and a `flush` method to immediately invoke them.\n\t     * Provide an options object to indicate whether `func` should be invoked on\n\t     * the leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n\t     * with the last arguments provided to the debounced function. Subsequent calls\n\t     * to the debounced function return the result of the last `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the debounced function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n\t     * for details over the differences between `_.debounce` and `_.throttle`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to debounce.\n\t     * @param {number} [wait=0] The number of milliseconds to delay.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.leading=false] Specify invoking on the leading\n\t     *  edge of the timeout.\n\t     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n\t     *  delayed before it's invoked.\n\t     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n\t     *  edge of the timeout.\n\t     * @returns {Function} Returns the new debounced function.\n\t     * @example\n\t     *\n\t     * // Avoid costly calculations while the window size is in flux.\n\t     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t     *\n\t     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n\t     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n\t     *   'leading': true,\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n\t     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n\t     * var source = new EventSource('/stream');\n\t     * jQuery(source).on('message', debounced);\n\t     *\n\t     * // Cancel the trailing debounced invocation.\n\t     * jQuery(window).on('popstate', debounced.cancel);\n\t     */\n\t    function debounce(func, wait, options) {\n\t      var args,\n\t          maxTimeoutId,\n\t          result,\n\t          stamp,\n\t          thisArg,\n\t          timeoutId,\n\t          trailingCall,\n\t          lastCalled = 0,\n\t          leading = false,\n\t          maxWait = false,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      wait = toNumber(wait) || 0;\n\t      if (isObject(options)) {\n\t        leading = !!options.leading;\n\t        maxWait = 'maxWait' in options && nativeMax(toNumber(options.maxWait) || 0, wait);\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t\n\t      function cancel() {\n\t        if (timeoutId) {\n\t          clearTimeout(timeoutId);\n\t        }\n\t        if (maxTimeoutId) {\n\t          clearTimeout(maxTimeoutId);\n\t        }\n\t        lastCalled = 0;\n\t        args = maxTimeoutId = thisArg = timeoutId = trailingCall = undefined;\n\t      }\n\t\n\t      function complete(isCalled, id) {\n\t        if (id) {\n\t          clearTimeout(id);\n\t        }\n\t        maxTimeoutId = timeoutId = trailingCall = undefined;\n\t        if (isCalled) {\n\t          lastCalled = now();\n\t          result = func.apply(thisArg, args);\n\t          if (!timeoutId && !maxTimeoutId) {\n\t            args = thisArg = undefined;\n\t          }\n\t        }\n\t      }\n\t\n\t      function delayed() {\n\t        var remaining = wait - (now() - stamp);\n\t        if (remaining <= 0 || remaining > wait) {\n\t          complete(trailingCall, maxTimeoutId);\n\t        } else {\n\t          timeoutId = setTimeout(delayed, remaining);\n\t        }\n\t      }\n\t\n\t      function flush() {\n\t        if ((timeoutId && trailingCall) || (maxTimeoutId && trailing)) {\n\t          result = func.apply(thisArg, args);\n\t        }\n\t        cancel();\n\t        return result;\n\t      }\n\t\n\t      function maxDelayed() {\n\t        complete(trailing, timeoutId);\n\t      }\n\t\n\t      function debounced() {\n\t        args = arguments;\n\t        stamp = now();\n\t        thisArg = this;\n\t        trailingCall = trailing && (timeoutId || !leading);\n\t\n\t        if (maxWait === false) {\n\t          var leadingCall = leading && !timeoutId;\n\t        } else {\n\t          if (!lastCalled && !maxTimeoutId && !leading) {\n\t            lastCalled = stamp;\n\t          }\n\t          var remaining = maxWait - (stamp - lastCalled),\n\t              isCalled = remaining <= 0 || remaining > maxWait;\n\t\n\t          if (isCalled) {\n\t            if (maxTimeoutId) {\n\t              maxTimeoutId = clearTimeout(maxTimeoutId);\n\t            }\n\t            lastCalled = stamp;\n\t            result = func.apply(thisArg, args);\n\t          }\n\t          else if (!maxTimeoutId) {\n\t            maxTimeoutId = setTimeout(maxDelayed, remaining);\n\t          }\n\t        }\n\t        if (isCalled && timeoutId) {\n\t          timeoutId = clearTimeout(timeoutId);\n\t        }\n\t        else if (!timeoutId && wait !== maxWait) {\n\t          timeoutId = setTimeout(delayed, wait);\n\t        }\n\t        if (leadingCall) {\n\t          isCalled = true;\n\t          result = func.apply(thisArg, args);\n\t        }\n\t        if (isCalled && !timeoutId && !maxTimeoutId) {\n\t          args = thisArg = undefined;\n\t        }\n\t        return result;\n\t      }\n\t      debounced.cancel = cancel;\n\t      debounced.flush = flush;\n\t      return debounced;\n\t    }\n\t\n\t    /**\n\t     * Defers invoking the `func` until the current call stack has cleared. Any\n\t     * additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to defer.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.defer(function(text) {\n\t     *   console.log(text);\n\t     * }, 'deferred');\n\t     * // => logs 'deferred' after one or more milliseconds\n\t     */\n\t    var defer = rest(function(func, args) {\n\t      return baseDelay(func, 1, args);\n\t    });\n\t\n\t    /**\n\t     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n\t     * provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.delay(function(text) {\n\t     *   console.log(text);\n\t     * }, 1000, 'later');\n\t     * // => logs 'later' after one second\n\t     */\n\t    var delay = rest(function(func, wait, args) {\n\t      return baseDelay(func, toNumber(wait) || 0, args);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments reversed.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to flip arguments for.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var flipped = _.flip(function() {\n\t     *   return _.toArray(arguments);\n\t     * });\n\t     *\n\t     * flipped('a', 'b', 'c', 'd');\n\t     * // => ['d', 'c', 'b', 'a']\n\t     */\n\t    function flip(func) {\n\t      return createWrapper(func, FLIP_FLAG);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that memoizes the result of `func`. If `resolver` is\n\t     * provided it determines the cache key for storing the result based on the\n\t     * arguments provided to the memoized function. By default, the first argument\n\t     * provided to the memoized function is used as the map cache key. The `func`\n\t     * is invoked with the `this` binding of the memoized function.\n\t     *\n\t     * **Note:** The cache is exposed as the `cache` property on the memoized\n\t     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n\t     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n\t     * method interface of `delete`, `get`, `has`, and `set`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to have its output memoized.\n\t     * @param {Function} [resolver] The function to resolve the cache key.\n\t     * @returns {Function} Returns the new memoizing function.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     * var other = { 'c': 3, 'd': 4 };\n\t     *\n\t     * var values = _.memoize(_.values);\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * values(other);\n\t     * // => [3, 4]\n\t     *\n\t     * object.a = 2;\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * // Modify the result cache.\n\t     * values.cache.set(object, ['a', 'b']);\n\t     * values(object);\n\t     * // => ['a', 'b']\n\t     *\n\t     * // Replace `_.memoize.Cache`.\n\t     * _.memoize.Cache = WeakMap;\n\t     */\n\t    function memoize(func, resolver) {\n\t      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var memoized = function() {\n\t        var args = arguments,\n\t            key = resolver ? resolver.apply(this, args) : args[0],\n\t            cache = memoized.cache;\n\t\n\t        if (cache.has(key)) {\n\t          return cache.get(key);\n\t        }\n\t        var result = func.apply(this, args);\n\t        memoized.cache = cache.set(key, result);\n\t        return result;\n\t      };\n\t      memoized.cache = new memoize.Cache;\n\t      return memoized;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that negates the result of the predicate `func`. The\n\t     * `func` predicate is invoked with the `this` binding and arguments of the\n\t     * created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} predicate The predicate to negate.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function isEven(n) {\n\t     *   return n % 2 == 0;\n\t     * }\n\t     *\n\t     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n\t     * // => [1, 3, 5]\n\t     */\n\t    function negate(predicate) {\n\t      if (typeof predicate != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function() {\n\t        return !predicate.apply(this, arguments);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that is restricted to invoking `func` once. Repeat calls\n\t     * to the function return the value of the first invocation. The `func` is\n\t     * invoked with the `this` binding and arguments of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var initialize = _.once(createApplication);\n\t     * initialize();\n\t     * initialize();\n\t     * // `initialize` invokes `createApplication` once\n\t     */\n\t    function once(func) {\n\t      return before(2, func);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments transformed by\n\t     * corresponding `transforms`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to wrap.\n\t     * @param {...(Function|Function[])} [transforms] The functions to transform\n\t     * arguments, specified individually or in arrays.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function doubled(n) {\n\t     *   return n * 2;\n\t     * }\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var func = _.overArgs(function(x, y) {\n\t     *   return [x, y];\n\t     * }, square, doubled);\n\t     *\n\t     * func(9, 3);\n\t     * // => [81, 6]\n\t     *\n\t     * func(10, 5);\n\t     * // => [100, 10]\n\t     */\n\t    var overArgs = rest(function(func, transforms) {\n\t      transforms = arrayMap(baseFlatten(transforms), getIteratee());\n\t\n\t      var funcsLength = transforms.length;\n\t      return rest(function(args) {\n\t        var index = -1,\n\t            length = nativeMin(args.length, funcsLength);\n\t\n\t        while (++index < length) {\n\t          args[index] = transforms[index].call(this, args[index]);\n\t        }\n\t        return apply(func, this, args);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with `partial` arguments prepended\n\t     * to those provided to the new function. This method is like `_.bind` except\n\t     * it does **not** alter the `this` binding.\n\t     *\n\t     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var sayHelloTo = _.partial(greet, 'hello');\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var greetFred = _.partial(greet, _, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     */\n\t    var partial = rest(function(func, partials) {\n\t      var placeholder = lodash.placeholder || partial.placeholder,\n\t          holders = replaceHolders(partials, placeholder);\n\t\n\t      return createWrapper(func, PARTIAL_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.partial` except that partially applied arguments\n\t     * are appended to those provided to the new function.\n\t     *\n\t     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var greetFred = _.partialRight(greet, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     */\n\t    var partialRight = rest(function(func, partials) {\n\t      var placeholder = lodash.placeholder || partialRight.placeholder,\n\t          holders = replaceHolders(partials, placeholder);\n\t\n\t      return createWrapper(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments arranged according\n\t     * to the specified indexes where the argument value at the first index is\n\t     * provided as the first argument, the argument value at the second index is\n\t     * provided as the second argument, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to rearrange arguments for.\n\t     * @param {...(number|number[])} indexes The arranged argument indexes,\n\t     *  specified individually or in arrays.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var rearged = _.rearg(function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * }, 2, 0, 1);\n\t     *\n\t     * rearged('b', 'c', 'a')\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    var rearg = rest(function(func, indexes) {\n\t      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * created function and arguments from `start` and beyond provided as an array.\n\t     *\n\t     * **Note:** This method is based on the [rest parameter](https://mdn.io/rest_parameters).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.rest(function(what, names) {\n\t     *   return what + ' ' + _.initial(names).join(', ') +\n\t     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n\t     * });\n\t     *\n\t     * say('hello', 'fred', 'barney', 'pebbles');\n\t     * // => 'hello fred, barney, & pebbles'\n\t     */\n\t    function rest(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);\n\t      return function() {\n\t        var args = arguments,\n\t            index = -1,\n\t            length = nativeMax(args.length - start, 0),\n\t            array = Array(length);\n\t\n\t        while (++index < length) {\n\t          array[index] = args[start + index];\n\t        }\n\t        switch (start) {\n\t          case 0: return func.call(this, array);\n\t          case 1: return func.call(this, args[0], array);\n\t          case 2: return func.call(this, args[0], args[1], array);\n\t        }\n\t        var otherArgs = Array(start + 1);\n\t        index = -1;\n\t        while (++index < start) {\n\t          otherArgs[index] = args[index];\n\t        }\n\t        otherArgs[start] = array;\n\t        return apply(func, this, otherArgs);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the created\n\t     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n\t     *\n\t     * **Note:** This method is based on the [spread operator](https://mdn.io/spread_operator).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to spread arguments over.\n\t     * @param {number} [start=0] The start position of the spread.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.spread(function(who, what) {\n\t     *   return who + ' says ' + what;\n\t     * });\n\t     *\n\t     * say(['fred', 'hello']);\n\t     * // => 'fred says hello'\n\t     *\n\t     * var numbers = Promise.all([\n\t     *   Promise.resolve(40),\n\t     *   Promise.resolve(36)\n\t     * ]);\n\t     *\n\t     * numbers.then(_.spread(function(x, y) {\n\t     *   return x + y;\n\t     * }));\n\t     * // => a Promise of 76\n\t     */\n\t    function spread(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n\t      return rest(function(args) {\n\t        var array = args[start],\n\t            otherArgs = args.slice(0, start);\n\t\n\t        if (array) {\n\t          arrayPush(otherArgs, array);\n\t        }\n\t        return apply(func, this, otherArgs);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a throttled function that only invokes `func` at most once per\n\t     * every `wait` milliseconds. The throttled function comes with a `cancel`\n\t     * method to cancel delayed `func` invocations and a `flush` method to\n\t     * immediately invoke them. Provide an options object to indicate whether\n\t     * `func` should be invoked on the leading and/or trailing edge of the `wait`\n\t     * timeout. The `func` is invoked with the last arguments provided to the\n\t     * throttled function. Subsequent calls to the throttled function return the\n\t     * result of the last `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the throttled function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n\t     * for details over the differences between `_.throttle` and `_.debounce`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to throttle.\n\t     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.leading=true] Specify invoking on the leading\n\t     *  edge of the timeout.\n\t     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n\t     *  edge of the timeout.\n\t     * @returns {Function} Returns the new throttled function.\n\t     * @example\n\t     *\n\t     * // Avoid excessively updating the position while scrolling.\n\t     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n\t     *\n\t     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n\t     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n\t     * jQuery(element).on('click', throttled);\n\t     *\n\t     * // Cancel the trailing throttled invocation.\n\t     * jQuery(window).on('popstate', throttled.cancel);\n\t     */\n\t    function throttle(func, wait, options) {\n\t      var leading = true,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      if (isObject(options)) {\n\t        leading = 'leading' in options ? !!options.leading : leading;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t      return debounce(func, wait, { 'leading': leading, 'maxWait': wait, 'trailing': trailing });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that accepts up to one argument, ignoring any\n\t     * additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.unary(parseInt));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function unary(func) {\n\t      return ary(func, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that provides `value` to the wrapper function as its\n\t     * first argument. Any additional arguments provided to the function are\n\t     * appended to those provided to the wrapper function. The wrapper is invoked\n\t     * with the `this` binding of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {*} value The value to wrap.\n\t     * @param {Function} wrapper The wrapper function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var p = _.wrap(_.escape, function(func, text) {\n\t     *   return '<p>' + func(text) + '</p>';\n\t     * });\n\t     *\n\t     * p('fred, barney, & pebbles');\n\t     * // => '<p>fred, barney, &amp; pebbles</p>'\n\t     */\n\t    function wrap(value, wrapper) {\n\t      wrapper = wrapper == null ? identity : wrapper;\n\t      return partial(wrapper, value);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a shallow clone of `value`.\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n\t     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n\t     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n\t     * arrays. The own enumerable properties of `arguments` objects are cloned\n\t     * as plain objects. An empty object is returned for uncloneable values such\n\t     * as error objects, functions, DOM nodes, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @returns {*} Returns the cloned value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var shallow = _.clone(objects);\n\t     * console.log(shallow[0] === objects[0]);\n\t     * // => true\n\t     */\n\t    function clone(value) {\n\t      return baseClone(value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it accepts `customizer` which\n\t     * is invoked to produce the cloned value. If `customizer` returns `undefined`\n\t     * cloning is handled by the method instead. The `customizer` is invoked with\n\t     * up to four arguments; (value [, index|key, object, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the cloned value.\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(false);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 0\n\t     */\n\t    function cloneWith(value, customizer) {\n\t      return baseClone(value, false, customizer);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var deep = _.cloneDeep(objects);\n\t     * console.log(deep[0] === objects[0]);\n\t     * // => false\n\t     */\n\t    function cloneDeep(value) {\n\t      return baseClone(value, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.cloneWith` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(true);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneDeepWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 20\n\t     */\n\t    function cloneDeepWith(value, customizer) {\n\t      return baseClone(value, true, customizer);\n\t    }\n\t\n\t    /**\n\t     * Performs a [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * comparison between two values to determine if they are equivalent.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'fred' };\n\t     *\n\t     * _.eq(object, object);\n\t     * // => true\n\t     *\n\t     * _.eq(object, other);\n\t     * // => false\n\t     *\n\t     * _.eq('a', 'a');\n\t     * // => true\n\t     *\n\t     * _.eq('a', Object('a'));\n\t     * // => false\n\t     *\n\t     * _.eq(NaN, NaN);\n\t     * // => true\n\t     */\n\t    function eq(value, other) {\n\t      return value === other || (value !== value && other !== other);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.gt(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.gt(1, 3);\n\t     * // => false\n\t     */\n\t    function gt(value, other) {\n\t      return value > other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.gte(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.gte(1, 3);\n\t     * // => false\n\t     */\n\t    function gte(value, other) {\n\t      return value >= other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is likely an `arguments` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArguments(function() { return arguments; }());\n\t     * // => true\n\t     *\n\t     * _.isArguments([1, 2, 3]);\n\t     * // => false\n\t     */\n\t    function isArguments(value) {\n\t      // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n\t      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n\t        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `Array` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Function\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArray([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArray(document.body.children);\n\t     * // => false\n\t     *\n\t     * _.isArray('abc');\n\t     * // => false\n\t     *\n\t     * _.isArray(_.noop);\n\t     * // => false\n\t     */\n\t    var isArray = Array.isArray;\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `ArrayBuffer` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Function\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayBuffer(new ArrayBuffer(2));\n\t     * // => true\n\t     *\n\t     * _.isArrayBuffer(new Array(2));\n\t     * // => false\n\t     */\n\t    function isArrayBuffer(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is array-like. A value is considered array-like if it's\n\t     * not a function and has a `value.length` that's an integer greater than or\n\t     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Function\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike('abc');\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLike(value) {\n\t      return value != null &&\n\t        !(typeof value == 'function' && isFunction(value)) && isLength(getLength(value));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isArrayLike` except that it also checks if `value`\n\t     * is an object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Function\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array-like object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLikeObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject('abc');\n\t     * // => false\n\t     *\n\t     * _.isArrayLikeObject(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLikeObject(value) {\n\t      return isObjectLike(value) && isArrayLike(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a boolean primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBoolean(false);\n\t     * // => true\n\t     *\n\t     * _.isBoolean(null);\n\t     * // => false\n\t     */\n\t    function isBoolean(value) {\n\t      return value === true || value === false ||\n\t        (isObjectLike(value) && objectToString.call(value) == boolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a buffer.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBuffer(new Buffer(2));\n\t     * // => true\n\t     *\n\t     * _.isBuffer(new Uint8Array(2));\n\t     * // => false\n\t     */\n\t    var isBuffer = !Buffer ? constant(false) : function(value) {\n\t      return value instanceof Buffer;\n\t    };\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Date` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isDate(new Date);\n\t     * // => true\n\t     *\n\t     * _.isDate('Mon April 23 2012');\n\t     * // => false\n\t     */\n\t    function isDate(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == dateTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is likely a DOM element.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n\t     * @example\n\t     *\n\t     * _.isElement(document.body);\n\t     * // => true\n\t     *\n\t     * _.isElement('<body>');\n\t     * // => false\n\t     */\n\t    function isElement(value) {\n\t      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is empty. A value is considered empty unless it's an\n\t     * `arguments` object, array, string, or jQuery-like collection with a length\n\t     * greater than `0` or an object with own enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Array|Object|string} value The value to inspect.\n\t     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n\t     * @example\n\t     *\n\t     * _.isEmpty(null);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(true);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(1);\n\t     * // => true\n\t     *\n\t     * _.isEmpty([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isEmpty({ 'a': 1 });\n\t     * // => false\n\t     */\n\t    function isEmpty(value) {\n\t      if (isArrayLike(value) &&\n\t          (isArray(value) || isString(value) || isFunction(value.splice) || isArguments(value))) {\n\t        return !value.length;\n\t      }\n\t      for (var key in value) {\n\t        if (hasOwnProperty.call(value, key)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between two values to determine if they are\n\t     * equivalent.\n\t     *\n\t     * **Note:** This method supports comparing arrays, array buffers, booleans,\n\t     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n\t     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n\t     * by their own, not inherited, enumerable properties. Functions and DOM\n\t     * nodes are **not** supported.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'fred' };\n\t     *\n\t     * _.isEqual(object, other);\n\t     * // => true\n\t     *\n\t     * object === other;\n\t     * // => false\n\t     */\n\t    function isEqual(value, other) {\n\t      return baseIsEqual(value, other);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isEqual` except that it accepts `customizer` which is\n\t     * invoked to compare values. If `customizer` returns `undefined` comparisons are\n\t     * handled by the method instead. The `customizer` is invoked with up to six arguments:\n\t     * (objValue, othValue [, index|key, object, other, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, othValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var array = ['hello', 'goodbye'];\n\t     * var other = ['hi', 'goodbye'];\n\t     *\n\t     * _.isEqualWith(array, other, customizer);\n\t     * // => true\n\t     */\n\t    function isEqualWith(value, other, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      var result = customizer ? customizer(value, other) : undefined;\n\t      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n\t     * `SyntaxError`, `TypeError`, or `URIError` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isError(new Error);\n\t     * // => true\n\t     *\n\t     * _.isError(Error);\n\t     * // => false\n\t     */\n\t    function isError(value) {\n\t      return isObjectLike(value) &&\n\t        typeof value.message == 'string' && objectToString.call(value) == errorTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a finite primitive number.\n\t     *\n\t     * **Note:** This method is based on [`Number.isFinite`](https://mdn.io/Number/isFinite).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFinite(3);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Number.MAX_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isFinite(3.14);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Infinity);\n\t     * // => false\n\t     */\n\t    function isFinite(value) {\n\t      return typeof value == 'number' && nativeIsFinite(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Function` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFunction(_);\n\t     * // => true\n\t     *\n\t     * _.isFunction(/abc/);\n\t     * // => false\n\t     */\n\t    function isFunction(value) {\n\t      // The use of `Object#toString` avoids issues with the `typeof` operator\n\t      // in Safari 8 which returns 'object' for typed array constructors, and\n\t      // PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n\t      var tag = isObject(value) ? objectToString.call(value) : '';\n\t      return tag == funcTag || tag == genTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an integer.\n\t     *\n\t     * **Note:** This method is based on [`Number.isInteger`](https://mdn.io/Number/isInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isInteger('3');\n\t     * // => false\n\t     */\n\t    function isInteger(value) {\n\t      return typeof value == 'number' && value == toInteger(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like length.\n\t     *\n\t     * **Note:** This function is loosely based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n\t     * @example\n\t     *\n\t     * _.isLength(3);\n\t     * // => true\n\t     *\n\t     * _.isLength(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isLength(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isLength('3');\n\t     * // => false\n\t     */\n\t    function isLength(value) {\n\t      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n\t     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObject({});\n\t     * // => true\n\t     *\n\t     * _.isObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObject(_.noop);\n\t     * // => true\n\t     *\n\t     * _.isObject(null);\n\t     * // => false\n\t     */\n\t    function isObject(value) {\n\t      var type = typeof value;\n\t      return !!value && (type == 'object' || type == 'function');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is object-like. A value is object-like if it's not `null`\n\t     * and has a `typeof` result of \"object\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObjectLike({});\n\t     * // => true\n\t     *\n\t     * _.isObjectLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObjectLike(_.noop);\n\t     * // => false\n\t     *\n\t     * _.isObjectLike(null);\n\t     * // => false\n\t     */\n\t    function isObjectLike(value) {\n\t      return !!value && typeof value == 'object';\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Map` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isMap(new Map);\n\t     * // => true\n\t     *\n\t     * _.isMap(new WeakMap);\n\t     * // => false\n\t     */\n\t    function isMap(value) {\n\t      return isObjectLike(value) && getTag(value) == mapTag;\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between `object` and `source` to determine if\n\t     * `object` contains equivalent property values.\n\t     *\n\t     * **Note:** This method supports comparing the same values as `_.isEqual`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.isMatch(object, { 'age': 40 });\n\t     * // => true\n\t     *\n\t     * _.isMatch(object, { 'age': 36 });\n\t     * // => false\n\t     */\n\t    function isMatch(object, source) {\n\t      return object === source || baseIsMatch(object, source, getMatchData(source));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isMatch` except that it accepts `customizer` which\n\t     * is invoked to compare values. If `customizer` returns `undefined` comparisons\n\t     * are handled by the method instead. The `customizer` is invoked with five\n\t     * arguments: (objValue, srcValue, index|key, object, source).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = { 'greeting': 'hello' };\n\t     * var source = { 'greeting': 'hi' };\n\t     *\n\t     * _.isMatchWith(object, source, customizer);\n\t     * // => true\n\t     */\n\t    function isMatchWith(object, source, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return baseIsMatch(object, source, getMatchData(source), customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `NaN`.\n\t     *\n\t     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n\t     * which returns `true` for `undefined` and other non-numeric values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNaN(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNaN(new Number(NaN));\n\t     * // => true\n\t     *\n\t     * isNaN(undefined);\n\t     * // => true\n\t     *\n\t     * _.isNaN(undefined);\n\t     * // => false\n\t     */\n\t    function isNaN(value) {\n\t      // An `NaN` primitive is the only value that is not equal to itself.\n\t      // Perform the `toStringTag` check first to avoid errors with some ActiveX objects in IE.\n\t      return isNumber(value) && value != +value;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a native function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNative(Array.prototype.push);\n\t     * // => true\n\t     *\n\t     * _.isNative(_);\n\t     * // => false\n\t     */\n\t    function isNative(value) {\n\t      if (value == null) {\n\t        return false;\n\t      }\n\t      if (isFunction(value)) {\n\t        return reIsNative.test(funcToString.call(value));\n\t      }\n\t      return isObjectLike(value) &&\n\t        (isHostObject(value) ? reIsNative : reIsHostCtor).test(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNull(null);\n\t     * // => true\n\t     *\n\t     * _.isNull(void 0);\n\t     * // => false\n\t     */\n\t    function isNull(value) {\n\t      return value === null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null` or `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNil(null);\n\t     * // => true\n\t     *\n\t     * _.isNil(void 0);\n\t     * // => true\n\t     *\n\t     * _.isNil(NaN);\n\t     * // => false\n\t     */\n\t    function isNil(value) {\n\t      return value == null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Number` primitive or object.\n\t     *\n\t     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n\t     * as numbers, use the `_.isFinite` method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNumber(3);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Number.MIN_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Infinity);\n\t     * // => true\n\t     *\n\t     * _.isNumber('3');\n\t     * // => false\n\t     */\n\t    function isNumber(value) {\n\t      return typeof value == 'number' ||\n\t        (isObjectLike(value) && objectToString.call(value) == numberTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a plain object, that is, an object created by the\n\t     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * _.isPlainObject(new Foo);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject({ 'x': 0, 'y': 0 });\n\t     * // => true\n\t     *\n\t     * _.isPlainObject(Object.create(null));\n\t     * // => true\n\t     */\n\t    function isPlainObject(value) {\n\t      if (!isObjectLike(value) || objectToString.call(value) != objectTag || isHostObject(value)) {\n\t        return false;\n\t      }\n\t      var proto = objectProto;\n\t      if (typeof value.constructor == 'function') {\n\t        proto = getPrototypeOf(value);\n\t      }\n\t      if (proto === null) {\n\t        return true;\n\t      }\n\t      var Ctor = proto.constructor;\n\t      return (typeof Ctor == 'function' &&\n\t        Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `RegExp` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isRegExp(/abc/);\n\t     * // => true\n\t     *\n\t     * _.isRegExp('/abc/');\n\t     * // => false\n\t     */\n\t    function isRegExp(value) {\n\t      return isObject(value) && objectToString.call(value) == regexpTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n\t     * double precision number which isn't the result of a rounded unsafe integer.\n\t     *\n\t     * **Note:** This method is based on [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSafeInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isSafeInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger('3');\n\t     * // => false\n\t     */\n\t    function isSafeInteger(value) {\n\t      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Set` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSet(new Set);\n\t     * // => true\n\t     *\n\t     * _.isSet(new WeakSet);\n\t     * // => false\n\t     */\n\t    function isSet(value) {\n\t      return isObjectLike(value) && getTag(value) == setTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `String` primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isString('abc');\n\t     * // => true\n\t     *\n\t     * _.isString(1);\n\t     * // => false\n\t     */\n\t    function isString(value) {\n\t      return typeof value == 'string' ||\n\t        (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Symbol` primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSymbol(Symbol.iterator);\n\t     * // => true\n\t     *\n\t     * _.isSymbol('abc');\n\t     * // => false\n\t     */\n\t    function isSymbol(value) {\n\t      return typeof value == 'symbol' ||\n\t        (isObjectLike(value) && objectToString.call(value) == symbolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a typed array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isTypedArray(new Uint8Array);\n\t     * // => true\n\t     *\n\t     * _.isTypedArray([]);\n\t     * // => false\n\t     */\n\t    function isTypedArray(value) {\n\t      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isUndefined(void 0);\n\t     * // => true\n\t     *\n\t     * _.isUndefined(null);\n\t     * // => false\n\t     */\n\t    function isUndefined(value) {\n\t      return value === undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakMap` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakMap(new WeakMap);\n\t     * // => true\n\t     *\n\t     * _.isWeakMap(new Map);\n\t     * // => false\n\t     */\n\t    function isWeakMap(value) {\n\t      return isObjectLike(value) && getTag(value) == weakMapTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakSet` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakSet(new WeakSet);\n\t     * // => true\n\t     *\n\t     * _.isWeakSet(new Set);\n\t     * // => false\n\t     */\n\t    function isWeakSet(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == weakSetTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.lt(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.lt(3, 1);\n\t     * // => false\n\t     */\n\t    function lt(value, other) {\n\t      return value < other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.lte(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 1);\n\t     * // => false\n\t     */\n\t    function lte(value, other) {\n\t      return value <= other;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the converted array.\n\t     * @example\n\t     *\n\t     * _.toArray({ 'a': 1, 'b': 2 });\n\t     * // => [1, 2]\n\t     *\n\t     * _.toArray('abc');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toArray(1);\n\t     * // => []\n\t     *\n\t     * _.toArray(null);\n\t     * // => []\n\t     */\n\t    function toArray(value) {\n\t      if (!value) {\n\t        return [];\n\t      }\n\t      if (isArrayLike(value)) {\n\t        return isString(value) ? stringToArray(value) : copyArray(value);\n\t      }\n\t      if (iteratorSymbol && value[iteratorSymbol]) {\n\t        return iteratorToArray(value[iteratorSymbol]());\n\t      }\n\t      var tag = getTag(value),\n\t          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\t\n\t      return func(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer.\n\t     *\n\t     * **Note:** This function is loosely based on [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toInteger(3);\n\t     * // => 3\n\t     *\n\t     * _.toInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toInteger(Infinity);\n\t     * // => 1.7976931348623157e+308\n\t     *\n\t     * _.toInteger('3');\n\t     * // => 3\n\t     */\n\t    function toInteger(value) {\n\t      if (!value) {\n\t        return value === 0 ? value : 0;\n\t      }\n\t      value = toNumber(value);\n\t      if (value === INFINITY || value === -INFINITY) {\n\t        var sign = (value < 0 ? -1 : 1);\n\t        return sign * MAX_INTEGER;\n\t      }\n\t      var remainder = value % 1;\n\t      return value === value ? (remainder ? value - remainder : value) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer suitable for use as the length of an\n\t     * array-like object.\n\t     *\n\t     * **Note:** This method is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toLength(3);\n\t     * // => 3\n\t     *\n\t     * _.toLength(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toLength(Infinity);\n\t     * // => 4294967295\n\t     *\n\t     * _.toLength('3');\n\t     * // => 3\n\t     */\n\t    function toLength(value) {\n\t      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to process.\n\t     * @returns {number} Returns the number.\n\t     * @example\n\t     *\n\t     * _.toNumber(3);\n\t     * // => 3\n\t     *\n\t     * _.toNumber(Number.MIN_VALUE);\n\t     * // => 5e-324\n\t     *\n\t     * _.toNumber(Infinity);\n\t     * // => Infinity\n\t     *\n\t     * _.toNumber('3');\n\t     * // => 3\n\t     */\n\t    function toNumber(value) {\n\t      if (isObject(value)) {\n\t        var other = isFunction(value.valueOf) ? value.valueOf() : value;\n\t        value = isObject(other) ? (other + '') : other;\n\t      }\n\t      if (typeof value != 'string') {\n\t        return value === 0 ? value : +value;\n\t      }\n\t      value = value.replace(reTrim, '');\n\t      var isBinary = reIsBinary.test(value);\n\t      return (isBinary || reIsOctal.test(value))\n\t        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n\t        : (reIsBadHex.test(value) ? NAN : +value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a plain object flattening inherited enumerable\n\t     * properties of `value` to own properties of the plain object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Object} Returns the converted plain object.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     *\n\t     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n\t     * // => { 'a': 1, 'b': 2, 'c': 3 }\n\t     */\n\t    function toPlainObject(value) {\n\t      return copyObject(value, keysIn(value));\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a safe integer. A safe integer can be compared and\n\t     * represented correctly.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toSafeInteger(3);\n\t     * // => 3\n\t     *\n\t     * _.toSafeInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toSafeInteger(Infinity);\n\t     * // => 9007199254740991\n\t     *\n\t     * _.toSafeInteger('3');\n\t     * // => 3\n\t     */\n\t    function toSafeInteger(value) {\n\t      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a string if it's not one. An empty string is returned\n\t     * for `null` and `undefined` values. The sign of `-0` is preserved.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to process.\n\t     * @returns {string} Returns the string.\n\t     * @example\n\t     *\n\t     * _.toString(null);\n\t     * // => ''\n\t     *\n\t     * _.toString(-0);\n\t     * // => '-0'\n\t     *\n\t     * _.toString([1, 2, 3]);\n\t     * // => '1,2,3'\n\t     */\n\t    function toString(value) {\n\t      // Exit early for strings to avoid a performance hit in some environments.\n\t      if (typeof value == 'string') {\n\t        return value;\n\t      }\n\t      if (value == null) {\n\t        return '';\n\t      }\n\t      if (isSymbol(value)) {\n\t        return Symbol ? symbolToString.call(value) : '';\n\t      }\n\t      var result = (value + '');\n\t      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Assigns own enumerable properties of source objects to the destination\n\t     * object. Source objects are applied from left to right. Subsequent sources\n\t     * overwrite property assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object` and is loosely based on\n\t     * [`Object.assign`](https://mdn.io/Object/assign).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.c = 3;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.e = 5;\n\t     * }\n\t     *\n\t     * Foo.prototype.d = 4;\n\t     * Bar.prototype.f = 6;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'c': 3, 'e': 5 }\n\t     */\n\t    var assign = createAssigner(function(object, source) {\n\t      copyObject(source, keys(source), object);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it iterates over own and\n\t     * inherited source properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias extend\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.d = 4;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     * Bar.prototype.e = 5;\n\t     *\n\t     * _.assignIn({ 'a': 1 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5 }\n\t     */\n\t    var assignIn = createAssigner(function(object, source) {\n\t      copyObject(source, keysIn(source), object);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assignIn` except that it accepts `customizer` which\n\t     * is invoked to produce the assigned values. If `customizer` returns `undefined`\n\t     * assignment is handled by the method instead. The `customizer` is invoked\n\t     * with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias extendWith\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignInWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObjectWith(source, keysIn(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it accepts `customizer` which\n\t     * is invoked to produce the assigned values. If `customizer` returns `undefined`\n\t     * assignment is handled by the method instead. The `customizer` is invoked\n\t     * with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObjectWith(source, keys(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values corresponding to `paths` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {...(string|string[])} [paths] The property paths of elements to pick,\n\t     *  specified individually or in arrays.\n\t     * @returns {Array} Returns the new array of picked elements.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _.at(object, ['a[0].b.c', 'a[1]']);\n\t     * // => [3, 4]\n\t     *\n\t     * _.at(['a', 'b', 'c'], 0, 2);\n\t     * // => ['a', 'c']\n\t     */\n\t    var at = rest(function(object, paths) {\n\t      return baseAt(object, baseFlatten(paths));\n\t    });\n\t\n\t    /**\n\t     * Creates an object that inherits from the `prototype` object. If a `properties`\n\t     * object is given its own enumerable properties are assigned to the created object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @param {Object} [properties] The properties to assign to the object.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * function Shape() {\n\t     *   this.x = 0;\n\t     *   this.y = 0;\n\t     * }\n\t     *\n\t     * function Circle() {\n\t     *   Shape.call(this);\n\t     * }\n\t     *\n\t     * Circle.prototype = _.create(Shape.prototype, {\n\t     *   'constructor': Circle\n\t     * });\n\t     *\n\t     * var circle = new Circle;\n\t     * circle instanceof Circle;\n\t     * // => true\n\t     *\n\t     * circle instanceof Shape;\n\t     * // => true\n\t     */\n\t    function create(prototype, properties) {\n\t      var result = baseCreate(prototype);\n\t      return properties ? baseAssign(result, properties) : result;\n\t    }\n\t\n\t    /**\n\t     * Assigns own and inherited enumerable properties of source objects to the\n\t     * destination object for all destination properties that resolve to `undefined`.\n\t     * Source objects are applied from left to right. Once a property is set,\n\t     * additional values of the same property are ignored.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var defaults = rest(function(args) {\n\t      args.push(undefined, assignInDefaults);\n\t      return apply(assignInWith, undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.defaults` except that it recursively assigns\n\t     * default properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n\t     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n\t     *\n\t     */\n\t    var defaultsDeep = rest(function(args) {\n\t      args.push(undefined, mergeDefaults);\n\t      return apply(mergeWith, undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the key of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findKey(users, function(o) { return o.age < 40; });\n\t     * // => 'barney' (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findKey(users, { 'age': 1, 'active': true });\n\t     * // => 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findKey(users, 'active');\n\t     * // => 'barney'\n\t     */\n\t    function findKey(object, predicate) {\n\t      return baseFind(object, getIteratee(predicate, 3), baseForOwn, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findKey` except that it iterates over elements of\n\t     * a collection in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findLastKey(users, function(o) { return o.age < 40; });\n\t     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastKey(users, { 'age': 36, 'active': true });\n\t     * // => 'barney'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastKey(users, 'active');\n\t     * // => 'pebbles'\n\t     */\n\t    function findLastKey(object, predicate) {\n\t      return baseFind(object, getIteratee(predicate, 3), baseForOwnRight, true);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own and inherited enumerable properties of an object invoking\n\t     * `iteratee` for each property. The iteratee is invoked with three arguments:\n\t     * (value, key, object). Iteratee functions may exit iteration early by explicitly\n\t     * returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forIn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a', 'b', then 'c' (iteration order is not guaranteed)\n\t     */\n\t    function forIn(object, iteratee) {\n\t      return object == null ? object : baseFor(object, toFunction(iteratee), keysIn);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forIn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forInRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'\n\t     */\n\t    function forInRight(object, iteratee) {\n\t      return object == null ? object : baseForRight(object, toFunction(iteratee), keysIn);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own enumerable properties of an object invoking `iteratee`\n\t     * for each property. The iteratee is invoked with three arguments:\n\t     * (value, key, object). Iteratee functions may exit iteration early by\n\t     * explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a' then 'b' (iteration order is not guaranteed)\n\t     */\n\t    function forOwn(object, iteratee) {\n\t      return object && baseForOwn(object, toFunction(iteratee));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forOwn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwnRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'\n\t     */\n\t    function forOwnRight(object, iteratee) {\n\t      return object && baseForOwnRight(object, toFunction(iteratee));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own enumerable properties\n\t     * of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the new array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functions(new Foo);\n\t     * // => ['a', 'b']\n\t     */\n\t    function functions(object) {\n\t      return object == null ? [] : baseFunctions(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own and inherited\n\t     * enumerable properties of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the new array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functionsIn(new Foo);\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    function functionsIn(object) {\n\t      return object == null ? [] : baseFunctions(object, keysIn(object));\n\t    }\n\t\n\t    /**\n\t     * Gets the value at `path` of `object`. If the resolved value is\n\t     * `undefined` the `defaultValue` is used in its place.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.get(object, 'a[0].b.c');\n\t     * // => 3\n\t     *\n\t     * _.get(object, ['a', '0', 'b', 'c']);\n\t     * // => 3\n\t     *\n\t     * _.get(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     */\n\t    function get(object, path, defaultValue) {\n\t      var result = object == null ? undefined : baseGet(object, path);\n\t      return result === undefined ? defaultValue : result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct property of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': { 'b': { 'c': 3 } } };\n\t     * var other = _.create({ 'a': _.create({ 'b': _.create({ 'c': 3 }) }) });\n\t     *\n\t     * _.has(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.has(object, 'a.b.c');\n\t     * // => true\n\t     *\n\t     * _.has(object, ['a', 'b', 'c']);\n\t     * // => true\n\t     *\n\t     * _.has(other, 'a');\n\t     * // => false\n\t     */\n\t    function has(object, path) {\n\t      return hasPath(object, path, baseHas);\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct or inherited property of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = _.create({ 'a': _.create({ 'b': _.create({ 'c': 3 }) }) });\n\t     *\n\t     * _.hasIn(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'a.b.c');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, ['a', 'b', 'c']);\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'b');\n\t     * // => false\n\t     */\n\t    function hasIn(object, path) {\n\t      return hasPath(object, path, baseHasIn);\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the inverted keys and values of `object`.\n\t     * If `object` contains duplicate values, subsequent values overwrite property\n\t     * assignments of previous values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invert(object);\n\t     * // => { '1': 'c', '2': 'b' }\n\t     */\n\t    var invert = createInverter(function(result, value, key) {\n\t      result[value] = key;\n\t    }, constant(identity));\n\t\n\t    /**\n\t     * This method is like `_.invert` except that the inverted object is generated\n\t     * from the results of running each element of `object` through `iteratee`.\n\t     * The corresponding inverted value of each inverted key is an array of keys\n\t     * responsible for generating the inverted value. The iteratee is invoked\n\t     * with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invertBy(object);\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     *\n\t     * _.invertBy(object, function(value) {\n\t     *   return 'group' + value;\n\t     * });\n\t     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n\t     */\n\t    var invertBy = createInverter(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, value)) {\n\t        result[value].push(key);\n\t      } else {\n\t        result[value] = [key];\n\t      }\n\t    }, getIteratee);\n\t\n\t    /**\n\t     * Invokes the method at `path` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n\t     *\n\t     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n\t     * // => [2, 3]\n\t     */\n\t    var invoke = rest(baseInvoke);\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects. See the\n\t     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keys(new Foo);\n\t     * // => ['a', 'b'] (iteration order is not guaranteed)\n\t     *\n\t     * _.keys('hi');\n\t     * // => ['0', '1']\n\t     */\n\t    function keys(object) {\n\t      var isProto = isPrototype(object);\n\t      if (!(isProto || isArrayLike(object))) {\n\t        return baseKeys(object);\n\t      }\n\t      var indexes = indexKeys(object),\n\t          skipIndexes = !!indexes,\n\t          result = indexes || [],\n\t          length = result.length;\n\t\n\t      for (var key in object) {\n\t        if (baseHas(object, key) &&\n\t            !(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n\t            !(isProto && key == 'constructor')) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keysIn(new Foo);\n\t     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\t     */\n\t    function keysIn(object) {\n\t      var index = -1,\n\t          isProto = isPrototype(object),\n\t          props = baseKeysIn(object),\n\t          propsLength = props.length,\n\t          indexes = indexKeys(object),\n\t          skipIndexes = !!indexes,\n\t          result = indexes || [],\n\t          length = result.length;\n\t\n\t      while (++index < propsLength) {\n\t        var key = props[index];\n\t        if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n\t            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.mapValues`; this method creates an object with the\n\t     * same values as `object` and keys generated by running each own enumerable\n\t     * property of `object` through `iteratee`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @example\n\t     *\n\t     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   return key + value;\n\t     * });\n\t     * // => { 'a1': 1, 'b2': 2 }\n\t     */\n\t    function mapKeys(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        result[iteratee(value, key, object)] = value;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an object with the same keys as `object` and values generated by\n\t     * running each own enumerable property of `object` through `iteratee`. The\n\t     * iteratee function is invoked with three arguments: (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'fred':    { 'user': 'fred',    'age': 40 },\n\t     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n\t     * };\n\t     *\n\t     * _.mapValues(users, function(o) { return o.age; });\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.mapValues(users, 'age');\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     */\n\t    function mapValues(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        result[key] = iteratee(value, key, object);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Recursively merges own and inherited enumerable properties of source\n\t     * objects into the destination object, skipping source properties that resolve\n\t     * to `undefined`. Array and plain object properties are merged recursively.\n\t     * Other objects and value types are overridden by assignment. Source objects\n\t     * are applied from left to right. Subsequent sources overwrite property\n\t     * assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n\t     * };\n\t     *\n\t     * var ages = {\n\t     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n\t     * };\n\t     *\n\t     * _.merge(users, ages);\n\t     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n\t     */\n\t    var merge = createAssigner(function(object, source, srcIndex) {\n\t      baseMerge(object, source, srcIndex);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.merge` except that it accepts `customizer` which\n\t     * is invoked to produce the merged values of the destination and source\n\t     * properties. If `customizer` returns `undefined` merging is handled by the\n\t     * method instead. The `customizer` is invoked with seven arguments:\n\t     * (objValue, srcValue, key, object, source, stack).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} customizer The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (_.isArray(objValue)) {\n\t     *     return objValue.concat(srcValue);\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = {\n\t     *   'fruits': ['apple'],\n\t     *   'vegetables': ['beet']\n\t     * };\n\t     *\n\t     * var other = {\n\t     *   'fruits': ['banana'],\n\t     *   'vegetables': ['carrot']\n\t     * };\n\t     *\n\t     * _.mergeWith(object, other, customizer);\n\t     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n\t     */\n\t    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      baseMerge(object, source, srcIndex, customizer);\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pick`; this method creates an object composed of the\n\t     * own and inherited enumerable properties of `object` that are not omitted.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [props] The property names to omit, specified\n\t     *  individually or in arrays..\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omit(object, ['a', 'c']);\n\t     * // => { 'b': '2' }\n\t     */\n\t    var omit = rest(function(object, props) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      props = arrayMap(baseFlatten(props), String);\n\t      return basePick(object, baseDifference(keysIn(object), props));\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pickBy`; this method creates an object composed of the\n\t     * own and inherited enumerable properties of `object` that `predicate`\n\t     * doesn't return truthy for.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omitBy(object, _.isNumber);\n\t     * // => { 'b': '2' }\n\t     */\n\t    function omitBy(object, predicate) {\n\t      predicate = getIteratee(predicate, 2);\n\t      return basePickBy(object, function(value, key) {\n\t        return !predicate(value, key);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the picked `object` properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [props] The property names to pick, specified\n\t     *  individually or in arrays.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pick(object, ['a', 'c']);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    var pick = rest(function(object, props) {\n\t      return object == null ? {} : basePick(object, baseFlatten(props));\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of the `object` properties `predicate` returns\n\t     * truthy for. The predicate is invoked with two arguments: (value, key).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pickBy(object, _.isNumber);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    function pickBy(object, predicate) {\n\t      return object == null ? {} : basePickBy(object, getIteratee(predicate, 2));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.get` except that if the resolved value is a function\n\t     * it's invoked with the `this` binding of its parent object and its result\n\t     * is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to resolve.\n\t     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n\t     *\n\t     * _.result(object, 'a[0].b.c1');\n\t     * // => 3\n\t     *\n\t     * _.result(object, 'a[0].b.c2');\n\t     * // => 4\n\t     *\n\t     * _.result(object, 'a[0].b.c3', 'default');\n\t     * // => 'default'\n\t     *\n\t     * _.result(object, 'a[0].b.c3', _.constant('default'));\n\t     * // => 'default'\n\t     */\n\t    function result(object, path, defaultValue) {\n\t      if (!isKey(path, object)) {\n\t        path = baseToPath(path);\n\t        var result = get(object, path);\n\t        object = parent(object, path);\n\t      } else {\n\t        result = object == null ? undefined : object[path];\n\t      }\n\t      if (result === undefined) {\n\t        result = defaultValue;\n\t      }\n\t      return isFunction(result) ? result.call(object) : result;\n\t    }\n\t\n\t    /**\n\t     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist\n\t     * it's created. Arrays are created for missing index properties while objects\n\t     * are created for all other missing properties. Use `_.setWith` to customize\n\t     * `path` creation.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.set(object, 'a[0].b.c', 4);\n\t     * console.log(object.a[0].b.c);\n\t     * // => 4\n\t     *\n\t     * _.set(object, 'x[0].y.z', 5);\n\t     * console.log(object.x[0].y.z);\n\t     * // => 5\n\t     */\n\t    function set(object, path, value) {\n\t      return object == null ? object : baseSet(object, path, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.set` except that it accepts `customizer` which is\n\t     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n\t     * path creation is handled by the method instead. The `customizer` is invoked\n\t     * with three arguments: (nsValue, key, nsObject).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.setWith({ '0': { 'length': 2 } }, '[0][1][2]', 3, Object);\n\t     * // => { '0': { '1': { '2': 3 }, 'length': 2 } }\n\t     */\n\t    function setWith(object, path, value, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return object == null ? object : baseSet(object, path, value, customizer);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own enumerable key-value pairs for `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the new array of key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairs(new Foo);\n\t     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n\t     */\n\t    function toPairs(object) {\n\t      return baseToPairs(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own and inherited enumerable key-value pairs for `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the new array of key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairsIn(new Foo);\n\t     * // => [['a', 1], ['b', 2], ['c', 1]] (iteration order is not guaranteed)\n\t     */\n\t    function toPairsIn(object) {\n\t      return baseToPairs(object, keysIn(object));\n\t    }\n\t\n\t    /**\n\t     * An alternative to `_.reduce`; this method transforms `object` to a new\n\t     * `accumulator` object which is the result of running each of its own enumerable\n\t     * properties through `iteratee`, with each invocation potentially mutating\n\t     * the `accumulator` object. The iteratee is invoked with four arguments:\n\t     * (accumulator, value, key, object). Iteratee functions may exit iteration\n\t     * early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Array|Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The custom accumulator value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.transform([2, 3, 4], function(result, n) {\n\t     *   result.push(n *= n);\n\t     *   return n % 2 == 0;\n\t     * }, []);\n\t     * // => [4, 9]\n\t     *\n\t     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     */\n\t    function transform(object, iteratee, accumulator) {\n\t      var isArr = isArray(object) || isTypedArray(object);\n\t      iteratee = getIteratee(iteratee, 4);\n\t\n\t      if (accumulator == null) {\n\t        if (isArr || isObject(object)) {\n\t          var Ctor = object.constructor;\n\t          if (isArr) {\n\t            accumulator = isArray(object) ? new Ctor : [];\n\t          } else {\n\t            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n\t          }\n\t        } else {\n\t          accumulator = {};\n\t        }\n\t      }\n\t      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n\t        return iteratee(accumulator, value, index, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * Removes the property at `path` of `object`.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n\t     * _.unset(object, 'a[0].b.c');\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     *\n\t     * _.unset(object, 'a[0].b.c');\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     */\n\t    function unset(object, path) {\n\t      return object == null ? true : baseUnset(object, path);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.values(new Foo);\n\t     * // => [1, 2] (iteration order is not guaranteed)\n\t     *\n\t     * _.values('hi');\n\t     * // => ['h', 'i']\n\t     */\n\t    function values(object) {\n\t      return object ? baseValues(object, keys(object)) : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.valuesIn(new Foo);\n\t     * // => [1, 2, 3] (iteration order is not guaranteed)\n\t     */\n\t    function valuesIn(object) {\n\t      return object == null ? baseValues(object, keysIn(object)) : [];\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     * @example\n\t     *\n\t     * _.clamp(-10, -5, 5);\n\t     * // => -5\n\t     *\n\t     * _.clamp(10, -5, 5);\n\t     * // => 5\n\t     */\n\t    function clamp(number, lower, upper) {\n\t      if (upper === undefined) {\n\t        upper = lower;\n\t        lower = undefined;\n\t      }\n\t      if (upper !== undefined) {\n\t        upper = toNumber(upper);\n\t        upper = upper === upper ? upper : 0;\n\t      }\n\t      if (lower !== undefined) {\n\t        lower = toNumber(lower);\n\t        lower = lower === lower ? lower : 0;\n\t      }\n\t      return baseClamp(toNumber(number), lower, upper);\n\t    }\n\t\n\t    /**\n\t     * Checks if `n` is between `start` and up to but not including, `end`. If\n\t     * `end` is not specified it's set to `start` with `start` then set to `0`.\n\t     * If `start` is greater than `end` the params are swapped to support\n\t     * negative ranges.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} number The number to check.\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     * @example\n\t     *\n\t     * _.inRange(3, 2, 4);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 8);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(2, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(1.2, 2);\n\t     * // => true\n\t     *\n\t     * _.inRange(5.2, 4);\n\t     * // => false\n\t     *\n\t     * _.inRange(-3, -2, -6);\n\t     * // => true\n\t     */\n\t    function inRange(number, start, end) {\n\t      start = toNumber(start) || 0;\n\t      if (end === undefined) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = toNumber(end) || 0;\n\t      }\n\t      number = toNumber(number);\n\t      return baseInRange(number, start, end);\n\t    }\n\t\n\t    /**\n\t     * Produces a random number between the inclusive `lower` and `upper` bounds.\n\t     * If only one argument is provided a number between `0` and the given number\n\t     * is returned. If `floating` is `true`, or either `lower` or `upper` are floats,\n\t     * a floating-point number is returned instead of an integer.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} [lower=0] The lower bound.\n\t     * @param {number} [upper=1] The upper bound.\n\t     * @param {boolean} [floating] Specify returning a floating-point number.\n\t     * @returns {number} Returns the random number.\n\t     * @example\n\t     *\n\t     * _.random(0, 5);\n\t     * // => an integer between 0 and 5\n\t     *\n\t     * _.random(5);\n\t     * // => also an integer between 0 and 5\n\t     *\n\t     * _.random(5, true);\n\t     * // => a floating-point number between 0 and 5\n\t     *\n\t     * _.random(1.2, 5.2);\n\t     * // => a floating-point number between 1.2 and 5.2\n\t     */\n\t    function random(lower, upper, floating) {\n\t      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n\t        upper = floating = undefined;\n\t      }\n\t      if (floating === undefined) {\n\t        if (typeof upper == 'boolean') {\n\t          floating = upper;\n\t          upper = undefined;\n\t        }\n\t        else if (typeof lower == 'boolean') {\n\t          floating = lower;\n\t          lower = undefined;\n\t        }\n\t      }\n\t      if (lower === undefined && upper === undefined) {\n\t        lower = 0;\n\t        upper = 1;\n\t      }\n\t      else {\n\t        lower = toNumber(lower) || 0;\n\t        if (upper === undefined) {\n\t          upper = lower;\n\t          lower = 0;\n\t        } else {\n\t          upper = toNumber(upper) || 0;\n\t        }\n\t      }\n\t      if (lower > upper) {\n\t        var temp = lower;\n\t        lower = upper;\n\t        upper = temp;\n\t      }\n\t      if (floating || lower % 1 || upper % 1) {\n\t        var rand = nativeRandom();\n\t        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n\t      }\n\t      return baseRandom(lower, upper);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the camel cased string.\n\t     * @example\n\t     *\n\t     * _.camelCase('Foo Bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('--foo-bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('__foo_bar__');\n\t     * // => 'fooBar'\n\t     */\n\t    var camelCase = createCompounder(function(result, word, index) {\n\t      word = word.toLowerCase();\n\t      return result + (index ? capitalize(word) : word);\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case and the remaining\n\t     * to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to capitalize.\n\t     * @returns {string} Returns the capitalized string.\n\t     * @example\n\t     *\n\t     * _.capitalize('FRED');\n\t     * // => 'Fred'\n\t     */\n\t    function capitalize(string) {\n\t      return upperFirst(toString(string).toLowerCase());\n\t    }\n\t\n\t    /**\n\t     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n\t     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to deburr.\n\t     * @returns {string} Returns the deburred string.\n\t     * @example\n\t     *\n\t     * _.deburr('déjà vu');\n\t     * // => 'deja vu'\n\t     */\n\t    function deburr(string) {\n\t      string = toString(string);\n\t      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n\t    }\n\t\n\t    /**\n\t     * Checks if `string` ends with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=string.length] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n\t     * @example\n\t     *\n\t     * _.endsWith('abc', 'c');\n\t     * // => true\n\t     *\n\t     * _.endsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.endsWith('abc', 'b', 2);\n\t     * // => true\n\t     */\n\t    function endsWith(string, target, position) {\n\t      string = toString(string);\n\t      target = typeof target == 'string' ? target : (target + '');\n\t\n\t      var length = string.length;\n\t      position = position === undefined\n\t        ? length\n\t        : baseClamp(toInteger(position), 0, length);\n\t\n\t      position -= target.length;\n\t      return position >= 0 && string.indexOf(target, position) == position;\n\t    }\n\t\n\t    /**\n\t     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\" in `string` to\n\t     * their corresponding HTML entities.\n\t     *\n\t     * **Note:** No other characters are escaped. To escape additional\n\t     * characters use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * Though the \">\" character is escaped for symmetry, characters like\n\t     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n\t     * unless they're part of a tag or unquoted attribute value.\n\t     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n\t     * (under \"semi-related fun fact\") for more details.\n\t     *\n\t     * Backticks are escaped because in IE < 9, they can break out of\n\t     * attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n\t     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n\t     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n\t     * for more details.\n\t     *\n\t     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n\t     * to reduce XSS vectors.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escape('fred, barney, & pebbles');\n\t     * // => 'fred, barney, &amp; pebbles'\n\t     */\n\t    function escape(string) {\n\t      string = toString(string);\n\t      return (string && reHasUnescapedHtml.test(string))\n\t        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n\t     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escapeRegExp('[lodash](https://lodash.com/)');\n\t     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n\t     */\n\t    function escapeRegExp(string) {\n\t      string = toString(string);\n\t      return (string && reHasRegExpChar.test(string))\n\t        ? string.replace(reRegExpChar, '\\\\$&')\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the kebab cased string.\n\t     * @example\n\t     *\n\t     * _.kebabCase('Foo Bar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('fooBar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('__foo_bar__');\n\t     * // => 'foo-bar'\n\t     */\n\t    var kebabCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '-' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.lowerCase('--Foo-Bar');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('fooBar');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('__FOO_BAR__');\n\t     * // => 'foo bar'\n\t     */\n\t    var lowerCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.lowerFirst('Fred');\n\t     * // => 'fred'\n\t     *\n\t     * _.lowerFirst('FRED');\n\t     * // => 'fRED'\n\t     */\n\t    var lowerFirst = createCaseFirst('toLowerCase');\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.upperFirst('fred');\n\t     * // => 'Fred'\n\t     *\n\t     * _.upperFirst('FRED');\n\t     * // => 'FRED'\n\t     */\n\t    var upperFirst = createCaseFirst('toUpperCase');\n\t\n\t    /**\n\t     * Pads `string` on the left and right sides if it's shorter than `length`.\n\t     * Padding characters are truncated if they can't be evenly divided by `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.pad('abc', 8);\n\t     * // => '  abc   '\n\t     *\n\t     * _.pad('abc', 8, '_-');\n\t     * // => '_-abc_-_'\n\t     *\n\t     * _.pad('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function pad(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = stringSize(string);\n\t      if (!length || strLength >= length) {\n\t        return string;\n\t      }\n\t      var mid = (length - strLength) / 2,\n\t          leftLength = nativeFloor(mid),\n\t          rightLength = nativeCeil(mid);\n\t\n\t      return createPadding('', leftLength, chars) + string + createPadding('', rightLength, chars);\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the right side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padEnd('abc', 6);\n\t     * // => 'abc   '\n\t     *\n\t     * _.padEnd('abc', 6, '_-');\n\t     * // => 'abc_-_'\n\t     *\n\t     * _.padEnd('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padEnd(string, length, chars) {\n\t      string = toString(string);\n\t      return string + createPadding(string, length, chars);\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the left side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padStart('abc', 6);\n\t     * // => '   abc'\n\t     *\n\t     * _.padStart('abc', 6, '_-');\n\t     * // => '_-_abc'\n\t     *\n\t     * _.padStart('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padStart(string, length, chars) {\n\t      string = toString(string);\n\t      return createPadding(string, length, chars) + string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to an integer of the specified radix. If `radix` is\n\t     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n\t     * in which case a `radix` of `16` is used.\n\t     *\n\t     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#x15.1.2.2)\n\t     * of `parseInt`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} string The string to convert.\n\t     * @param {number} [radix] The radix to interpret `value` by.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.parseInt('08');\n\t     * // => 8\n\t     *\n\t     * _.map(['6', '08', '10'], _.parseInt);\n\t     * // => [6, 8, 10]\n\t     */\n\t    function parseInt(string, radix, guard) {\n\t      // Chrome fails to trim leading <BOM> whitespace characters.\n\t      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n\t      if (guard || radix == null) {\n\t        radix = 0;\n\t      } else if (radix) {\n\t        radix = +radix;\n\t      }\n\t      string = toString(string).replace(reTrim, '');\n\t      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n\t    }\n\t\n\t    /**\n\t     * Repeats the given string `n` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to repeat.\n\t     * @param {number} [n=0] The number of times to repeat the string.\n\t     * @returns {string} Returns the repeated string.\n\t     * @example\n\t     *\n\t     * _.repeat('*', 3);\n\t     * // => '***'\n\t     *\n\t     * _.repeat('abc', 2);\n\t     * // => 'abcabc'\n\t     *\n\t     * _.repeat('abc', 0);\n\t     * // => ''\n\t     */\n\t    function repeat(string, n) {\n\t      string = toString(string);\n\t      n = toInteger(n);\n\t\n\t      var result = '';\n\t      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return result;\n\t      }\n\t      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n\t      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n\t      do {\n\t        if (n % 2) {\n\t          result += string;\n\t        }\n\t        n = nativeFloor(n / 2);\n\t        string += string;\n\t      } while (n);\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Replaces matches for `pattern` in `string` with `replacement`.\n\t     *\n\t     * **Note:** This method is based on [`String#replace`](https://mdn.io/String/replace).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to modify.\n\t     * @param {RegExp|string} pattern The pattern to replace.\n\t     * @param {Function|string} replacement The match replacement.\n\t     * @returns {string} Returns the modified string.\n\t     * @example\n\t     *\n\t     * _.replace('Hi Fred', 'Fred', 'Barney');\n\t     * // => 'Hi Barney'\n\t     */\n\t    function replace() {\n\t      var args = arguments,\n\t          string = toString(args[0]);\n\t\n\t      return args.length < 3 ? string : string.replace(args[1], args[2]);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the snake cased string.\n\t     * @example\n\t     *\n\t     * _.snakeCase('Foo Bar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('fooBar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('--foo-bar');\n\t     * // => 'foo_bar'\n\t     */\n\t    var snakeCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '_' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Splits `string` by `separator`.\n\t     *\n\t     * **Note:** This method is based on [`String#split`](https://mdn.io/String/split).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to split.\n\t     * @param {RegExp|string} separator The separator pattern to split by.\n\t     * @param {number} [limit] The length to truncate results to.\n\t     * @returns {Array} Returns the new array of string segments.\n\t     * @example\n\t     *\n\t     * _.split('a-b-c', '-', 2);\n\t     * // => ['a', 'b']\n\t     */\n\t    function split(string, separator, limit) {\n\t      return toString(string).split(separator, limit);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the start cased string.\n\t     * @example\n\t     *\n\t     * _.startCase('--foo-bar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('fooBar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('__foo_bar__');\n\t     * // => 'Foo Bar'\n\t     */\n\t    var startCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + capitalize(word);\n\t    });\n\t\n\t    /**\n\t     * Checks if `string` starts with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=0] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n\t     * @example\n\t     *\n\t     * _.startsWith('abc', 'a');\n\t     * // => true\n\t     *\n\t     * _.startsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.startsWith('abc', 'b', 1);\n\t     * // => true\n\t     */\n\t    function startsWith(string, target, position) {\n\t      string = toString(string);\n\t      position = baseClamp(toInteger(position), 0, string.length);\n\t      return string.lastIndexOf(target, position) == position;\n\t    }\n\t\n\t    /**\n\t     * Creates a compiled template function that can interpolate data properties\n\t     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n\t     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n\t     * properties may be accessed as free variables in the template. If a setting\n\t     * object is given it takes precedence over `_.templateSettings` values.\n\t     *\n\t     * **Note:** In the development build `_.template` utilizes\n\t     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n\t     * for easier debugging.\n\t     *\n\t     * For more information on precompiling templates see\n\t     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n\t     *\n\t     * For more information on Chrome extension sandboxes see\n\t     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The template string.\n\t     * @param {Object} [options] The options object.\n\t     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n\t     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n\t     * @param {Object} [options.imports] An object to import into the template as free variables.\n\t     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n\t     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n\t     * @param {string} [options.variable] The data object variable name.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Function} Returns the compiled template function.\n\t     * @example\n\t     *\n\t     * // Use the \"interpolate\" delimiter to create a compiled template.\n\t     * var compiled = _.template('hello <%= user %>!');\n\t     * compiled({ 'user': 'fred' });\n\t     * // => 'hello fred!'\n\t     *\n\t     * // Use the HTML \"escape\" delimiter to escape data property values.\n\t     * var compiled = _.template('<b><%- value %></b>');\n\t     * compiled({ 'value': '<script>' });\n\t     * // => '<b>&lt;script&gt;</b>'\n\t     *\n\t     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n\t     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the internal `print` function in \"evaluate\" delimiters.\n\t     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n\t     * compiled({ 'user': 'barney' });\n\t     * // => 'hello barney!'\n\t     *\n\t     * // Use the ES delimiter as an alternative to the default \"interpolate\" delimiter.\n\t     * var compiled = _.template('hello ${ user }!');\n\t     * compiled({ 'user': 'pebbles' });\n\t     * // => 'hello pebbles!'\n\t     *\n\t     * // Use custom template delimiters.\n\t     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n\t     * var compiled = _.template('hello {{ user }}!');\n\t     * compiled({ 'user': 'mustache' });\n\t     * // => 'hello mustache!'\n\t     *\n\t     * // Use backslashes to treat delimiters as plain text.\n\t     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n\t     * compiled({ 'value': 'ignored' });\n\t     * // => '<%- value %>'\n\t     *\n\t     * // Use the `imports` option to import `jQuery` as `jq`.\n\t     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n\t     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n\t     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n\t     * compiled(data);\n\t     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n\t     *\n\t     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n\t     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n\t     * compiled.source;\n\t     * // => function(data) {\n\t     * //   var __t, __p = '';\n\t     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n\t     * //   return __p;\n\t     * // }\n\t     *\n\t     * // Use the `source` property to inline compiled templates for meaningful\n\t     * // line numbers in error messages and stack traces.\n\t     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n\t     *   var JST = {\\\n\t     *     \"main\": ' + _.template(mainText).source + '\\\n\t     *   };\\\n\t     * ');\n\t     */\n\t    function template(string, options, guard) {\n\t      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n\t      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n\t      var settings = lodash.templateSettings;\n\t\n\t      if (guard && isIterateeCall(string, options, guard)) {\n\t        options = undefined;\n\t      }\n\t      string = toString(string);\n\t      options = assignInWith({}, options, settings, assignInDefaults);\n\t\n\t      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n\t          importsKeys = keys(imports),\n\t          importsValues = baseValues(imports, importsKeys);\n\t\n\t      var isEscaping,\n\t          isEvaluating,\n\t          index = 0,\n\t          interpolate = options.interpolate || reNoMatch,\n\t          source = \"__p += '\";\n\t\n\t      // Compile the regexp to match each delimiter.\n\t      var reDelimiters = RegExp(\n\t        (options.escape || reNoMatch).source + '|' +\n\t        interpolate.source + '|' +\n\t        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n\t        (options.evaluate || reNoMatch).source + '|$'\n\t      , 'g');\n\t\n\t      // Use a sourceURL for easier debugging.\n\t      var sourceURL = '//# sourceURL=' +\n\t        ('sourceURL' in options\n\t          ? options.sourceURL\n\t          : ('lodash.templateSources[' + (++templateCounter) + ']')\n\t        ) + '\\n';\n\t\n\t      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n\t        interpolateValue || (interpolateValue = esTemplateValue);\n\t\n\t        // Escape characters that can't be included in string literals.\n\t        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\t\n\t        // Replace delimiters with snippets.\n\t        if (escapeValue) {\n\t          isEscaping = true;\n\t          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n\t        }\n\t        if (evaluateValue) {\n\t          isEvaluating = true;\n\t          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n\t        }\n\t        if (interpolateValue) {\n\t          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n\t        }\n\t        index = offset + match.length;\n\t\n\t        // The JS engine embedded in Adobe products needs `match` returned in\n\t        // order to produce the correct `offset` value.\n\t        return match;\n\t      });\n\t\n\t      source += \"';\\n\";\n\t\n\t      // If `variable` is not specified wrap a with-statement around the generated\n\t      // code to add the data object to the top of the scope chain.\n\t      var variable = options.variable;\n\t      if (!variable) {\n\t        source = 'with (obj) {\\n' + source + '\\n}\\n';\n\t      }\n\t      // Cleanup code by stripping empty strings.\n\t      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n\t        .replace(reEmptyStringMiddle, '$1')\n\t        .replace(reEmptyStringTrailing, '$1;');\n\t\n\t      // Frame code as the function body.\n\t      source = 'function(' + (variable || 'obj') + ') {\\n' +\n\t        (variable\n\t          ? ''\n\t          : 'obj || (obj = {});\\n'\n\t        ) +\n\t        \"var __t, __p = ''\" +\n\t        (isEscaping\n\t           ? ', __e = _.escape'\n\t           : ''\n\t        ) +\n\t        (isEvaluating\n\t          ? ', __j = Array.prototype.join;\\n' +\n\t            \"function print() { __p += __j.call(arguments, '') }\\n\"\n\t          : ';\\n'\n\t        ) +\n\t        source +\n\t        'return __p\\n}';\n\t\n\t      var result = attempt(function() {\n\t        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n\t      });\n\t\n\t      // Provide the compiled function's source by its `toString` method or\n\t      // the `source` property as a convenience for inlining compiled templates.\n\t      result.source = source;\n\t      if (isError(result)) {\n\t        throw result;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.toLower('--Foo-Bar');\n\t     * // => '--foo-bar'\n\t     *\n\t     * _.toLower('fooBar');\n\t     * // => 'foobar'\n\t     *\n\t     * _.toLower('__FOO_BAR__');\n\t     * // => '__foo_bar__'\n\t     */\n\t    function toLower(value) {\n\t      return toString(value).toLowerCase();\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.toUpper('--foo-bar');\n\t     * // => '--FOO-BAR'\n\t     *\n\t     * _.toUpper('fooBar');\n\t     * // => 'FOOBAR'\n\t     *\n\t     * _.toUpper('__foo_bar__');\n\t     * // => '__FOO_BAR__'\n\t     */\n\t    function toUpper(value) {\n\t      return toString(value).toUpperCase();\n\t    }\n\t\n\t    /**\n\t     * Removes leading and trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trim('  abc  ');\n\t     * // => 'abc'\n\t     *\n\t     * _.trim('-_-abc-_-', '_-');\n\t     * // => 'abc'\n\t     *\n\t     * _.map(['  foo  ', '  bar  '], _.trim);\n\t     * // => ['foo', 'bar']\n\t     */\n\t    function trim(string, chars, guard) {\n\t      string = toString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard || chars === undefined) {\n\t        return string.replace(reTrim, '');\n\t      }\n\t      chars = (chars + '');\n\t      if (!chars) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          chrSymbols = stringToArray(chars);\n\t\n\t      return strSymbols.slice(charsStartIndex(strSymbols, chrSymbols), charsEndIndex(strSymbols, chrSymbols) + 1).join('');\n\t    }\n\t\n\t    /**\n\t     * Removes trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimEnd('  abc  ');\n\t     * // => '  abc'\n\t     *\n\t     * _.trimEnd('-_-abc-_-', '_-');\n\t     * // => '-_-abc'\n\t     */\n\t    function trimEnd(string, chars, guard) {\n\t      string = toString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard || chars === undefined) {\n\t        return string.replace(reTrimEnd, '');\n\t      }\n\t      chars = (chars + '');\n\t      if (!chars) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string);\n\t      return strSymbols.slice(0, charsEndIndex(strSymbols, stringToArray(chars)) + 1).join('');\n\t    }\n\t\n\t    /**\n\t     * Removes leading whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimStart('  abc  ');\n\t     * // => 'abc  '\n\t     *\n\t     * _.trimStart('-_-abc-_-', '_-');\n\t     * // => 'abc-_-'\n\t     */\n\t    function trimStart(string, chars, guard) {\n\t      string = toString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard || chars === undefined) {\n\t        return string.replace(reTrimStart, '');\n\t      }\n\t      chars = (chars + '');\n\t      if (!chars) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string);\n\t      return strSymbols.slice(charsStartIndex(strSymbols, stringToArray(chars))).join('');\n\t    }\n\t\n\t    /**\n\t     * Truncates `string` if it's longer than the given maximum string length.\n\t     * The last characters of the truncated string are replaced with the omission\n\t     * string which defaults to \"...\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to truncate.\n\t     * @param {Object} [options] The options object.\n\t     * @param {number} [options.length=30] The maximum string length.\n\t     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n\t     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n\t     * @returns {string} Returns the truncated string.\n\t     * @example\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino');\n\t     * // => 'hi-diddly-ho there, neighbo...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': ' '\n\t     * });\n\t     * // => 'hi-diddly-ho there,...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': /,? +/\n\t     * });\n\t     * // => 'hi-diddly-ho there...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'omission': ' [...]'\n\t     * });\n\t     * // => 'hi-diddly-ho there, neig [...]'\n\t     */\n\t    function truncate(string, options) {\n\t      var length = DEFAULT_TRUNC_LENGTH,\n\t          omission = DEFAULT_TRUNC_OMISSION;\n\t\n\t      if (isObject(options)) {\n\t        var separator = 'separator' in options ? options.separator : separator;\n\t        length = 'length' in options ? toInteger(options.length) : length;\n\t        omission = 'omission' in options ? toString(options.omission) : omission;\n\t      }\n\t      string = toString(string);\n\t\n\t      var strLength = string.length;\n\t      if (reHasComplexSymbol.test(string)) {\n\t        var strSymbols = stringToArray(string);\n\t        strLength = strSymbols.length;\n\t      }\n\t      if (length >= strLength) {\n\t        return string;\n\t      }\n\t      var end = length - stringSize(omission);\n\t      if (end < 1) {\n\t        return omission;\n\t      }\n\t      var result = strSymbols\n\t        ? strSymbols.slice(0, end).join('')\n\t        : string.slice(0, end);\n\t\n\t      if (separator === undefined) {\n\t        return result + omission;\n\t      }\n\t      if (strSymbols) {\n\t        end += (result.length - end);\n\t      }\n\t      if (isRegExp(separator)) {\n\t        if (string.slice(end).search(separator)) {\n\t          var match,\n\t              substring = result;\n\t\n\t          if (!separator.global) {\n\t            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n\t          }\n\t          separator.lastIndex = 0;\n\t          while ((match = separator.exec(substring))) {\n\t            var newEnd = match.index;\n\t          }\n\t          result = result.slice(0, newEnd === undefined ? end : newEnd);\n\t        }\n\t      } else if (string.indexOf(separator, end) != end) {\n\t        var index = result.lastIndexOf(separator);\n\t        if (index > -1) {\n\t          result = result.slice(0, index);\n\t        }\n\t      }\n\t      return result + omission;\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.escape`; this method converts the HTML entities\n\t     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n\t     * corresponding characters.\n\t     *\n\t     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n\t     * entities use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to unescape.\n\t     * @returns {string} Returns the unescaped string.\n\t     * @example\n\t     *\n\t     * _.unescape('fred, barney, &amp; pebbles');\n\t     * // => 'fred, barney, & pebbles'\n\t     */\n\t    function unescape(string) {\n\t      string = toString(string);\n\t      return (string && reHasEscapedHtml.test(string))\n\t        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.upperCase('--foo-bar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('fooBar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('__foo_bar__');\n\t     * // => 'FOO BAR'\n\t     */\n\t    var upperCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toUpperCase();\n\t    });\n\t\n\t    /**\n\t     * Splits `string` into an array of its words.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {RegExp|string} [pattern] The pattern to match words.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Array} Returns the words of `string`.\n\t     * @example\n\t     *\n\t     * _.words('fred, barney, & pebbles');\n\t     * // => ['fred', 'barney', 'pebbles']\n\t     *\n\t     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n\t     * // => ['fred', 'barney', '&', 'pebbles']\n\t     */\n\t    function words(string, pattern, guard) {\n\t      string = toString(string);\n\t      pattern = guard ? undefined : pattern;\n\t\n\t      if (pattern === undefined) {\n\t        pattern = reHasComplexWord.test(string) ? reComplexWord : reBasicWord;\n\t      }\n\t      return string.match(pattern) || [];\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Attempts to invoke `func`, returning either the result or the caught error\n\t     * object. Any additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Function} func The function to attempt.\n\t     * @returns {*} Returns the `func` result or error object.\n\t     * @example\n\t     *\n\t     * // Avoid throwing errors for invalid selectors.\n\t     * var elements = _.attempt(function(selector) {\n\t     *   return document.querySelectorAll(selector);\n\t     * }, '>_>');\n\t     *\n\t     * if (_.isError(elements)) {\n\t     *   elements = [];\n\t     * }\n\t     */\n\t    var attempt = rest(function(func, args) {\n\t      try {\n\t        return apply(func, undefined, args);\n\t      } catch (e) {\n\t        return isObject(e) ? e : new Error(e);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Binds methods of an object to the object itself, overwriting the existing\n\t     * method.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} object The object to bind and assign the bound methods to.\n\t     * @param {...(string|string[])} methodNames The object method names to bind,\n\t     *  specified individually or in arrays.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var view = {\n\t     *   'label': 'docs',\n\t     *   'onClick': function() {\n\t     *     console.log('clicked ' + this.label);\n\t     *   }\n\t     * };\n\t     *\n\t     * _.bindAll(view, 'onClick');\n\t     * jQuery(element).on('click', view.onClick);\n\t     * // => logs 'clicked docs' when clicked\n\t     */\n\t    var bindAll = rest(function(object, methodNames) {\n\t      arrayEach(baseFlatten(methodNames), function(key) {\n\t        object[key] = bind(object[key], object);\n\t      });\n\t      return object;\n\t    });\n\t\n\t    /**\n\t     * Creates a function that iterates over `pairs` invoking the corresponding\n\t     * function of the first predicate to return truthy. The predicate-function\n\t     * pairs are invoked with the `this` binding and arguments of the created\n\t     * function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Array} pairs The predicate-function pairs.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.cond([\n\t     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n\t     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n\t     *   [_.constant(true),                _.constant('no match')]\n\t     * ]);\n\t     *\n\t     * func({ 'a': 1, 'b': 2 });\n\t     * // => 'matches A'\n\t     *\n\t     * func({ 'a': 0, 'b': 1 });\n\t     * // => 'matches B'\n\t     *\n\t     * func({ 'a': '1', 'b': '2' });\n\t     * // => 'no match'\n\t     */\n\t    function cond(pairs) {\n\t      var length = pairs ? pairs.length : 0,\n\t          toIteratee = getIteratee();\n\t\n\t      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n\t        if (typeof pair[1] != 'function') {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t        return [toIteratee(pair[0]), pair[1]];\n\t      });\n\t\n\t      return rest(function(args) {\n\t        var index = -1;\n\t        while (++index < length) {\n\t          var pair = pairs[index];\n\t          if (apply(pair[0], this, args)) {\n\t            return apply(pair[1], this, args);\n\t          }\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the predicate properties of `source` with\n\t     * the corresponding property values of a given object, returning `true` if\n\t     * all predicates return truthy, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.filter(users, _.conforms({ 'age': _.partial(_.gt, _, 38) }));\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     */\n\t    function conforms(source) {\n\t      return baseConforms(baseClone(source, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} value The value to return from the new function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var getter = _.constant(object);\n\t     *\n\t     * getter() === object;\n\t     * // => true\n\t     */\n\t    function constant(value) {\n\t      return function() {\n\t        return value;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns the result of invoking the given functions\n\t     * with the `this` binding of the created function, where each successive\n\t     * invocation is supplied the return value of the previous.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flow(_.add, square);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flow = createFlow();\n\t\n\t    /**\n\t     * This method is like `_.flow` except that it creates a function that\n\t     * invokes the given functions from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flowRight(square, _.add);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flowRight = createFlow(true);\n\t\n\t    /**\n\t     * This method returns the first argument given to it.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} value Any value.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * _.identity(object) === object;\n\t     * // => true\n\t     */\n\t    function identity(value) {\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the arguments of the created\n\t     * function. If `func` is a property name the created callback returns the\n\t     * property value for a given element. If `func` is an object the created\n\t     * callback returns `true` for elements that contain the equivalent object properties, otherwise it returns `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @returns {Function} Returns the callback.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // Create custom iteratee shorthands.\n\t     * _.iteratee = _.wrap(_.iteratee, function(callback, func) {\n\t     *   var p = /^(\\S+)\\s*([<>])\\s*(\\S+)$/.exec(func);\n\t     *   return !p ? callback(func) : function(object) {\n\t     *     return (p[2] == '>' ? object[p[1]] > p[3] : object[p[1]] < p[3]);\n\t     *   };\n\t     * });\n\t     *\n\t     * _.filter(users, 'age > 36');\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     */\n\t    function iteratee(func) {\n\t      return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a deep partial comparison between a given\n\t     * object and `source`, returning `true` if the given object has equivalent\n\t     * property values, else `false`.\n\t     *\n\t     * **Note:** This method supports comparing the same values as `_.isEqual`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n\t     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n\t     */\n\t    function matches(source) {\n\t      return baseMatches(baseClone(source, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a deep partial comparison between the\n\t     * value at `path` of a given object to `srcValue`, returning `true` if the\n\t     * object value is equivalent, else `false`.\n\t     *\n\t     * **Note:** This method supports comparing the same values as `_.isEqual`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * _.find(users, _.matchesProperty('user', 'fred'));\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    function matchesProperty(path, srcValue) {\n\t      return baseMatchesProperty(path, baseClone(srcValue, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `path` of a given object.\n\t     * Any additional arguments are provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n\t     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.method('a.b.c'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.invokeMap(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n\t     * // => [1, 2]\n\t     */\n\t    var method = rest(function(path, args) {\n\t      return function(object) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.method`; this method creates a function that invokes\n\t     * the method at a given path of `object`. Any additional arguments are\n\t     * provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var array = _.times(3, _.constant),\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    var methodOf = rest(function(object, args) {\n\t      return function(path) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * Adds all own enumerable function properties of a source object to the\n\t     * destination object. If `object` is a function then methods are added to\n\t     * its prototype as well.\n\t     *\n\t     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n\t     * avoid conflicts caused by modifying the original.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Function|Object} [object=lodash] The destination object.\n\t     * @param {Object} source The object of functions to add.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.chain=true] Specify whether the functions added\n\t     *  are chainable.\n\t     * @returns {Function|Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function vowels(string) {\n\t     *   return _.filter(string, function(v) {\n\t     *     return /[aeiou]/i.test(v);\n\t     *   });\n\t     * }\n\t     *\n\t     * _.mixin({ 'vowels': vowels });\n\t     * _.vowels('fred');\n\t     * // => ['e']\n\t     *\n\t     * _('fred').vowels().value();\n\t     * // => ['e']\n\t     *\n\t     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n\t     * _('fred').vowels();\n\t     * // => ['e']\n\t     */\n\t    function mixin(object, source, options) {\n\t      var props = keys(source),\n\t          methodNames = baseFunctions(source, props);\n\t\n\t      if (options == null &&\n\t          !(isObject(source) && (methodNames.length || !props.length))) {\n\t        options = source;\n\t        source = object;\n\t        object = this;\n\t        methodNames = baseFunctions(source, keys(source));\n\t      }\n\t      var chain = (isObject(options) && 'chain' in options) ? options.chain : true,\n\t          isFunc = isFunction(object);\n\t\n\t      arrayEach(methodNames, function(methodName) {\n\t        var func = source[methodName];\n\t        object[methodName] = func;\n\t        if (isFunc) {\n\t          object.prototype[methodName] = function() {\n\t            var chainAll = this.__chain__;\n\t            if (chain || chainAll) {\n\t              var result = object(this.__wrapped__),\n\t                  actions = result.__actions__ = copyArray(this.__actions__);\n\t\n\t              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n\t              result.__chain__ = chainAll;\n\t              return result;\n\t            }\n\t            return func.apply(object, arrayPush([this.value()], arguments));\n\t          };\n\t        }\n\t      });\n\t\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Reverts the `_` variable to its previous value and returns a reference to\n\t     * the `lodash` function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @returns {Function} Returns the `lodash` function.\n\t     * @example\n\t     *\n\t     * var lodash = _.noConflict();\n\t     */\n\t    function noConflict() {\n\t      if (root._ === this) {\n\t        root._ = oldDash;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * A no-operation function that returns `undefined` regardless of the\n\t     * arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * _.noop(object) === undefined;\n\t     * // => true\n\t     */\n\t    function noop() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns its nth argument.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} [n=0] The index of the argument to return.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.nthArg(1);\n\t     *\n\t     * func('a', 'b', 'c');\n\t     * // => 'b'\n\t     */\n\t    function nthArg(n) {\n\t      n = toInteger(n);\n\t      return function() {\n\t        return arguments[n];\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `iteratees` with the arguments provided\n\t     * to the created function and returns their results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} iteratees The iteratees to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.over(Math.max, Math.min);\n\t     *\n\t     * func(1, 2, 3, 4);\n\t     * // => [4, 1]\n\t     */\n\t    var over = createOver(arrayMap);\n\t\n\t    /**\n\t     * Creates a function that checks if **all** of the `predicates` return\n\t     * truthy when invoked with the arguments provided to the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} predicates The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overEvery(Boolean, isFinite);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => false\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overEvery = createOver(arrayEvery);\n\t\n\t    /**\n\t     * Creates a function that checks if **any** of the `predicates` return\n\t     * truthy when invoked with the arguments provided to the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} predicates The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overSome(Boolean, isFinite);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => true\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overSome = createOver(arraySome);\n\t\n\t    /**\n\t     * Creates a function that returns the value at `path` of a given object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': { 'c': 2 } } },\n\t     *   { 'a': { 'b': { 'c': 1 } } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.property('a.b.c'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.map(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n\t     * // => [1, 2]\n\t     */\n\t    function property(path) {\n\t      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.property`; this method creates a function that returns\n\t     * the value at a given path of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var array = [0, 1, 2],\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    function propertyOf(object) {\n\t      return function(path) {\n\t        return object == null ? undefined : baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates an array of numbers (positive and/or negative) progressing from\n\t     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n\t     * `start` is specified without an `end` or `step`. If `end` is not specified\n\t     * it's set to `start` with `start` then set to `0`.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the new array of numbers.\n\t     * @example\n\t     *\n\t     * _.range(4);\n\t     * // => [0, 1, 2, 3]\n\t     *\n\t     * _.range(-4);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 5);\n\t     * // => [1, 2, 3, 4]\n\t     *\n\t     * _.range(0, 20, 5);\n\t     * // => [0, 5, 10, 15]\n\t     *\n\t     * _.range(0, -4, -1);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.range(0);\n\t     * // => []\n\t     */\n\t    var range = createRange();\n\t\n\t    /**\n\t     * This method is like `_.range` except that it populates values in\n\t     * descending order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the new array of numbers.\n\t     * @example\n\t     *\n\t     * _.rangeRight(4);\n\t     * // => [3, 2, 1, 0]\n\t     *\n\t     * _.rangeRight(-4);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 5);\n\t     * // => [4, 3, 2, 1]\n\t     *\n\t     * _.rangeRight(0, 20, 5);\n\t     * // => [15, 10, 5, 0]\n\t     *\n\t     * _.rangeRight(0, -4, -1);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.rangeRight(0);\n\t     * // => []\n\t     */\n\t    var rangeRight = createRange(true);\n\t\n\t    /**\n\t     * Invokes the iteratee function `n` times, returning an array of the results\n\t     * of each invocation. The iteratee is invoked with one argument; (index).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} n The number of times to invoke `iteratee`.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.times(3, String);\n\t     * // => ['0', '1', '2']\n\t     *\n\t     *  _.times(4, _.constant(true));\n\t     * // => [true, true, true, true]\n\t     */\n\t    function times(n, iteratee) {\n\t      n = toInteger(n);\n\t      if (n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return [];\n\t      }\n\t      var index = MAX_ARRAY_LENGTH,\n\t          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\t\n\t      iteratee = toFunction(iteratee);\n\t      n -= MAX_ARRAY_LENGTH;\n\t\n\t      var result = baseTimes(length, iteratee);\n\t      while (++index < n) {\n\t        iteratee(index);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a property path array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the new property path array.\n\t     * @example\n\t     *\n\t     * _.toPath('a.b.c');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toPath('a[0].b.c');\n\t     * // => ['a', '0', 'b', 'c']\n\t     *\n\t     * var path = ['a', 'b', 'c'],\n\t     *     newPath = _.toPath(path);\n\t     *\n\t     * console.log(newPath);\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * console.log(path === newPath);\n\t     * // => false\n\t     */\n\t    function toPath(value) {\n\t      return isArray(value) ? arrayMap(value, String) : stringToPath(value);\n\t    }\n\t\n\t    /**\n\t     * Generates a unique ID. If `prefix` is given the ID is appended to it.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {string} [prefix] The value to prefix the ID with.\n\t     * @returns {string} Returns the unique ID.\n\t     * @example\n\t     *\n\t     * _.uniqueId('contact_');\n\t     * // => 'contact_104'\n\t     *\n\t     * _.uniqueId();\n\t     * // => '105'\n\t     */\n\t    function uniqueId(prefix) {\n\t      var id = ++idCounter;\n\t      return toString(prefix) + id;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Adds two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} augend The first number in an addition.\n\t     * @param {number} addend The second number in an addition.\n\t     * @returns {number} Returns the total.\n\t     * @example\n\t     *\n\t     * _.add(6, 4);\n\t     * // => 10\n\t     */\n\t    function add(augend, addend) {\n\t      var result;\n\t      if (augend === undefined && addend === undefined) {\n\t        return 0;\n\t      }\n\t      if (augend !== undefined) {\n\t        result = augend;\n\t      }\n\t      if (addend !== undefined) {\n\t        result = result === undefined ? addend : (result + addend);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Computes `number` rounded up to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} number The number to round up.\n\t     * @param {number} [precision=0] The precision to round up to.\n\t     * @returns {number} Returns the rounded up number.\n\t     * @example\n\t     *\n\t     * _.ceil(4.006);\n\t     * // => 5\n\t     *\n\t     * _.ceil(6.004, 2);\n\t     * // => 6.01\n\t     *\n\t     * _.ceil(6040, -2);\n\t     * // => 6100\n\t     */\n\t    var ceil = createRound('ceil');\n\t\n\t    /**\n\t     * Computes `number` rounded down to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} number The number to round down.\n\t     * @param {number} [precision=0] The precision to round down to.\n\t     * @returns {number} Returns the rounded down number.\n\t     * @example\n\t     *\n\t     * _.floor(4.006);\n\t     * // => 4\n\t     *\n\t     * _.floor(0.046, 2);\n\t     * // => 0.04\n\t     *\n\t     * _.floor(4060, -2);\n\t     * // => 4000\n\t     */\n\t    var floor = createRound('floor');\n\t\n\t    /**\n\t     * Computes the maximum value of `array`. If `array` is empty or falsey\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * _.max([4, 2, 8, 6]);\n\t     * // => 8\n\t     *\n\t     * _.max([]);\n\t     * // => undefined\n\t     */\n\t    function max(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, gt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.max` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.maxBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 2 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.maxBy(objects, 'n');\n\t     * // => { 'n': 2 }\n\t     */\n\t    function maxBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee), gt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Computes the mean of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the mean.\n\t     * @example\n\t     *\n\t     * _.mean([4, 2, 8, 6]);\n\t     * // => 5\n\t     */\n\t    function mean(array) {\n\t      return sum(array) / (array ? array.length : 0);\n\t    }\n\t\n\t    /**\n\t     * Computes the minimum value of `array`. If `array` is empty or falsey\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * _.min([4, 2, 8, 6]);\n\t     * // => 2\n\t     *\n\t     * _.min([]);\n\t     * // => undefined\n\t     */\n\t    function min(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, lt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.min` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.minBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 1 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.minBy(objects, 'n');\n\t     * // => { 'n': 1 }\n\t     */\n\t    function minBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee), lt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Computes `number` rounded to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} number The number to round.\n\t     * @param {number} [precision=0] The precision to round to.\n\t     * @returns {number} Returns the rounded number.\n\t     * @example\n\t     *\n\t     * _.round(4.006);\n\t     * // => 4\n\t     *\n\t     * _.round(4.006, 2);\n\t     * // => 4.01\n\t     *\n\t     * _.round(4060, -2);\n\t     * // => 4100\n\t     */\n\t    var round = createRound('round');\n\t\n\t    /**\n\t     * Subtract two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} minuend The first number in a subtraction.\n\t     * @param {number} subtrahend The second number in a subtraction.\n\t     * @returns {number} Returns the difference.\n\t     * @example\n\t     *\n\t     * _.subtract(6, 4);\n\t     * // => 2\n\t     */\n\t    function subtract(minuend, subtrahend) {\n\t      var result;\n\t      if (minuend === undefined && subtrahend === undefined) {\n\t        return 0;\n\t      }\n\t      if (minuend !== undefined) {\n\t        result = minuend;\n\t      }\n\t      if (subtrahend !== undefined) {\n\t        result = result === undefined ? subtrahend : (result - subtrahend);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Computes the sum of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.sum([4, 2, 8, 6]);\n\t     * // => 20\n\t     */\n\t    function sum(array) {\n\t      return (array && array.length)\n\t        ? baseSum(array, identity)\n\t        : 0;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sum` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the value to be summed.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\t     *\n\t     * _.sumBy(objects, function(o) { return o.n; });\n\t     * // => 20\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sumBy(objects, 'n');\n\t     * // => 20\n\t     */\n\t    function sumBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSum(array, getIteratee(iteratee))\n\t        : 0;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Ensure wrappers are instances of `baseLodash`.\n\t    lodash.prototype = baseLodash.prototype;\n\t\n\t    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LodashWrapper.prototype.constructor = LodashWrapper;\n\t\n\t    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LazyWrapper.prototype.constructor = LazyWrapper;\n\t\n\t    // Avoid inheriting from `Object.prototype` when possible.\n\t    Hash.prototype = nativeCreate ? nativeCreate(null) : objectProto;\n\t\n\t    // Add functions to the `MapCache`.\n\t    MapCache.prototype.clear = mapClear;\n\t    MapCache.prototype['delete'] = mapDelete;\n\t    MapCache.prototype.get = mapGet;\n\t    MapCache.prototype.has = mapHas;\n\t    MapCache.prototype.set = mapSet;\n\t\n\t    // Add functions to the `SetCache`.\n\t    SetCache.prototype.push = cachePush;\n\t\n\t    // Add functions to the `Stack` cache.\n\t    Stack.prototype.clear = stackClear;\n\t    Stack.prototype['delete'] = stackDelete;\n\t    Stack.prototype.get = stackGet;\n\t    Stack.prototype.has = stackHas;\n\t    Stack.prototype.set = stackSet;\n\t\n\t    // Assign cache to `_.memoize`.\n\t    memoize.Cache = MapCache;\n\t\n\t    // Add functions that return wrapped values when chaining.\n\t    lodash.after = after;\n\t    lodash.ary = ary;\n\t    lodash.assign = assign;\n\t    lodash.assignIn = assignIn;\n\t    lodash.assignInWith = assignInWith;\n\t    lodash.assignWith = assignWith;\n\t    lodash.at = at;\n\t    lodash.before = before;\n\t    lodash.bind = bind;\n\t    lodash.bindAll = bindAll;\n\t    lodash.bindKey = bindKey;\n\t    lodash.chain = chain;\n\t    lodash.chunk = chunk;\n\t    lodash.compact = compact;\n\t    lodash.concat = concat;\n\t    lodash.cond = cond;\n\t    lodash.conforms = conforms;\n\t    lodash.constant = constant;\n\t    lodash.countBy = countBy;\n\t    lodash.create = create;\n\t    lodash.curry = curry;\n\t    lodash.curryRight = curryRight;\n\t    lodash.debounce = debounce;\n\t    lodash.defaults = defaults;\n\t    lodash.defaultsDeep = defaultsDeep;\n\t    lodash.defer = defer;\n\t    lodash.delay = delay;\n\t    lodash.difference = difference;\n\t    lodash.differenceBy = differenceBy;\n\t    lodash.differenceWith = differenceWith;\n\t    lodash.drop = drop;\n\t    lodash.dropRight = dropRight;\n\t    lodash.dropRightWhile = dropRightWhile;\n\t    lodash.dropWhile = dropWhile;\n\t    lodash.fill = fill;\n\t    lodash.filter = filter;\n\t    lodash.flatMap = flatMap;\n\t    lodash.flatten = flatten;\n\t    lodash.flattenDeep = flattenDeep;\n\t    lodash.flip = flip;\n\t    lodash.flow = flow;\n\t    lodash.flowRight = flowRight;\n\t    lodash.fromPairs = fromPairs;\n\t    lodash.functions = functions;\n\t    lodash.functionsIn = functionsIn;\n\t    lodash.groupBy = groupBy;\n\t    lodash.initial = initial;\n\t    lodash.intersection = intersection;\n\t    lodash.intersectionBy = intersectionBy;\n\t    lodash.intersectionWith = intersectionWith;\n\t    lodash.invert = invert;\n\t    lodash.invertBy = invertBy;\n\t    lodash.invokeMap = invokeMap;\n\t    lodash.iteratee = iteratee;\n\t    lodash.keyBy = keyBy;\n\t    lodash.keys = keys;\n\t    lodash.keysIn = keysIn;\n\t    lodash.map = map;\n\t    lodash.mapKeys = mapKeys;\n\t    lodash.mapValues = mapValues;\n\t    lodash.matches = matches;\n\t    lodash.matchesProperty = matchesProperty;\n\t    lodash.memoize = memoize;\n\t    lodash.merge = merge;\n\t    lodash.mergeWith = mergeWith;\n\t    lodash.method = method;\n\t    lodash.methodOf = methodOf;\n\t    lodash.mixin = mixin;\n\t    lodash.negate = negate;\n\t    lodash.nthArg = nthArg;\n\t    lodash.omit = omit;\n\t    lodash.omitBy = omitBy;\n\t    lodash.once = once;\n\t    lodash.orderBy = orderBy;\n\t    lodash.over = over;\n\t    lodash.overArgs = overArgs;\n\t    lodash.overEvery = overEvery;\n\t    lodash.overSome = overSome;\n\t    lodash.partial = partial;\n\t    lodash.partialRight = partialRight;\n\t    lodash.partition = partition;\n\t    lodash.pick = pick;\n\t    lodash.pickBy = pickBy;\n\t    lodash.property = property;\n\t    lodash.propertyOf = propertyOf;\n\t    lodash.pull = pull;\n\t    lodash.pullAll = pullAll;\n\t    lodash.pullAllBy = pullAllBy;\n\t    lodash.pullAt = pullAt;\n\t    lodash.range = range;\n\t    lodash.rangeRight = rangeRight;\n\t    lodash.rearg = rearg;\n\t    lodash.reject = reject;\n\t    lodash.remove = remove;\n\t    lodash.rest = rest;\n\t    lodash.reverse = reverse;\n\t    lodash.sampleSize = sampleSize;\n\t    lodash.set = set;\n\t    lodash.setWith = setWith;\n\t    lodash.shuffle = shuffle;\n\t    lodash.slice = slice;\n\t    lodash.sortBy = sortBy;\n\t    lodash.sortedUniq = sortedUniq;\n\t    lodash.sortedUniqBy = sortedUniqBy;\n\t    lodash.split = split;\n\t    lodash.spread = spread;\n\t    lodash.tail = tail;\n\t    lodash.take = take;\n\t    lodash.takeRight = takeRight;\n\t    lodash.takeRightWhile = takeRightWhile;\n\t    lodash.takeWhile = takeWhile;\n\t    lodash.tap = tap;\n\t    lodash.throttle = throttle;\n\t    lodash.thru = thru;\n\t    lodash.toArray = toArray;\n\t    lodash.toPairs = toPairs;\n\t    lodash.toPairsIn = toPairsIn;\n\t    lodash.toPath = toPath;\n\t    lodash.toPlainObject = toPlainObject;\n\t    lodash.transform = transform;\n\t    lodash.unary = unary;\n\t    lodash.union = union;\n\t    lodash.unionBy = unionBy;\n\t    lodash.unionWith = unionWith;\n\t    lodash.uniq = uniq;\n\t    lodash.uniqBy = uniqBy;\n\t    lodash.uniqWith = uniqWith;\n\t    lodash.unset = unset;\n\t    lodash.unzip = unzip;\n\t    lodash.unzipWith = unzipWith;\n\t    lodash.values = values;\n\t    lodash.valuesIn = valuesIn;\n\t    lodash.without = without;\n\t    lodash.words = words;\n\t    lodash.wrap = wrap;\n\t    lodash.xor = xor;\n\t    lodash.xorBy = xorBy;\n\t    lodash.xorWith = xorWith;\n\t    lodash.zip = zip;\n\t    lodash.zipObject = zipObject;\n\t    lodash.zipObjectDeep = zipObjectDeep;\n\t    lodash.zipWith = zipWith;\n\t\n\t    // Add aliases.\n\t    lodash.extend = assignIn;\n\t    lodash.extendWith = assignInWith;\n\t\n\t    // Add functions to `lodash.prototype`.\n\t    mixin(lodash, lodash);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add functions that return unwrapped values when chaining.\n\t    lodash.add = add;\n\t    lodash.attempt = attempt;\n\t    lodash.camelCase = camelCase;\n\t    lodash.capitalize = capitalize;\n\t    lodash.ceil = ceil;\n\t    lodash.clamp = clamp;\n\t    lodash.clone = clone;\n\t    lodash.cloneDeep = cloneDeep;\n\t    lodash.cloneDeepWith = cloneDeepWith;\n\t    lodash.cloneWith = cloneWith;\n\t    lodash.deburr = deburr;\n\t    lodash.endsWith = endsWith;\n\t    lodash.eq = eq;\n\t    lodash.escape = escape;\n\t    lodash.escapeRegExp = escapeRegExp;\n\t    lodash.every = every;\n\t    lodash.find = find;\n\t    lodash.findIndex = findIndex;\n\t    lodash.findKey = findKey;\n\t    lodash.findLast = findLast;\n\t    lodash.findLastIndex = findLastIndex;\n\t    lodash.findLastKey = findLastKey;\n\t    lodash.floor = floor;\n\t    lodash.forEach = forEach;\n\t    lodash.forEachRight = forEachRight;\n\t    lodash.forIn = forIn;\n\t    lodash.forInRight = forInRight;\n\t    lodash.forOwn = forOwn;\n\t    lodash.forOwnRight = forOwnRight;\n\t    lodash.get = get;\n\t    lodash.gt = gt;\n\t    lodash.gte = gte;\n\t    lodash.has = has;\n\t    lodash.hasIn = hasIn;\n\t    lodash.head = head;\n\t    lodash.identity = identity;\n\t    lodash.includes = includes;\n\t    lodash.indexOf = indexOf;\n\t    lodash.inRange = inRange;\n\t    lodash.invoke = invoke;\n\t    lodash.isArguments = isArguments;\n\t    lodash.isArray = isArray;\n\t    lodash.isArrayBuffer = isArrayBuffer;\n\t    lodash.isArrayLike = isArrayLike;\n\t    lodash.isArrayLikeObject = isArrayLikeObject;\n\t    lodash.isBoolean = isBoolean;\n\t    lodash.isBuffer = isBuffer;\n\t    lodash.isDate = isDate;\n\t    lodash.isElement = isElement;\n\t    lodash.isEmpty = isEmpty;\n\t    lodash.isEqual = isEqual;\n\t    lodash.isEqualWith = isEqualWith;\n\t    lodash.isError = isError;\n\t    lodash.isFinite = isFinite;\n\t    lodash.isFunction = isFunction;\n\t    lodash.isInteger = isInteger;\n\t    lodash.isLength = isLength;\n\t    lodash.isMap = isMap;\n\t    lodash.isMatch = isMatch;\n\t    lodash.isMatchWith = isMatchWith;\n\t    lodash.isNaN = isNaN;\n\t    lodash.isNative = isNative;\n\t    lodash.isNil = isNil;\n\t    lodash.isNull = isNull;\n\t    lodash.isNumber = isNumber;\n\t    lodash.isObject = isObject;\n\t    lodash.isObjectLike = isObjectLike;\n\t    lodash.isPlainObject = isPlainObject;\n\t    lodash.isRegExp = isRegExp;\n\t    lodash.isSafeInteger = isSafeInteger;\n\t    lodash.isSet = isSet;\n\t    lodash.isString = isString;\n\t    lodash.isSymbol = isSymbol;\n\t    lodash.isTypedArray = isTypedArray;\n\t    lodash.isUndefined = isUndefined;\n\t    lodash.isWeakMap = isWeakMap;\n\t    lodash.isWeakSet = isWeakSet;\n\t    lodash.join = join;\n\t    lodash.kebabCase = kebabCase;\n\t    lodash.last = last;\n\t    lodash.lastIndexOf = lastIndexOf;\n\t    lodash.lowerCase = lowerCase;\n\t    lodash.lowerFirst = lowerFirst;\n\t    lodash.lt = lt;\n\t    lodash.lte = lte;\n\t    lodash.max = max;\n\t    lodash.maxBy = maxBy;\n\t    lodash.mean = mean;\n\t    lodash.min = min;\n\t    lodash.minBy = minBy;\n\t    lodash.noConflict = noConflict;\n\t    lodash.noop = noop;\n\t    lodash.now = now;\n\t    lodash.pad = pad;\n\t    lodash.padEnd = padEnd;\n\t    lodash.padStart = padStart;\n\t    lodash.parseInt = parseInt;\n\t    lodash.random = random;\n\t    lodash.reduce = reduce;\n\t    lodash.reduceRight = reduceRight;\n\t    lodash.repeat = repeat;\n\t    lodash.replace = replace;\n\t    lodash.result = result;\n\t    lodash.round = round;\n\t    lodash.runInContext = runInContext;\n\t    lodash.sample = sample;\n\t    lodash.size = size;\n\t    lodash.snakeCase = snakeCase;\n\t    lodash.some = some;\n\t    lodash.sortedIndex = sortedIndex;\n\t    lodash.sortedIndexBy = sortedIndexBy;\n\t    lodash.sortedIndexOf = sortedIndexOf;\n\t    lodash.sortedLastIndex = sortedLastIndex;\n\t    lodash.sortedLastIndexBy = sortedLastIndexBy;\n\t    lodash.sortedLastIndexOf = sortedLastIndexOf;\n\t    lodash.startCase = startCase;\n\t    lodash.startsWith = startsWith;\n\t    lodash.subtract = subtract;\n\t    lodash.sum = sum;\n\t    lodash.sumBy = sumBy;\n\t    lodash.template = template;\n\t    lodash.times = times;\n\t    lodash.toInteger = toInteger;\n\t    lodash.toLength = toLength;\n\t    lodash.toLower = toLower;\n\t    lodash.toNumber = toNumber;\n\t    lodash.toSafeInteger = toSafeInteger;\n\t    lodash.toString = toString;\n\t    lodash.toUpper = toUpper;\n\t    lodash.trim = trim;\n\t    lodash.trimEnd = trimEnd;\n\t    lodash.trimStart = trimStart;\n\t    lodash.truncate = truncate;\n\t    lodash.unescape = unescape;\n\t    lodash.uniqueId = uniqueId;\n\t    lodash.upperCase = upperCase;\n\t    lodash.upperFirst = upperFirst;\n\t\n\t    // Add aliases.\n\t    lodash.each = forEach;\n\t    lodash.eachRight = forEachRight;\n\t    lodash.first = head;\n\t\n\t    mixin(lodash, (function() {\n\t      var source = {};\n\t      baseForOwn(lodash, function(func, methodName) {\n\t        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n\t          source[methodName] = func;\n\t        }\n\t      });\n\t      return source;\n\t    }()), { 'chain': false });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The semantic version number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type string\n\t     */\n\t    lodash.VERSION = VERSION;\n\t\n\t    // Assign default placeholders.\n\t    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n\t      lodash[methodName].placeholder = lodash;\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n\t    arrayEach(['drop', 'take'], function(methodName, index) {\n\t      LazyWrapper.prototype[methodName] = function(n) {\n\t        var filtered = this.__filtered__;\n\t        if (filtered && !index) {\n\t          return new LazyWrapper(this);\n\t        }\n\t        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\t\n\t        var result = this.clone();\n\t        if (filtered) {\n\t          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n\t        } else {\n\t          result.__views__.push({ 'size': nativeMin(n, MAX_ARRAY_LENGTH), 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n\t        }\n\t        return result;\n\t      };\n\t\n\t      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n\t        return this.reverse()[methodName](n).reverse();\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods that accept an `iteratee` value.\n\t    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n\t      var type = index + 1,\n\t          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\t\n\t      LazyWrapper.prototype[methodName] = function(iteratee) {\n\t        var result = this.clone();\n\t        result.__iteratees__.push({ 'iteratee': getIteratee(iteratee, 3), 'type': type });\n\t        result.__filtered__ = result.__filtered__ || isFilter;\n\t        return result;\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n\t    arrayEach(['head', 'last'], function(methodName, index) {\n\t      var takeName = 'take' + (index ? 'Right' : '');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this[takeName](1).value()[0];\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n\t    arrayEach(['initial', 'tail'], function(methodName, index) {\n\t      var dropName = 'drop' + (index ? '' : 'Right');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n\t      };\n\t    });\n\t\n\t    LazyWrapper.prototype.compact = function() {\n\t      return this.filter(identity);\n\t    };\n\t\n\t    LazyWrapper.prototype.find = function(predicate) {\n\t      return this.filter(predicate).head();\n\t    };\n\t\n\t    LazyWrapper.prototype.findLast = function(predicate) {\n\t      return this.reverse().find(predicate);\n\t    };\n\t\n\t    LazyWrapper.prototype.invokeMap = rest(function(path, args) {\n\t      if (typeof path == 'function') {\n\t        return new LazyWrapper(this);\n\t      }\n\t      return this.map(function(value) {\n\t        return baseInvoke(value, path, args);\n\t      });\n\t    });\n\t\n\t    LazyWrapper.prototype.reject = function(predicate) {\n\t      predicate = getIteratee(predicate, 3);\n\t      return this.filter(function(value) {\n\t        return !predicate(value);\n\t      });\n\t    };\n\t\n\t    LazyWrapper.prototype.slice = function(start, end) {\n\t      start = toInteger(start);\n\t\n\t      var result = this;\n\t      if (result.__filtered__ && (start > 0 || end < 0)) {\n\t        return new LazyWrapper(result);\n\t      }\n\t      if (start < 0) {\n\t        result = result.takeRight(-start);\n\t      } else if (start) {\n\t        result = result.drop(start);\n\t      }\n\t      if (end !== undefined) {\n\t        end = toInteger(end);\n\t        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n\t      return this.reverse().takeWhile(predicate).reverse();\n\t    };\n\t\n\t    LazyWrapper.prototype.toArray = function() {\n\t      return this.take(MAX_ARRAY_LENGTH);\n\t    };\n\t\n\t    // Add `LazyWrapper` methods to `lodash.prototype`.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n\t          isTaker = /^(?:head|last)$/.test(methodName),\n\t          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n\t          retUnwrapped = isTaker || /^find/.test(methodName);\n\t\n\t      if (!lodashFunc) {\n\t        return;\n\t      }\n\t      lodash.prototype[methodName] = function() {\n\t        var value = this.__wrapped__,\n\t            args = isTaker ? [1] : arguments,\n\t            isLazy = value instanceof LazyWrapper,\n\t            iteratee = args[0],\n\t            useLazy = isLazy || isArray(value);\n\t\n\t        var interceptor = function(value) {\n\t          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n\t          return (isTaker && chainAll) ? result[0] : result;\n\t        };\n\t\n\t        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n\t          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n\t          isLazy = useLazy = false;\n\t        }\n\t        var chainAll = this.__chain__,\n\t            isHybrid = !!this.__actions__.length,\n\t            isUnwrapped = retUnwrapped && !chainAll,\n\t            onlyLazy = isLazy && !isHybrid;\n\t\n\t        if (!retUnwrapped && useLazy) {\n\t          value = onlyLazy ? value : new LazyWrapper(this);\n\t          var result = func.apply(value, args);\n\t          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n\t          return new LodashWrapper(result, chainAll);\n\t        }\n\t        if (isUnwrapped && onlyLazy) {\n\t          return func.apply(this, args);\n\t        }\n\t        result = this.thru(interceptor);\n\t        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n\t      };\n\t    });\n\t\n\t    // Add `Array` and `String` methods to `lodash.prototype`.\n\t    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n\t      var func = arrayProto[methodName],\n\t          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n\t          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\t\n\t      lodash.prototype[methodName] = function() {\n\t        var args = arguments;\n\t        if (retUnwrapped && !this.__chain__) {\n\t          return func.apply(this.value(), args);\n\t        }\n\t        return this[chainName](function(value) {\n\t          return func.apply(value, args);\n\t        });\n\t      };\n\t    });\n\t\n\t    // Map minified function names to their real names.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var lodashFunc = lodash[methodName];\n\t      if (lodashFunc) {\n\t        var key = (lodashFunc.name + ''),\n\t            names = realNames[key] || (realNames[key] = []);\n\t\n\t        names.push({ 'name': methodName, 'func': lodashFunc });\n\t      }\n\t    });\n\t\n\t    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': undefined }];\n\t\n\t    // Add functions to the lazy wrapper.\n\t    LazyWrapper.prototype.clone = lazyClone;\n\t    LazyWrapper.prototype.reverse = lazyReverse;\n\t    LazyWrapper.prototype.value = lazyValue;\n\t\n\t    // Add chaining functions to the `lodash` wrapper.\n\t    lodash.prototype.at = wrapperAt;\n\t    lodash.prototype.chain = wrapperChain;\n\t    lodash.prototype.commit = wrapperCommit;\n\t    lodash.prototype.flatMap = wrapperFlatMap;\n\t    lodash.prototype.next = wrapperNext;\n\t    lodash.prototype.plant = wrapperPlant;\n\t    lodash.prototype.reverse = wrapperReverse;\n\t    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\t\n\t    if (iteratorSymbol) {\n\t      lodash.prototype[iteratorSymbol] = wrapperToIterator;\n\t    }\n\t    return lodash;\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  // Export lodash.\n\t  var _ = runInContext();\n\t\n\t  // Expose lodash on the free variable `window` or `self` when available. This\n\t  // prevents errors in cases where lodash is loaded by a script tag in the presence\n\t  // of an AMD loader. See http://requirejs.org/docs/errors.html#mismatch for more details.\n\t  (freeWindow || freeSelf || {})._ = _;\n\t\n\t  // Some AMD build optimizers like r.js check for condition patterns like the following:\n\t  if (true) {\n\t    // Define as an anonymous module so, through path mapping, it can be\n\t    // referenced as the \"underscore\" module.\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return _;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n\t  else if (freeExports && freeModule) {\n\t    // Export for Node.js.\n\t    if (moduleExports) {\n\t      (freeModule.exports = _)._ = _;\n\t    }\n\t    // Export for CommonJS support.\n\t    freeExports._ = _;\n\t  }\n\t  else {\n\t    // Export to the global object.\n\t    root._ = _;\n\t  }\n\t}.call(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)(module)))\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _lodash = __webpack_require__(5);\n\t\n\tvar _ = _interopRequireWildcard(_lodash);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Fetch = function () {\n\t  function Fetch(colors) {\n\t    _classCallCheck(this, Fetch);\n\t\n\t    this.colors = _.shuffle(colors);\n\t  }\n\t\n\t  _createClass(Fetch, [{\n\t    key: 'all',\n\t    value: function all() {\n\t      return this.colors;\n\t    }\n\t  }, {\n\t    key: 'many',\n\t    value: function many() {\n\t      var count = arguments.length <= 0 || arguments[0] === undefined ? 1 : arguments[0];\n\t\n\t      if (!_.isNumber(count)) {\n\t        count = 1;\n\t      }\n\t      return _.sampleSize(_.shuffle(this.colors), count);\n\t    }\n\t  }]);\n\t\n\t  return Fetch;\n\t}();\n\t\n\texports.default = Fetch;\n\t;\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=flat-ui-colors.js.map"],"sourceRoot":"/source/"}